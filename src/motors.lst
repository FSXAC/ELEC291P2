0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Mar 31 14:07:53 2017
0000              5   ;--------------------------------------------------------
                  5   $name motors
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _uturn
0000             30            public _turncar
0000             31            public _stopcar
0000             32            public _linetrack
0000             33            public _readData
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _forward_backward
0000             39            public _Timer2_ISR
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _currentstate
0000             44            public _currentcmd
0000             45            public _direction
0000             46            public _pwm_Right1
0000             47            public _pwm_Right0
0000             48            public _pwm_Left1
0000             49            public _pwm_Left0
0000             50            public _pwm_both
0000             51            public _mode
0000             52            public _pwm_count
0000             53   ;--------------------------------------------------------
0000             54   ; Special Function Registers
0000             55   ;--------------------------------------------------------
0000             56   _P0             DATA 0x80
0000             57   _SP             DATA 0x81
0000             58   _DPL            DATA 0x82
0000             59   _DPH            DATA 0x83
0000             60   _EMI0TC         DATA 0x84
0000             61   _EMI0CF         DATA 0x85
0000             62   _OSCLCN         DATA 0x86
0000             63   _PCON           DATA 0x87
0000             64   _TCON           DATA 0x88
0000             65   _TMOD           DATA 0x89
0000             66   _TL0            DATA 0x8a
0000             67   _TL1            DATA 0x8b
0000             68   _TH0            DATA 0x8c
0000             69   _TH1            DATA 0x8d
0000             70   _CKCON          DATA 0x8e
0000             71   _PSCTL          DATA 0x8f
0000             72   _P1             DATA 0x90
0000             73   _TMR3CN         DATA 0x91
0000             74   _TMR4CN         DATA 0x91
0000             75   _TMR3RLL        DATA 0x92
0000             76   _TMR4RLL        DATA 0x92
0000             77   _TMR3RLH        DATA 0x93
0000             78   _TMR4RLH        DATA 0x93
0000             79   _TMR3L          DATA 0x94
0000             80   _TMR4L          DATA 0x94
0000             81   _TMR3H          DATA 0x95
0000             82   _TMR4H          DATA 0x95
0000             83   _USB0ADR        DATA 0x96
0000             84   _USB0DAT        DATA 0x97
0000             85   _SCON           DATA 0x98
0000             86   _SCON0          DATA 0x98
0000             87   _SBUF           DATA 0x99
0000             88   _SBUF0          DATA 0x99
0000             89   _CPT1CN         DATA 0x9a
0000             90   _CPT0CN         DATA 0x9b
0000             91   _CPT1MD         DATA 0x9c
0000             92   _CPT0MD         DATA 0x9d
0000             93   _CPT1MX         DATA 0x9e
0000             94   _CPT0MX         DATA 0x9f
0000             95   _P2             DATA 0xa0
0000             96   _SPI0CFG        DATA 0xa1
0000             97   _SPI0CKR        DATA 0xa2
0000             98   _SPI0DAT        DATA 0xa3
0000             99   _P0MDOUT        DATA 0xa4
0000            100   _P1MDOUT        DATA 0xa5
0000            101   _P2MDOUT        DATA 0xa6
0000            102   _P3MDOUT        DATA 0xa7
0000            103   _IE             DATA 0xa8
0000            104   _CLKSEL         DATA 0xa9
0000            105   _EMI0CN         DATA 0xaa
0000            106   __XPAGE         DATA 0xaa
0000            107   _SBCON1         DATA 0xac
0000            108   _P4MDOUT        DATA 0xae
0000            109   _PFE0CN         DATA 0xaf
0000            110   _P3             DATA 0xb0
0000            111   _OSCXCN         DATA 0xb1
0000            112   _OSCICN         DATA 0xb2
0000            113   _OSCICL         DATA 0xb3
0000            114   _SBRLL1         DATA 0xb4
0000            115   _SBRLH1         DATA 0xb5
0000            116   _FLSCL          DATA 0xb6
0000            117   _FLKEY          DATA 0xb7
0000            118   _IP             DATA 0xb8
0000            119   _CLKMUL         DATA 0xb9
0000            120   _SMBTC          DATA 0xb9
0000            121   _AMX0N          DATA 0xba
0000            122   _AMX0P          DATA 0xbb
0000            123   _ADC0CF         DATA 0xbc
0000            124   _ADC0L          DATA 0xbd
0000            125   _ADC0H          DATA 0xbe
0000            126   _SFRPAGE        DATA 0xbf
0000            127   _SMB0CN         DATA 0xc0
0000            128   _SMB1CN         DATA 0xc0
0000            129   _SMB0CF         DATA 0xc1
0000            130   _SMB1CF         DATA 0xc1
0000            131   _SMB0DAT        DATA 0xc2
0000            132   _SMB1DAT        DATA 0xc2
0000            133   _ADC0GTL        DATA 0xc3
0000            134   _ADC0GTH        DATA 0xc4
0000            135   _ADC0LTL        DATA 0xc5
0000            136   _ADC0LTH        DATA 0xc6
0000            137   _P4             DATA 0xc7
0000            138   _TMR2CN         DATA 0xc8
0000            139   _TMR5CN         DATA 0xc8
0000            140   _REG01CN        DATA 0xc9
0000            141   _TMR2RLL        DATA 0xca
0000            142   _TMR5RLL        DATA 0xca
0000            143   _TMR2RLH        DATA 0xcb
0000            144   _TMR5RLH        DATA 0xcb
0000            145   _TMR2L          DATA 0xcc
0000            146   _TMR5L          DATA 0xcc
0000            147   _TMR2H          DATA 0xcd
0000            148   _TMR5H          DATA 0xcd
0000            149   _SMB0ADM        DATA 0xce
0000            150   _SMB1ADM        DATA 0xce
0000            151   _SMB0ADR        DATA 0xcf
0000            152   _SMB1ADR        DATA 0xcf
0000            153   _PSW            DATA 0xd0
0000            154   _REF0CN         DATA 0xd1
0000            155   _SCON1          DATA 0xd2
0000            156   _SBUF1          DATA 0xd3
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2SKIP         DATA 0xd6
0000            160   _USB0XCN        DATA 0xd7
0000            161   _PCA0CN         DATA 0xd8
0000            162   _PCA0MD         DATA 0xd9
0000            163   _PCA0CPM0       DATA 0xda
0000            164   _PCA0CPM1       DATA 0xdb
0000            165   _PCA0CPM2       DATA 0xdc
0000            166   _PCA0CPM3       DATA 0xdd
0000            167   _PCA0CPM4       DATA 0xde
0000            168   _P3SKIP         DATA 0xdf
0000            169   _ACC            DATA 0xe0
0000            170   _XBR0           DATA 0xe1
0000            171   _XBR1           DATA 0xe2
0000            172   _XBR2           DATA 0xe3
0000            173   _IT01CF         DATA 0xe4
0000            174   _CKCON1         DATA 0xe4
0000            175   _SMOD1          DATA 0xe5
0000            176   _EIE1           DATA 0xe6
0000            177   _EIE2           DATA 0xe7
0000            178   _ADC0CN         DATA 0xe8
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPH1       DATA 0xea
0000            181   _PCA0CPL2       DATA 0xeb
0000            182   _PCA0CPH2       DATA 0xec
0000            183   _PCA0CPL3       DATA 0xed
0000            184   _PCA0CPH3       DATA 0xee
0000            185   _RSTSRC         DATA 0xef
0000            186   _B              DATA 0xf0
0000            187   _P0MDIN         DATA 0xf1
0000            188   _P1MDIN         DATA 0xf2
0000            189   _P2MDIN         DATA 0xf3
0000            190   _P3MDIN         DATA 0xf4
0000            191   _P4MDIN         DATA 0xf5
0000            192   _EIP1           DATA 0xf6
0000            193   _EIP2           DATA 0xf7
0000            194   _SPI0CN         DATA 0xf8
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0H          DATA 0xfa
0000            197   _PCA0CPL0       DATA 0xfb
0000            198   _PCA0CPH0       DATA 0xfc
0000            199   _PCA0CPL4       DATA 0xfd
0000            200   _PCA0CPH4       DATA 0xfe
0000            201   _VDM0CN         DATA 0xff
0000            202   _DPTR           DATA 0x8382
0000            203   _TMR2RL         DATA 0xcbca
0000            204   _TMR3RL         DATA 0x9392
0000            205   _TMR4RL         DATA 0x9392
0000            206   _TMR5RL         DATA 0xcbca
0000            207   _TMR2           DATA 0xcdcc
0000            208   _TMR3           DATA 0x9594
0000            209   _TMR4           DATA 0x9594
0000            210   _TMR5           DATA 0xcdcc
0000            211   _SBRL1          DATA 0xb5b4
0000            212   _ADC0           DATA 0xbebd
0000            213   _ADC0GT         DATA 0xc4c3
0000            214   _ADC0LT         DATA 0xc6c5
0000            215   _PCA0           DATA 0xfaf9
0000            216   _PCA0CP1        DATA 0xeae9
0000            217   _PCA0CP2        DATA 0xeceb
0000            218   _PCA0CP3        DATA 0xeeed
0000            219   _PCA0CP0        DATA 0xfcfb
0000            220   _PCA0CP4        DATA 0xfefd
0000            221   ;--------------------------------------------------------
0000            222   ; special function bits
0000            223   ;--------------------------------------------------------
0000            224   _P0_0           BIT 0x80
0000            225   _P0_1           BIT 0x81
0000            226   _P0_2           BIT 0x82
0000            227   _P0_3           BIT 0x83
0000            228   _P0_4           BIT 0x84
0000            229   _P0_5           BIT 0x85
0000            230   _P0_6           BIT 0x86
0000            231   _P0_7           BIT 0x87
0000            232   _TF1            BIT 0x8f
0000            233   _TR1            BIT 0x8e
0000            234   _TF0            BIT 0x8d
0000            235   _TR0            BIT 0x8c
0000            236   _IE1            BIT 0x8b
0000            237   _IT1            BIT 0x8a
0000            238   _IE0            BIT 0x89
0000            239   _IT0            BIT 0x88
0000            240   _P1_0           BIT 0x90
0000            241   _P1_1           BIT 0x91
0000            242   _P1_2           BIT 0x92
0000            243   _P1_3           BIT 0x93
0000            244   _P1_4           BIT 0x94
0000            245   _P1_5           BIT 0x95
0000            246   _P1_6           BIT 0x96
0000            247   _P1_7           BIT 0x97
0000            248   _S0MODE         BIT 0x9f
0000            249   _SCON0_6        BIT 0x9e
0000            250   _MCE0           BIT 0x9d
0000            251   _REN0           BIT 0x9c
0000            252   _TB80           BIT 0x9b
0000            253   _RB80           BIT 0x9a
0000            254   _TI0            BIT 0x99
0000            255   _RI0            BIT 0x98
0000            256   _SCON_6         BIT 0x9e
0000            257   _MCE            BIT 0x9d
0000            258   _REN            BIT 0x9c
0000            259   _TB8            BIT 0x9b
0000            260   _RB8            BIT 0x9a
0000            261   _TI             BIT 0x99
0000            262   _RI             BIT 0x98
0000            263   _P2_0           BIT 0xa0
0000            264   _P2_1           BIT 0xa1
0000            265   _P2_2           BIT 0xa2
0000            266   _P2_3           BIT 0xa3
0000            267   _P2_4           BIT 0xa4
0000            268   _P2_5           BIT 0xa5
0000            269   _P2_6           BIT 0xa6
0000            270   _P2_7           BIT 0xa7
0000            271   _EA             BIT 0xaf
0000            272   _ESPI0          BIT 0xae
0000            273   _ET2            BIT 0xad
0000            274   _ES0            BIT 0xac
0000            275   _ET1            BIT 0xab
0000            276   _EX1            BIT 0xaa
0000            277   _ET0            BIT 0xa9
0000            278   _EX0            BIT 0xa8
0000            279   _P3_0           BIT 0xb0
0000            280   _P3_1           BIT 0xb1
0000            281   _P3_2           BIT 0xb2
0000            282   _P3_3           BIT 0xb3
0000            283   _P3_4           BIT 0xb4
0000            284   _P3_5           BIT 0xb5
0000            285   _P3_6           BIT 0xb6
0000            286   _P3_7           BIT 0xb7
0000            287   _IP_7           BIT 0xbf
0000            288   _PSPI0          BIT 0xbe
0000            289   _PT2            BIT 0xbd
0000            290   _PS0            BIT 0xbc
0000            291   _PT1            BIT 0xbb
0000            292   _PX1            BIT 0xba
0000            293   _PT0            BIT 0xb9
0000            294   _PX0            BIT 0xb8
0000            295   _MASTER0        BIT 0xc7
0000            296   _TXMODE0        BIT 0xc6
0000            297   _STA0           BIT 0xc5
0000            298   _STO0           BIT 0xc4
0000            299   _ACKRQ0         BIT 0xc3
0000            300   _ARBLOST0       BIT 0xc2
0000            301   _ACK0           BIT 0xc1
0000            302   _SI0            BIT 0xc0
0000            303   _MASTER1        BIT 0xc7
0000            304   _TXMODE1        BIT 0xc6
0000            305   _STA1           BIT 0xc5
0000            306   _STO1           BIT 0xc4
0000            307   _ACKRQ1         BIT 0xc3
0000            308   _ARBLOST1       BIT 0xc2
0000            309   _ACK1           BIT 0xc1
0000            310   _SI1            BIT 0xc0
0000            311   _TF2            BIT 0xcf
0000            312   _TF2H           BIT 0xcf
0000            313   _TF2L           BIT 0xce
0000            314   _TF2LEN         BIT 0xcd
0000            315   _TF2CEN         BIT 0xcc
0000            316   _T2SPLIT        BIT 0xcb
0000            317   _TR2            BIT 0xca
0000            318   _T2CSS          BIT 0xc9
0000            319   _T2XCLK         BIT 0xc8
0000            320   _TF5H           BIT 0xcf
0000            321   _TF5L           BIT 0xce
0000            322   _TF5LEN         BIT 0xcd
0000            323   _TMR5CN_4       BIT 0xcc
0000            324   _T5SPLIT        BIT 0xcb
0000            325   _TR5            BIT 0xca
0000            326   _TMR5CN_1       BIT 0xc9
0000            327   _T5XCLK         BIT 0xc8
0000            328   _CY             BIT 0xd7
0000            329   _AC             BIT 0xd6
0000            330   _F0             BIT 0xd5
0000            331   _RS1            BIT 0xd4
0000            332   _RS0            BIT 0xd3
0000            333   _OV             BIT 0xd2
0000            334   _F1             BIT 0xd1
0000            335   _PARITY         BIT 0xd0
0000            336   _CF             BIT 0xdf
0000            337   _CR             BIT 0xde
0000            338   _PCA0CN_5       BIT 0xde
0000            339   _CCF4           BIT 0xdc
0000            340   _CCF3           BIT 0xdb
0000            341   _CCF2           BIT 0xda
0000            342   _CCF1           BIT 0xd9
0000            343   _CCF0           BIT 0xd8
0000            344   _ACC_7          BIT 0xe7
0000            345   _ACC_6          BIT 0xe6
0000            346   _ACC_5          BIT 0xe5
0000            347   _ACC_4          BIT 0xe4
0000            348   _ACC_3          BIT 0xe3
0000            349   _ACC_2          BIT 0xe2
0000            350   _ACC_1          BIT 0xe1
0000            351   _ACC_0          BIT 0xe0
0000            352   _AD0EN          BIT 0xef
0000            353   _AD0TM          BIT 0xee
0000            354   _AD0INT         BIT 0xed
0000            355   _AD0BUSY        BIT 0xec
0000            356   _AD0WINT        BIT 0xeb
0000            357   _AD0CM2         BIT 0xea
0000            358   _AD0CM1         BIT 0xe9
0000            359   _AD0CM0         BIT 0xe8
0000            360   _B_7            BIT 0xf7
0000            361   _B_6            BIT 0xf6
0000            362   _B_5            BIT 0xf5
0000            363   _B_4            BIT 0xf4
0000            364   _B_3            BIT 0xf3
0000            365   _B_2            BIT 0xf2
0000            366   _B_1            BIT 0xf1
0000            367   _B_0            BIT 0xf0
0000            368   _SPIF           BIT 0xff
0000            369   _WCOL           BIT 0xfe
0000            370   _MODF           BIT 0xfd
0000            371   _RXOVRN         BIT 0xfc
0000            372   _NSSMD1         BIT 0xfb
0000            373   _NSSMD0         BIT 0xfa
0000            374   _TXBMT          BIT 0xf9
0000            375   _SPIEN          BIT 0xf8
0000            376   ;--------------------------------------------------------
0000            377   ; overlayable register banks
0000            378   ;--------------------------------------------------------
0000            379            rbank0 segment data overlay
0000            380   ;--------------------------------------------------------
0000            381   ; internal ram data
0000            382   ;--------------------------------------------------------
0000            383            rseg R_DSEG
0000            384   _pwm_count:
0000            385            ds 1
0001            386   _mode:
0001            387            ds 1
0002            388   _pwm_both:
0002            389            ds 1
0003            390   _pwm_Left0:
0003            391            ds 1
0004            392   _pwm_Left1:
0004            393            ds 1
0005            394   _pwm_Right0:
0005            395            ds 1
0006            396   _pwm_Right1:
0006            397            ds 1
0007            398   _direction:
0007            399            ds 1
0008            400   _currentcmd:
0008            401            ds 1
0009            402   _currentstate:
0009            403            ds 1
000A            404   _linetrack_forwardbackward_1_83:
000A            405            ds 2
000C            406   _linetrack_vleft_1_84:
000C            407            ds 4
0010            408   _linetrack_vright_1_84:
0010            409            ds 4
0014            410   _linetrack_sloc0_1_0:
0014            411            ds 4
0018            412   _turncar_vleft_1_88:
0018            413            ds 4
001C            414   _turncar_vright_1_88:
001C            415            ds 4
0020            416   _uturn_vleft_1_93:
0020            417            ds 4
0024            418   _uturn_vright_1_93:
0024            419            ds 4
0028            420   ;--------------------------------------------------------
0028            421   ; overlayable items in internal ram 
0028            422   ;--------------------------------------------------------
0000            423            rseg    R_OSEG
0000            424            rseg    R_OSEG
0000            425            rseg    R_OSEG
0000            426   _InitPinADC_PARM_2:
0000            427            ds 1
0001            428            rseg    R_OSEG
0001            429   ;--------------------------------------------------------
0001            430   ; indirectly addressable internal ram data
0001            431   ;--------------------------------------------------------
0000            432            rseg R_ISEG
0000            433   ;--------------------------------------------------------
0000            434   ; absolute internal ram data
0000            435   ;--------------------------------------------------------
0000            436            DSEG
0000            437   ;--------------------------------------------------------
0000            438   ; bit data
0000            439   ;--------------------------------------------------------
0000            440            rseg R_BSEG
0000            441   _Timer2_ISR_sloc0_1_0:
0000            442            DBIT    1
0001            443   ;--------------------------------------------------------
0001            444   ; paged external ram data
0001            445   ;--------------------------------------------------------
0000            446            rseg R_PSEG
0000            447   ;--------------------------------------------------------
0000            448   ; external ram data
0000            449   ;--------------------------------------------------------
0000            450            rseg R_XSEG
0000            451   ;--------------------------------------------------------
0000            452   ; absolute external ram data
0000            453   ;--------------------------------------------------------
0000            454            XSEG
0000            455   ;--------------------------------------------------------
0000            456   ; external initialized ram data
0000            457   ;--------------------------------------------------------
0000            458            rseg R_IXSEG
0000            459            rseg R_HOME
0000            460            rseg R_GSINIT
0000            461            rseg R_CSEG
0000            462   ;--------------------------------------------------------
0000            463   ; Reset entry point and interrupt vectors
0000            464   ;--------------------------------------------------------
0000            465            CSEG at 0x0000
0000 020100     466            ljmp    _crt0
002B            467            CSEG at 0x002b
002B 020100     468            ljmp    _Timer2_ISR
002E            469   ;--------------------------------------------------------
002E            470   ; global & static initialisations
002E            471   ;--------------------------------------------------------
0000            472            rseg R_HOME
0000            473            rseg R_GSINIT
0000            474            rseg R_GSINIT
0000            475   ;--------------------------------------------------------
0000            476   ; data variables initialization
0000            477   ;--------------------------------------------------------
0000            478            rseg R_DINIT
0000            479   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:20: volatile  char pwm_count=0;
0000 75C000     480            mov     _pwm_count,#0x00
0003            481   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:21: volatile  char mode = 0;
0003 758000     482            mov     _mode,#0x00
0006            483   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:22: volatile  char pwm_both =0;
0006 754000     484            mov     _pwm_both,#0x00
0009            485   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:23: volatile  char pwm_Left0 = 0; //p1.5
0009 750000     486            mov     _pwm_Left0,#0x00
000C            487   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:24: volatile  char pwm_Left1 = 0; //p1.6
000C 75C000     488            mov     _pwm_Left1,#0x00
000F            489   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:25: volatile  char pwm_Right0 = 0; //p2.0
000F 758000     490            mov     _pwm_Right0,#0x00
0012            491   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:26: volatile  char pwm_Right1 = 0; //p2.1
0012 754000     492            mov     _pwm_Right1,#0x00
0015            493   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:27: volatile  char direction = 0; // 1 for back 0 for forward
0015 750000     494            mov     _direction,#0x00
0018            495   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:29: volatile  char currentcmd = 0;
0018 75C000     496            mov     _currentcmd,#0x00
001B            497   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:30: volatile  char currentstate = 1;
001B 758001     498            mov     _currentstate,#0x01
001E            499            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            500   ;--------------------------------------------------------
001E            501   ; code
001E            502   ;--------------------------------------------------------
0000            503            rseg R_CSEG
0000            504   ;------------------------------------------------------------
0000            505   ;Allocation info for local variables in function '_c51_external_startup'
0000            506   ;------------------------------------------------------------
0000            507   ;------------------------------------------------------------
0000            508   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:34: char _c51_external_startup (void)
0000            509   ;        -----------------------------------------
0000            510   ;         function _c51_external_startup
0000            511   ;        -----------------------------------------
0000            512   __c51_external_startup:
0000            513            using   0
0000            514   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:36: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     515            anl     _PCA0MD,#0xBF
0003            516   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:37: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     517            mov     _VDM0CN,#0x80
0006            518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:38: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     519            mov     _RSTSRC,#0x06
0009            520   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:46: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     521            orl     _CLKSEL,#0x03
000C            522   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:50: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     523            orl     _OSCICN,#0x03
000F            524   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:53: SCON0 = 0x10;
000F 759810     525            mov     _SCON0,#0x10
0012            526   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:55: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     527            mov     _TH1,#0x30
0015            528   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:56: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     529            anl     _CKCON,#0xF4
0018            530   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:57: CKCON |=  0x08;
0018 438E08     531            orl     _CKCON,#0x08
001B            532   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:70: TL1 = TH1;      // Init Timer1
001B 858D8B     533            mov     _TL1,_TH1
001E            534   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:71: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     535            anl     _TMOD,#0x0F
0021            536   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:72: TMOD |=  0x20;
0021 438920     537            orl     _TMOD,#0x20
0024            538   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:73: TR1 = 1; // START Timer1
0024 D28E       539            setb    _TR1
0026            540   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:74: TI = 1;  // Indicate TX0 ready
0026 D299       541            setb    _TI
0028            542   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:77: P2MDOUT|=0b_0000_0011;
0028 43A603     543            orl     _P2MDOUT,#0x03
002B            544   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:78: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     545            orl     _P0MDOUT,#0x10
002E            546   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:79: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     547            mov     _XBR0,#0x01
0031            548   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:80: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     549            mov     _XBR1,#0x40
0034            550   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:83: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     551            mov     _TMR2CN,#0x00
0037            552   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:84: CKCON|=0b_0001_0000;
0037 438E10     553            orl     _CKCON,#0x10
003A            554   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:85: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     555            mov     _TMR2RL,#0x78
003D 75CBEC     556            mov     (_TMR2RL >> 8),#0xEC
0040            557   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:86: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     558            mov     _TMR2,#0xFF
0043 75CDFF     559            mov     (_TMR2 >> 8),#0xFF
0046            560   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:87: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       561            setb    _ET2
0048            562   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:88: TR2=1;         // Start Timer2
0048 D2CA       563            setb    _TR2
004A            564   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:90: EA=1; // Enable interrupts
004A D2AF       565            setb    _EA
004C            566   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:92: return 0;
004C 758200     567            mov     dpl,#0x00
004F 22         568            ret
0050            569   ;------------------------------------------------------------
0050            570   ;Allocation info for local variables in function 'Timer3us'
0050            571   ;------------------------------------------------------------
0050            572   ;us                        Allocated to registers r2 
0050            573   ;i                         Allocated to registers r3 
0050            574   ;------------------------------------------------------------
0050            575   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:96: void Timer3us(unsigned char us)
0050            576   ;        -----------------------------------------
0050            577   ;         function Timer3us
0050            578   ;        -----------------------------------------
0050            579   _Timer3us:
0050 AA82       580            mov     r2,dpl
0052            581   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:101: CKCON|=0b_0100_0000;
0052 438E40     582            orl     _CKCON,#0x40
0055            583   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:103: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0055 7592D0     584            mov     _TMR3RL,#0xD0
0058 7593FF     585            mov     (_TMR3RL >> 8),#0xFF
005B            586   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:104: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005B 859294     587            mov     _TMR3,_TMR3RL
005E 859395     588            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0061            589   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:106: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0061 759104     590            mov     _TMR3CN,#0x04
0064            591   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0064 7B00       592            mov     r3,#0x00
0066            593   L003004?:
0066 C3         594            clr     c
0067 EB         595            mov     a,r3
0068 9A         596            subb    a,r2
0069 5001       597            jnc     L003007?
006B            598   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: while (!(TMR3CN & 0x80));  // Wait for overflow
006B            599   L003001?:
006B E591       600            mov     a,_TMR3CN
006D 30E750     601            jnb     acc.7,L003001?
0070            602   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:110: TMR3CN &= ~(0x80);         // Clear overflow indicator
0070 53917F     603            anl     _TMR3CN,#0x7F
0073            604   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0073 0B         605            inc     r3
0074 8001       606            sjmp    L003004?
0076            607   L003007?:
0076            608   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:112: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0076 759100     609            mov     _TMR3CN,#0x00
0079 22         610            ret
007A            611   ;------------------------------------------------------------
007A            612   ;Allocation info for local variables in function 'waitms'
007A            613   ;------------------------------------------------------------
007A            614   ;ms                        Allocated to registers r2 r3 
007A            615   ;j                         Allocated to registers r2 r3 
007A            616   ;------------------------------------------------------------
007A            617   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:115: void waitms (unsigned int ms)
007A            618   ;        -----------------------------------------
007A            619   ;         function waitms
007A            620   ;        -----------------------------------------
007A            621   _waitms:
007A AA82       622            mov     r2,dpl
007C AB83       623            mov     r3,dph
007E            624   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:118: for(j=ms; j!=0; j--)
007E            625   L004001?:
007E BA0050     626            cjne    r2,#0x00,L004010?
0081 BB0050     627            cjne    r3,#0x00,L004010?
0084 22         628            ret
0085            629   L004010?:
0085            630   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: Timer3us(249);
0085 7582F9     631            mov     dpl,#0xF9
0088 C002       632            push    ar2
008A C003       633            push    ar3
008C 120100     634            lcall   _Timer3us
008F            635   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:121: Timer3us(249);
008F 7582F9     636            mov     dpl,#0xF9
0092 120100     637            lcall   _Timer3us
0095            638   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:122: Timer3us(249);
0095 7582F9     639            mov     dpl,#0xF9
0098 120100     640            lcall   _Timer3us
009B            641   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:123: Timer3us(250);
009B 7582FA     642            mov     dpl,#0xFA
009E 120100     643            lcall   _Timer3us
00A1 D003       644            pop     ar3
00A3 D002       645            pop     ar2
00A5            646   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:118: for(j=ms; j!=0; j--)
00A5 1A         647            dec     r2
00A6 BAFF90     648            cjne    r2,#0xff,L004011?
00A9 1B         649            dec     r3
00AA            650   L004011?:
00AA 8001       651            sjmp    L004001?
00AC            652   ;------------------------------------------------------------
00AC            653   ;Allocation info for local variables in function 'Timer2_ISR'
00AC            654   ;------------------------------------------------------------
00AC            655   ;------------------------------------------------------------
00AC            656   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:128: void Timer2_ISR (void) interrupt 5
00AC            657   ;        -----------------------------------------
00AC            658   ;         function Timer2_ISR
00AC            659   ;        -----------------------------------------
00AC            660   _Timer2_ISR:
00AC C0E0       661            push    acc
00AE C0F0       662            push    b
00B0 C0D0       663            push    psw
00B2 75D000     664            mov     psw,#0x00
00B5            665   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:130: TF2H = 0; // Clear Timer2 interrupt flag
00B5 C2CF       666            clr     _TF2H
00B7            667   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:132: pwm_count++;
00B7 05C0       668            inc     _pwm_count
00B9            669   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:133: if(pwm_count>100) pwm_count=0;
00B9 C3         670            clr     c
00BA 74E4       671            mov     a,#(0x64 ^ 0x80)
00BC 85C0F0     672            mov     b,_pwm_count
00BF 63F080     673            xrl     b,#0x80
00C2 95F0       674            subb    a,b
00C4 5001       675            jnc     L005002?
00C6 75C000     676            mov     _pwm_count,#0x00
00C9            677   L005002?:
00C9            678   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:136: MOTOR_LEFT0 = pwm_count > pwm_Left0 ? 0 : 1; //p1.5
00C9 C3         679            clr     c
00CA E500       680            mov     a,_pwm_Left0
00CC 6480       681            xrl     a,#0x80
00CE 85C0F0     682            mov     b,_pwm_count
00D1 63F080     683            xrl     b,#0x80
00D4 95F0       684            subb    a,b
00D6 9210       685            mov  _Timer2_ISR_sloc0_1_0,c
00D8 B3         686            cpl     c
00D9 9295       687            mov     _P1_5,c
00DB            688   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:137: MOTOR_LEFT1 = pwm_count > pwm_Left1 ? 0 : 1; //p1.6
00DB C3         689            clr     c
00DC E5C0       690            mov     a,_pwm_Left1
00DE 6480       691            xrl     a,#0x80
00E0 85C0F0     692            mov     b,_pwm_count
00E3 63F080     693            xrl     b,#0x80
00E6 95F0       694            subb    a,b
00E8 9210       695            mov  _Timer2_ISR_sloc0_1_0,c
00EA B3         696            cpl     c
00EB 9296       697            mov     _P1_6,c
00ED            698   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:138: MOTOR_RIGHT0 = pwm_count > pwm_Right0 ? 0 : 1; //p2.0
00ED C3         699            clr     c
00EE E580       700            mov     a,_pwm_Right0
00F0 6480       701            xrl     a,#0x80
00F2 85C0F0     702            mov     b,_pwm_count
00F5 63F080     703            xrl     b,#0x80
00F8 95F0       704            subb    a,b
00FA 9210       705            mov  _Timer2_ISR_sloc0_1_0,c
00FC B3         706            cpl     c
00FD 92A0       707            mov     _P2_0,c
00FF            708   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:139: MOTOR_RIGHT1 = pwm_count > pwm_Right1 ? 0 : 1; //p2.1
00FF C3         709            clr     c
0100 E540       710            mov     a,_pwm_Right1
0102 6480       711            xrl     a,#0x80
0104 85C0F0     712            mov     b,_pwm_count
0107 63F080     713            xrl     b,#0x80
010A 95F0       714            subb    a,b
010C 9210       715            mov  _Timer2_ISR_sloc0_1_0,c
010E B3         716            cpl     c
010F 92A1       717            mov     _P2_1,c
0111 D0D0       718            pop     psw
0113 D0F0       719            pop     b
0115 D0E0       720            pop     acc
0117 32         721            reti
0118            722   ;        eliminated unneeded push/pop dpl
0118            723   ;        eliminated unneeded push/pop dph
0118            724   ;------------------------------------------------------------
0118            725   ;Allocation info for local variables in function 'forward_backward'
0118            726   ;------------------------------------------------------------
0118            727   ;direction                 Allocated to registers r2 
0118            728   ;------------------------------------------------------------
0118            729   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:146: void forward_backward(unsigned char direction)
0118            730   ;        -----------------------------------------
0118            731   ;         function forward_backward
0118            732   ;        -----------------------------------------
0118            733   _forward_backward:
0118            734   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:149: if (direction == 0) { //p2.1,1.6 on
0118 E582       735            mov     a,dpl
011A FA         736            mov     r2,a
011B 7001       737            jnz     L006004?
011D            738   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:150: pwm_Left0 = pwm_Right0 = -1;
011D 7580FF     739            mov     _pwm_Right0,#0xFF
0120 7500FF     740            mov     _pwm_Left0,#0xFF
0123            741   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:151: pwm_Left1 = pwm_Right1 = pwm_both;  //MOTOR_LEFT1 = MOTOR_RIGHT1 = pwm_both;
0123 854040     742            mov     _pwm_Right1,_pwm_both
0126 8540C0     743            mov     _pwm_Left1,_pwm_both
0129 22         744            ret
012A            745   L006004?:
012A            746   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:154: else if (direction == 1) { //p2.0,1.5 on
012A BA01D0     747            cjne    r2,#0x01,L006006?
012D            748   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:155: pwm_Left1 = pwm_Right1 = -1;
012D 7540FF     749            mov     _pwm_Right1,#0xFF
0130 75C0FF     750            mov     _pwm_Left1,#0xFF
0133            751   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:156: pwm_Left0 = pwm_Right0 = pwm_both; 
0133 854080     752            mov     _pwm_Right0,_pwm_both
0136 854000     753            mov     _pwm_Left0,_pwm_both
0139            754   L006006?:
0139 22         755            ret
013A            756   ;------------------------------------------------------------
013A            757   ;Allocation info for local variables in function 'InitADC'
013A            758   ;------------------------------------------------------------
013A            759   ;------------------------------------------------------------
013A            760   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:162: void InitADC (void)
013A            761   ;        -----------------------------------------
013A            762   ;         function InitADC
013A            763   ;        -----------------------------------------
013A            764   _InitADC:
013A            765   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:165: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
013A 75BCF8     766            mov     _ADC0CF,#0xF8
013D            767   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:166: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
013D 75E880     768            mov     _ADC0CN,#0x80
0140            769   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:167: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
0140 75D108     770            mov     _REF0CN,#0x08
0143 22         771            ret
0144            772   ;------------------------------------------------------------
0144            773   ;Allocation info for local variables in function 'InitPinADC'
0144            774   ;------------------------------------------------------------
0144            775   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0144            776   ;portno                    Allocated to registers r2 
0144            777   ;mask                      Allocated to registers r3 
0144            778   ;------------------------------------------------------------
0144            779   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:170: void InitPinADC (unsigned char portno, unsigned char pinno)
0144            780   ;        -----------------------------------------
0144            781   ;         function InitPinADC
0144            782   ;        -----------------------------------------
0144            783   _InitPinADC:
0144 AA82       784            mov     r2,dpl
0146            785   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:174: mask=1<<pinno;
0146 8560F0     786            mov     b,_InitPinADC_PARM_2
0149 05F0       787            inc     b
014B 7401       788            mov     a,#0x01
014D 8001       789            sjmp    L008012?
014F            790   L008010?:
014F 25E0       791            add     a,acc
0151            792   L008012?:
0151 D5F050     793            djnz    b,L008010?
0154 FB         794            mov     r3,a
0155            795   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:176: switch (portno)
0155 EA         796            mov     a,r2
0156 24FC       797            add     a,#0xff - 0x03
0158 4001       798            jc      L008007?
015A EA         799            mov     a,r2
015B 2A         800            add     a,r2
015C 2A         801            add     a,r2
015D 909DD0     802            mov     dptr,#L008014?
0160 73         803            jmp     @a+dptr
0161            804   L008014?:
0161 020100     805            ljmp    L008001?
0164 020100     806            ljmp    L008002?
0167 020100     807            ljmp    L008003?
016A 020100     808            ljmp    L008004?
016D            809   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:178: case 0:
016D            810   L008001?:
016D            811   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:179: P0MDIN &= (~mask); // Set pin as analog input
016D EB         812            mov     a,r3
016E F4         813            cpl     a
016F 52F1       814            anl     _P0MDIN,a
0171            815   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:180: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0171 EB         816            mov     a,r3
0172 42D4       817            orl     _P0SKIP,a
0174            818   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:181: break;
0174            819   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:182: case 1:
0174 22         820            ret
0175            821   L008002?:
0175            822   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:183: P1MDIN &= (~mask); // Set pin as analog input
0175 EB         823            mov     a,r3
0176 F4         824            cpl     a
0177 52F2       825            anl     _P1MDIN,a
0179            826   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:184: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0179 EB         827            mov     a,r3
017A 42D5       828            orl     _P1SKIP,a
017C            829   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:185: break;
017C            830   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:186: case 2:
017C 22         831            ret
017D            832   L008003?:
017D            833   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:187: P2MDIN &= (~mask); // Set pin as analog input
017D EB         834            mov     a,r3
017E F4         835            cpl     a
017F 52F3       836            anl     _P2MDIN,a
0181            837   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:188: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0181 EB         838            mov     a,r3
0182 42D6       839            orl     _P2SKIP,a
0184            840   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:189: break;
0184            841   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:190: case 3:
0184 22         842            ret
0185            843   L008004?:
0185            844   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:191: P3MDIN &= (~mask); // Set pin as analog input
0185 EB         845            mov     a,r3
0186 F4         846            cpl     a
0187 FA         847            mov     r2,a
0188 52F4       848            anl     _P3MDIN,a
018A            849   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:192: P3SKIP |= mask; // Skip Crossbar decoding for this pin
018A EB         850            mov     a,r3
018B 42DF       851            orl     _P3SKIP,a
018D            852   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:196: }
018D            853   L008007?:
018D 22         854            ret
018E            855   ;------------------------------------------------------------
018E            856   ;Allocation info for local variables in function 'ADC_at_Pin'
018E            857   ;------------------------------------------------------------
018E            858   ;pin                       Allocated to registers 
018E            859   ;------------------------------------------------------------
018E            860   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:199: unsigned int ADC_at_Pin(unsigned char pin)
018E            861   ;        -----------------------------------------
018E            862   ;         function ADC_at_Pin
018E            863   ;        -----------------------------------------
018E            864   _ADC_at_Pin:
018E 8582BB     865            mov     _AMX0P,dpl
0191            866   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:202: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
0191 75BA1F     867            mov     _AMX0N,#0x1F
0194            868   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:204: AD0BUSY=1;
0194 D2EC       869            setb    _AD0BUSY
0196            870   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:205: while (AD0BUSY); // Wait for dummy conversion to finish
0196            871   L009001?:
0196 20EC10     872            jb      _AD0BUSY,L009001?
0199            873   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:207: AD0BUSY = 1;
0199 D2EC       874            setb    _AD0BUSY
019B            875   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:208: while (AD0BUSY); // Wait for conversion to complete
019B            876   L009004?:
019B 20EC50     877            jb      _AD0BUSY,L009004?
019E            878   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:209: return (ADC0L+(ADC0H*0x100));
019E AABD       879            mov     r2,_ADC0L
01A0 7B00       880            mov     r3,#0x00
01A2 ADBE       881            mov     r5,_ADC0H
01A4 7C00       882            mov     r4,#0x00
01A6 EC         883            mov     a,r4
01A7 2A         884            add     a,r2
01A8 F582       885            mov     dpl,a
01AA ED         886            mov     a,r5
01AB 3B         887            addc    a,r3
01AC F583       888            mov     dph,a
01AE 22         889            ret
01AF            890   ;------------------------------------------------------------
01AF            891   ;Allocation info for local variables in function 'Volts_at_Pin'
01AF            892   ;------------------------------------------------------------
01AF            893   ;pin                       Allocated to registers r2 
01AF            894   ;------------------------------------------------------------
01AF            895   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:212: float Volts_at_Pin(unsigned char pin)
01AF            896   ;        -----------------------------------------
01AF            897   ;         function Volts_at_Pin
01AF            898   ;        -----------------------------------------
01AF            899   _Volts_at_Pin:
01AF            900   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:214: return ((ADC_at_Pin(pin)*3.30)/1024.0);
01AF 120100     901            lcall   _ADC_at_Pin
01B2 120100     902            lcall   ___uint2fs
01B5 AA82       903            mov     r2,dpl
01B7 AB83       904            mov     r3,dph
01B9 ACF0       905            mov     r4,b
01BB FD         906            mov     r5,a
01BC C002       907            push    ar2
01BE C003       908            push    ar3
01C0 C004       909            push    ar4
01C2 C005       910            push    ar5
01C4 903333     911            mov     dptr,#0x3333
01C7 75F053     912            mov     b,#0x53
01CA 7440       913            mov     a,#0x40
01CC 120100     914            lcall   ___fsmul
01CF AA82       915            mov     r2,dpl
01D1 AB83       916            mov     r3,dph
01D3 ACF0       917            mov     r4,b
01D5 FD         918            mov     r5,a
01D6 E581       919            mov     a,sp
01D8 24FC       920            add     a,#0xfc
01DA F581       921            mov     sp,a
01DC E4         922            clr     a
01DD C0E0       923            push    acc
01DF C0E0       924            push    acc
01E1 7480       925            mov     a,#0x80
01E3 C0E0       926            push    acc
01E5 7444       927            mov     a,#0x44
01E7 C0E0       928            push    acc
01E9 8A82       929            mov     dpl,r2
01EB 8B83       930            mov     dph,r3
01ED 8CF0       931            mov     b,r4
01EF ED         932            mov     a,r5
01F0 120100     933            lcall   ___fsdiv
01F3 AA82       934            mov     r2,dpl
01F5 AB83       935            mov     r3,dph
01F7 ACF0       936            mov     r4,b
01F9 FD         937            mov     r5,a
01FA E581       938            mov     a,sp
01FC 24FC       939            add     a,#0xfc
01FE F581       940            mov     sp,a
0200 8A82       941            mov     dpl,r2
0202 8B83       942            mov     dph,r3
0204 8CF0       943            mov     b,r4
0206 ED         944            mov     a,r5
0207 22         945            ret
0208            946   ;------------------------------------------------------------
0208            947   ;Allocation info for local variables in function 'readData'
0208            948   ;------------------------------------------------------------
0208            949   ;commandflag               Allocated to registers r2 r3 
0208            950   ;------------------------------------------------------------
0208            951   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:218: void readData (void) {
0208            952   ;        -----------------------------------------
0208            953   ;         function readData
0208            954   ;        -----------------------------------------
0208            955   _readData:
0208            956   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:219: int commandflag = 0;                                     //determines if there's a real command coming in or not
0208 7A00       957            mov     r2,#0x00
020A 7B00       958            mov     r3,#0x00
020C            959   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:221: if (COMMAND_PIN == 0) {                                  //0---
020C 309090     960            jnb     _P1_0,L011039?
020F 020100     961            ljmp    L011022?
0212            962   L011039?:
0212            963   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:222: waitms(6);
0212 900006     964            mov     dptr,#0x0006
0215 C002       965            push    ar2
0217 C003       966            push    ar3
0219 120100     967            lcall   _waitms
021C D003       968            pop     ar3
021E D002       969            pop     ar2
0220            970   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:223: if (COMMAND_PIN == 1) {                          //01--
0220 309010     971            jnb     _P1_0,L011019?
0223            972   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:224: waitms(4);
0223 900004     973            mov     dptr,#0x0004
0226 C002       974            push    ar2
0228 C003       975            push    ar3
022A 120100     976            lcall   _waitms
022D D003       977            pop     ar3
022F D002       978            pop     ar2
0231            979   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:225: if (COMMAND_PIN == 0) {                  //010-
0231 209050     980            jb      _P1_0,L011007?
0234            981   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:226: waitms(4);
0234 900004     982            mov     dptr,#0x0004
0237 C002       983            push    ar2
0239 C003       984            push    ar3
023B 120100     985            lcall   _waitms
023E D003       986            pop     ar3
0240 D002       987            pop     ar2
0242            988   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:227: if (COMMAND_PIN == 0) {          //0100  
0242 209090     989            jb      _P1_0,L011002?
0245            990   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:228: currentcmd = 4;
0245 75C004     991            mov     _currentcmd,#0x04
0248 8001       992            sjmp    L011022?
024A            993   L011002?:
024A            994   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:231: currentcmd = 5;
024A 75C005     995            mov     _currentcmd,#0x05
024D 8001       996            sjmp    L011022?
024F            997   L011007?:
024F            998   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:235: waitms(4);
024F 900004     999            mov     dptr,#0x0004
0252 C002      1000            push    ar2
0254 C003      1001            push    ar3
0256 120100    1002            lcall   _waitms
0259 D003      1003            pop     ar3
025B D002      1004            pop     ar2
025D           1005   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:236: if (COMMAND_PIN == 0) {          //0110
025D 2090D0    1006            jb      _P1_0,L011022?
0260           1007   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:237: currentcmd = 6;
0260 75C006    1008            mov     _currentcmd,#0x06
0263 8001      1009            sjmp    L011022?
0265           1010   L011019?:
0265           1011   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:242: waitms(4);
0265 900004    1012            mov     dptr,#0x0004
0268 C002      1013            push    ar2
026A C003      1014            push    ar3
026C 120100    1015            lcall   _waitms
026F D003      1016            pop     ar3
0271 D002      1017            pop     ar2
0273           1018   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:243: if (COMMAND_PIN == 1) {                  //001-
0273 3090D0    1019            jnb     _P1_0,L011016?
0276           1020   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:244: waitms(4);
0276 900004    1021            mov     dptr,#0x0004
0279 C002      1022            push    ar2
027B C003      1023            push    ar3
027D 120100    1024            lcall   _waitms
0280 D003      1025            pop     ar3
0282 D002      1026            pop     ar2
0284           1027   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:245: if (COMMAND_PIN == 1) {          //0011
0284 309010    1028            jnb     _P1_0,L011010?
0287           1029   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:246: currentcmd = 3;
0287 75C003    1030            mov     _currentcmd,#0x03
028A 8001      1031            sjmp    L011022?
028C           1032   L011010?:
028C           1033   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:249: currentcmd = 2;
028C 75C002    1034            mov     _currentcmd,#0x02
028F 8001      1035            sjmp    L011022?
0291           1036   L011016?:
0291           1037   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:253: waitms(4);
0291 900004    1038            mov     dptr,#0x0004
0294 C002      1039            push    ar2
0296 C003      1040            push    ar3
0298 120100    1041            lcall   _waitms
029B D003      1042            pop     ar3
029D D002      1043            pop     ar2
029F           1044   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:254: if (COMMAND_PIN == 1) {          //0001  
029F 309050    1045            jnb     _P1_0,L011013?
02A2           1046   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:255: currentcmd == 1;
02A2 E5C0      1047            mov     a,_currentcmd
02A4 8001      1048            sjmp    L011022?
02A6           1049   L011013?:
02A6           1050   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:258: commandflag = 1;
02A6 7A01      1051            mov     r2,#0x01
02A8 7B00      1052            mov     r3,#0x00
02AA           1053   L011022?:
02AA           1054   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:263: if (commandflag == 0) {                                  //only wait for signal to end if a command has been received. 
02AA EA        1055            mov     a,r2
02AB 4B        1056            orl     a,r3
02AC 7001      1057            jnz     L011027?
02AE           1058   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:264: while (COMMAND_PIN == 0) {}
02AE           1059   L011023?:
02AE 3090D0    1060            jnb     _P1_0,L011023?
02B1           1061   L011027?:
02B1           1062   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:267: printf("current command is %d\r\n", currentcmd);                 
02B1 AAC0      1063            mov     r2,_currentcmd
02B3 E5C0      1064            mov     a,_currentcmd
02B5 33        1065            rlc     a
02B6 95E0      1066            subb    a,acc
02B8 FB        1067            mov     r3,a
02B9 C002      1068            push    ar2
02BB C003      1069            push    ar3
02BD 7410      1070            mov     a,#__str_0
02BF C0E0      1071            push    acc
02C1 74A3      1072            mov     a,#(__str_0 >> 8)
02C3 C0E0      1073            push    acc
02C5 7480      1074            mov     a,#0x80
02C7 C0E0      1075            push    acc
02C9 120100    1076            lcall   _printf
02CC E581      1077            mov     a,sp
02CE 24FB      1078            add     a,#0xfb
02D0 F581      1079            mov     sp,a
02D2 22        1080            ret
02D3           1081   ;------------------------------------------------------------
02D3           1082   ;Allocation info for local variables in function 'linetrack'
02D3           1083   ;------------------------------------------------------------
02D3           1084   ;forwardbackward           Allocated with name '_linetrack_forwardbackward_1_83'
02D3           1085   ;vleft                     Allocated with name '_linetrack_vleft_1_84'
02D3           1086   ;vright                    Allocated with name '_linetrack_vright_1_84'
02D3           1087   ;sloc0                     Allocated with name '_linetrack_sloc0_1_0'
02D3           1088   ;------------------------------------------------------------
02D3           1089   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:271: void linetrack (int forwardbackward) {
02D3           1090   ;        -----------------------------------------
02D3           1091   ;         function linetrack
02D3           1092   ;        -----------------------------------------
02D3           1093   _linetrack:
02D3 858290    1094            mov     _linetrack_forwardbackward_1_83,dpl
02D6 858391    1095            mov     (_linetrack_forwardbackward_1_83 + 1),dph
02D9           1096   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:275: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
02D9 75820B    1097            mov     dpl,#0x0B
02DC 120100    1098            lcall   _Volts_at_Pin
02DF 8582E0    1099            mov     _linetrack_vleft_1_84,dpl
02E2 8583E1    1100            mov     (_linetrack_vleft_1_84 + 1),dph
02E5 85F0E2    1101            mov     (_linetrack_vleft_1_84 + 2),b
02E8 F5E3      1102            mov     (_linetrack_vleft_1_84 + 3),a
02EA           1103   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:276: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
02EA 75820C    1104            mov     dpl,#0x0C
02ED 120100    1105            lcall   _Volts_at_Pin
02F0 858230    1106            mov     _linetrack_vright_1_84,dpl
02F3 858331    1107            mov     (_linetrack_vright_1_84 + 1),dph
02F6 85F032    1108            mov     (_linetrack_vright_1_84 + 2),b
02F9 F533      1109            mov     (_linetrack_vright_1_84 + 3),a
02FB           1110   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:278: pwm_Left0 = -1;
02FB 7500FF    1111            mov     _pwm_Left0,#0xFF
02FE           1112   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:280: pwm_Left1 = vright*vright*75/(vright*vright+vleft*vleft);
02FE C030      1113            push    _linetrack_vright_1_84
0300 C031      1114            push    (_linetrack_vright_1_84 + 1)
0302 C032      1115            push    (_linetrack_vright_1_84 + 2)
0304 C033      1116            push    (_linetrack_vright_1_84 + 3)
0306 853082    1117            mov     dpl,_linetrack_vright_1_84
0309 853183    1118            mov     dph,(_linetrack_vright_1_84 + 1)
030C 8532F0    1119            mov     b,(_linetrack_vright_1_84 + 2)
030F E533      1120            mov     a,(_linetrack_vright_1_84 + 3)
0311 120100    1121            lcall   ___fsmul
0314 AC82      1122            mov     r4,dpl
0316 AD83      1123            mov     r5,dph
0318 AEF0      1124            mov     r6,b
031A FF        1125            mov     r7,a
031B E581      1126            mov     a,sp
031D 24FC      1127            add     a,#0xfc
031F F581      1128            mov     sp,a
0321 C004      1129            push    ar4
0323 C005      1130            push    ar5
0325 C006      1131            push    ar6
0327 C007      1132            push    ar7
0329 900000    1133            mov     dptr,#0x0000
032C 75F096    1134            mov     b,#0x96
032F 7442      1135            mov     a,#0x42
0331 120100    1136            lcall   ___fsmul
0334 AC82      1137            mov     r4,dpl
0336 AD83      1138            mov     r5,dph
0338 AEF0      1139            mov     r6,b
033A FF        1140            mov     r7,a
033B E581      1141            mov     a,sp
033D 24FC      1142            add     a,#0xfc
033F F581      1143            mov     sp,a
0341 C004      1144            push    ar4
0343 C005      1145            push    ar5
0345 C006      1146            push    ar6
0347 C007      1147            push    ar7
0349 C030      1148            push    _linetrack_vright_1_84
034B C031      1149            push    (_linetrack_vright_1_84 + 1)
034D C032      1150            push    (_linetrack_vright_1_84 + 2)
034F C033      1151            push    (_linetrack_vright_1_84 + 3)
0351 853082    1152            mov     dpl,_linetrack_vright_1_84
0354 853183    1153            mov     dph,(_linetrack_vright_1_84 + 1)
0357 8532F0    1154            mov     b,(_linetrack_vright_1_84 + 2)
035A E533      1155            mov     a,(_linetrack_vright_1_84 + 3)
035C 120100    1156            lcall   ___fsmul
035F 858280    1157            mov     _linetrack_sloc0_1_0,dpl
0362 858381    1158            mov     (_linetrack_sloc0_1_0 + 1),dph
0365 85F082    1159            mov     (_linetrack_sloc0_1_0 + 2),b
0368 F583      1160            mov     (_linetrack_sloc0_1_0 + 3),a
036A E581      1161            mov     a,sp
036C 24FC      1162            add     a,#0xfc
036E F581      1163            mov     sp,a
0370 C0E0      1164            push    _linetrack_vleft_1_84
0372 C0E1      1165            push    (_linetrack_vleft_1_84 + 1)
0374 C0E2      1166            push    (_linetrack_vleft_1_84 + 2)
0376 C0E3      1167            push    (_linetrack_vleft_1_84 + 3)
0378 85E082    1168            mov     dpl,_linetrack_vleft_1_84
037B 85E183    1169            mov     dph,(_linetrack_vleft_1_84 + 1)
037E 85E2F0    1170            mov     b,(_linetrack_vleft_1_84 + 2)
0381 E5E3      1171            mov     a,(_linetrack_vleft_1_84 + 3)
0383 120100    1172            lcall   ___fsmul
0386 AA82      1173            mov     r2,dpl
0388 AB83      1174            mov     r3,dph
038A A8F0      1175            mov     r0,b
038C F9        1176            mov     r1,a
038D E581      1177            mov     a,sp
038F 24FC      1178            add     a,#0xfc
0391 F581      1179            mov     sp,a
0393 C002      1180            push    ar2
0395 C003      1181            push    ar3
0397 C000      1182            push    ar0
0399 C001      1183            push    ar1
039B 858082    1184            mov     dpl,_linetrack_sloc0_1_0
039E 858183    1185            mov     dph,(_linetrack_sloc0_1_0 + 1)
03A1 8582F0    1186            mov     b,(_linetrack_sloc0_1_0 + 2)
03A4 E583      1187            mov     a,(_linetrack_sloc0_1_0 + 3)
03A6 120100    1188            lcall   ___fsadd
03A9 AA82      1189            mov     r2,dpl
03AB AB83      1190            mov     r3,dph
03AD A8F0      1191            mov     r0,b
03AF F9        1192            mov     r1,a
03B0 E581      1193            mov     a,sp
03B2 24FC      1194            add     a,#0xfc
03B4 F581      1195            mov     sp,a
03B6 D007      1196            pop     ar7
03B8 D006      1197            pop     ar6
03BA D005      1198            pop     ar5
03BC D004      1199            pop     ar4
03BE C002      1200            push    ar2
03C0 C003      1201            push    ar3
03C2 C000      1202            push    ar0
03C4 C001      1203            push    ar1
03C6 8C82      1204            mov     dpl,r4
03C8 8D83      1205            mov     dph,r5
03CA 8EF0      1206            mov     b,r6
03CC EF        1207            mov     a,r7
03CD 120100    1208            lcall   ___fsdiv
03D0 AA82      1209            mov     r2,dpl
03D2 AB83      1210            mov     r3,dph
03D4 ACF0      1211            mov     r4,b
03D6 FD        1212            mov     r5,a
03D7 E581      1213            mov     a,sp
03D9 24FC      1214            add     a,#0xfc
03DB F581      1215            mov     sp,a
03DD 8A82      1216            mov     dpl,r2
03DF 8B83      1217            mov     dph,r3
03E1 8CF0      1218            mov     b,r4
03E3 ED        1219            mov     a,r5
03E4 120100    1220            lcall   ___fs2schar
03E7 8582C0    1221            mov     _pwm_Left1,dpl
03EA           1222   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:281: pwm_Right1 = -1;
03EA 7540FF    1223            mov     _pwm_Right1,#0xFF
03ED           1224   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:283: pwm_Right0 = vleft*vleft*75/(vright*vright+vleft*vleft);
03ED C0E0      1225            push    _linetrack_vleft_1_84
03EF C0E1      1226            push    (_linetrack_vleft_1_84 + 1)
03F1 C0E2      1227            push    (_linetrack_vleft_1_84 + 2)
03F3 C0E3      1228            push    (_linetrack_vleft_1_84 + 3)
03F5 85E082    1229            mov     dpl,_linetrack_vleft_1_84
03F8 85E183    1230            mov     dph,(_linetrack_vleft_1_84 + 1)
03FB 85E2F0    1231            mov     b,(_linetrack_vleft_1_84 + 2)
03FE E5E3      1232            mov     a,(_linetrack_vleft_1_84 + 3)
0400 120100    1233            lcall   ___fsmul
0403 AA82      1234            mov     r2,dpl
0405 AB83      1235            mov     r3,dph
0407 ACF0      1236            mov     r4,b
0409 FD        1237            mov     r5,a
040A E581      1238            mov     a,sp
040C 24FC      1239            add     a,#0xfc
040E F581      1240            mov     sp,a
0410 C002      1241            push    ar2
0412 C003      1242            push    ar3
0414 C004      1243            push    ar4
0416 C005      1244            push    ar5
0418 900000    1245            mov     dptr,#0x0000
041B 75F096    1246            mov     b,#0x96
041E 7442      1247            mov     a,#0x42
0420 120100    1248            lcall   ___fsmul
0423 AA82      1249            mov     r2,dpl
0425 AB83      1250            mov     r3,dph
0427 ACF0      1251            mov     r4,b
0429 FD        1252            mov     r5,a
042A E581      1253            mov     a,sp
042C 24FC      1254            add     a,#0xfc
042E F581      1255            mov     sp,a
0430 C002      1256            push    ar2
0432 C003      1257            push    ar3
0434 C004      1258            push    ar4
0436 C005      1259            push    ar5
0438 C030      1260            push    _linetrack_vright_1_84
043A C031      1261            push    (_linetrack_vright_1_84 + 1)
043C C032      1262            push    (_linetrack_vright_1_84 + 2)
043E C033      1263            push    (_linetrack_vright_1_84 + 3)
0440 853082    1264            mov     dpl,_linetrack_vright_1_84
0443 853183    1265            mov     dph,(_linetrack_vright_1_84 + 1)
0446 8532F0    1266            mov     b,(_linetrack_vright_1_84 + 2)
0449 E533      1267            mov     a,(_linetrack_vright_1_84 + 3)
044B 120100    1268            lcall   ___fsmul
044E 858280    1269            mov     _linetrack_sloc0_1_0,dpl
0451 858381    1270            mov     (_linetrack_sloc0_1_0 + 1),dph
0454 85F082    1271            mov     (_linetrack_sloc0_1_0 + 2),b
0457 F583      1272            mov     (_linetrack_sloc0_1_0 + 3),a
0459 E581      1273            mov     a,sp
045B 24FC      1274            add     a,#0xfc
045D F581      1275            mov     sp,a
045F C0E0      1276            push    _linetrack_vleft_1_84
0461 C0E1      1277            push    (_linetrack_vleft_1_84 + 1)
0463 C0E2      1278            push    (_linetrack_vleft_1_84 + 2)
0465 C0E3      1279            push    (_linetrack_vleft_1_84 + 3)
0467 85E082    1280            mov     dpl,_linetrack_vleft_1_84
046A 85E183    1281            mov     dph,(_linetrack_vleft_1_84 + 1)
046D 85E2F0    1282            mov     b,(_linetrack_vleft_1_84 + 2)
0470 E5E3      1283            mov     a,(_linetrack_vleft_1_84 + 3)
0472 120100    1284            lcall   ___fsmul
0475 AE82      1285            mov     r6,dpl
0477 AF83      1286            mov     r7,dph
0479 A8F0      1287            mov     r0,b
047B F9        1288            mov     r1,a
047C E581      1289            mov     a,sp
047E 24FC      1290            add     a,#0xfc
0480 F581      1291            mov     sp,a
0482 C006      1292            push    ar6
0484 C007      1293            push    ar7
0486 C000      1294            push    ar0
0488 C001      1295            push    ar1
048A 858082    1296            mov     dpl,_linetrack_sloc0_1_0
048D 858183    1297            mov     dph,(_linetrack_sloc0_1_0 + 1)
0490 8582F0    1298            mov     b,(_linetrack_sloc0_1_0 + 2)
0493 E583      1299            mov     a,(_linetrack_sloc0_1_0 + 3)
0495 120100    1300            lcall   ___fsadd
0498 AE82      1301            mov     r6,dpl
049A AF83      1302            mov     r7,dph
049C A8F0      1303            mov     r0,b
049E F9        1304            mov     r1,a
049F E581      1305            mov     a,sp
04A1 24FC      1306            add     a,#0xfc
04A3 F581      1307            mov     sp,a
04A5 D005      1308            pop     ar5
04A7 D004      1309            pop     ar4
04A9 D003      1310            pop     ar3
04AB D002      1311            pop     ar2
04AD C006      1312            push    ar6
04AF C007      1313            push    ar7
04B1 C000      1314            push    ar0
04B3 C001      1315            push    ar1
04B5 8A82      1316            mov     dpl,r2
04B7 8B83      1317            mov     dph,r3
04B9 8CF0      1318            mov     b,r4
04BB ED        1319            mov     a,r5
04BC 120100    1320            lcall   ___fsdiv
04BF AA82      1321            mov     r2,dpl
04C1 AB83      1322            mov     r3,dph
04C3 ACF0      1323            mov     r4,b
04C5 FD        1324            mov     r5,a
04C6 E581      1325            mov     a,sp
04C8 24FC      1326            add     a,#0xfc
04CA F581      1327            mov     sp,a
04CC 8A82      1328            mov     dpl,r2
04CE 8B83      1329            mov     dph,r3
04D0 8CF0      1330            mov     b,r4
04D2 ED        1331            mov     a,r5
04D3 120100    1332            lcall   ___fs2schar
04D6 858280    1333            mov     _pwm_Right0,dpl
04D9           1334   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:285: if (forwardbackward) {
04D9 E590      1335            mov     a,_linetrack_forwardbackward_1_83
04DB 4591      1336            orl     a,(_linetrack_forwardbackward_1_83 + 1)
04DD 6001      1337            jz      L012003?
04DF           1338   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:286: pwm_Left0 = pwm_Left1;
04DF 85C000    1339            mov     _pwm_Left0,_pwm_Left1
04E2           1340   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:287: pwm_Left1 = -1;
04E2 75C0FF    1341            mov     _pwm_Left1,#0xFF
04E5           1342   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:288: pwm_Right1 = pwm_Right1;
04E5 854040    1343            mov     _pwm_Right1,_pwm_Right1
04E8           1344   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:289: pwm_Right0 = -1;
04E8 7580FF    1345            mov     _pwm_Right0,#0xFF
04EB           1346   L012003?:
04EB 22        1347            ret
04EC           1348   ;------------------------------------------------------------
04EC           1349   ;Allocation info for local variables in function 'stopcar'
04EC           1350   ;------------------------------------------------------------
04EC           1351   ;------------------------------------------------------------
04EC           1352   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:296: void stopcar () {
04EC           1353   ;        -----------------------------------------
04EC           1354   ;         function stopcar
04EC           1355   ;        -----------------------------------------
04EC           1356   _stopcar:
04EC           1357   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:297: pwm_Left1 = -1;
04EC 75C0FF    1358            mov     _pwm_Left1,#0xFF
04EF           1359   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:298: pwm_Right1 = -1;
04EF 7540FF    1360            mov     _pwm_Right1,#0xFF
04F2           1361   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:299: pwm_Left0 = -1;
04F2 7500FF    1362            mov     _pwm_Left0,#0xFF
04F5           1363   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:300: pwm_Right0 = -1;
04F5 7580FF    1364            mov     _pwm_Right0,#0xFF
04F8 22        1365            ret
04F9           1366   ;------------------------------------------------------------
04F9           1367   ;Allocation info for local variables in function 'turncar'
04F9           1368   ;------------------------------------------------------------
04F9           1369   ;leftright                 Allocated to registers r2 r3 
04F9           1370   ;vleft                     Allocated with name '_turncar_vleft_1_88'
04F9           1371   ;vright                    Allocated with name '_turncar_vright_1_88'
04F9           1372   ;------------------------------------------------------------
04F9           1373   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:303: void turncar (int leftright) {
04F9           1374   ;        -----------------------------------------
04F9           1375   ;         function turncar
04F9           1376   ;        -----------------------------------------
04F9           1377   _turncar:
04F9 AA82      1378            mov     r2,dpl
04FB AB83      1379            mov     r3,dph
04FD           1380   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:307: pwm_Left0 = -1;
04FD 7500FF    1381            mov     _pwm_Left0,#0xFF
0500           1382   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:308: pwm_Left1 = -1;
0500 75C0FF    1383            mov     _pwm_Left1,#0xFF
0503           1384   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:309: pwm_Right0 = -1;
0503 7580FF    1385            mov     _pwm_Right0,#0xFF
0506           1386   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:310: pwm_Right1 = -1;
0506 7540FF    1387            mov     _pwm_Right1,#0xFF
0509           1388   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:313: if (leftright == 0) {
0509 EA        1389            mov     a,r2
050A 4B        1390            orl     a,r3
050B 6001      1391            jz      L014022?
050D 020100    1392            ljmp    L014012?
0510           1393   L014022?:
0510           1394   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:315: pwm_Right0 = 50;
0510 758032    1395            mov     _pwm_Right0,#0x32
0513           1396   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:317: waitms(1000);
0513 9003E8    1397            mov     dptr,#0x03E8
0516 120100    1398            lcall   _waitms
0519           1399   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:319: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0519 75820B    1400            mov     dpl,#0x0B
051C 120100    1401            lcall   _Volts_at_Pin
051F 8582D0    1402            mov     _turncar_vleft_1_88,dpl
0522 8583D1    1403            mov     (_turncar_vleft_1_88 + 1),dph
0525 85F0D2    1404            mov     (_turncar_vleft_1_88 + 2),b
0528 F5D3      1405            mov     (_turncar_vleft_1_88 + 3),a
052A           1406   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:320: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
052A 75820C    1407            mov     dpl,#0x0C
052D 120100    1408            lcall   _Volts_at_Pin
0530 858220    1409            mov     _turncar_vright_1_88,dpl
0533 858321    1410            mov     (_turncar_vright_1_88 + 1),dph
0536 85F022    1411            mov     (_turncar_vright_1_88 + 2),b
0539 F523      1412            mov     (_turncar_vright_1_88 + 3),a
053B           1413   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:322: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
053B           1414   L014002?:
053B C020      1415            push    _turncar_vright_1_88
053D C021      1416            push    (_turncar_vright_1_88 + 1)
053F C022      1417            push    (_turncar_vright_1_88 + 2)
0541 C023      1418            push    (_turncar_vright_1_88 + 3)
0543 85D082    1419            mov     dpl,_turncar_vleft_1_88
0546 85D183    1420            mov     dph,(_turncar_vleft_1_88 + 1)
0549 85D2F0    1421            mov     b,(_turncar_vleft_1_88 + 2)
054C E5D3      1422            mov     a,(_turncar_vleft_1_88 + 3)
054E 120100    1423            lcall   ___fssub
0551 AC82      1424            mov     r4,dpl
0553 AD83      1425            mov     r5,dph
0555 AEF0      1426            mov     r6,b
0557 FF        1427            mov     r7,a
0558 E581      1428            mov     a,sp
055A 24FC      1429            add     a,#0xfc
055C F581      1430            mov     sp,a
055E 74CD      1431            mov     a,#0xCD
0560 C0E0      1432            push    acc
0562 74CC      1433            mov     a,#0xCC
0564 C0E0      1434            push    acc
0566 744C      1435            mov     a,#0x4C
0568 C0E0      1436            push    acc
056A 743E      1437            mov     a,#0x3E
056C C0E0      1438            push    acc
056E 8C82      1439            mov     dpl,r4
0570 8D83      1440            mov     dph,r5
0572 8EF0      1441            mov     b,r6
0574 EF        1442            mov     a,r7
0575 120100    1443            lcall   ___fsgt
0578 AC82      1444            mov     r4,dpl
057A E581      1445            mov     a,sp
057C 24FC      1446            add     a,#0xfc
057E F581      1447            mov     sp,a
0580 EC        1448            mov     a,r4
0581 7001      1449            jnz     L014003?
0583 C020      1450            push    _turncar_vright_1_88
0585 C021      1451            push    (_turncar_vright_1_88 + 1)
0587 C022      1452            push    (_turncar_vright_1_88 + 2)
0589 C023      1453            push    (_turncar_vright_1_88 + 3)
058B 85D082    1454            mov     dpl,_turncar_vleft_1_88
058E 85D183    1455            mov     dph,(_turncar_vleft_1_88 + 1)
0591 85D2F0    1456            mov     b,(_turncar_vleft_1_88 + 2)
0594 E5D3      1457            mov     a,(_turncar_vleft_1_88 + 3)
0596 120100    1458            lcall   ___fssub
0599 AC82      1459            mov     r4,dpl
059B AD83      1460            mov     r5,dph
059D AEF0      1461            mov     r6,b
059F FF        1462            mov     r7,a
05A0 E581      1463            mov     a,sp
05A2 24FC      1464            add     a,#0xfc
05A4 F581      1465            mov     sp,a
05A6 74CD      1466            mov     a,#0xCD
05A8 C0E0      1467            push    acc
05AA 74CC      1468            mov     a,#0xCC
05AC C0E0      1469            push    acc
05AE 744C      1470            mov     a,#0x4C
05B0 C0E0      1471            push    acc
05B2 74BE      1472            mov     a,#0xBE
05B4 C0E0      1473            push    acc
05B6 8C82      1474            mov     dpl,r4
05B8 8D83      1475            mov     dph,r5
05BA 8EF0      1476            mov     b,r6
05BC EF        1477            mov     a,r7
05BD 120100    1478            lcall   ___fslt
05C0 AC82      1479            mov     r4,dpl
05C2 E581      1480            mov     a,sp
05C4 24FC      1481            add     a,#0xfc
05C6 F581      1482            mov     sp,a
05C8 EC        1483            mov     a,r4
05C9 6001      1484            jz      L014004?
05CB           1485   L014003?:
05CB           1486   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:324: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
05CB 75820B    1487            mov     dpl,#0x0B
05CE 120100    1488            lcall   _Volts_at_Pin
05D1 8582D0    1489            mov     _turncar_vleft_1_88,dpl
05D4 8583D1    1490            mov     (_turncar_vleft_1_88 + 1),dph
05D7 85F0D2    1491            mov     (_turncar_vleft_1_88 + 2),b
05DA F5D3      1492            mov     (_turncar_vleft_1_88 + 3),a
05DC           1493   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:325: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
05DC 75820C    1494            mov     dpl,#0x0C
05DF 120100    1495            lcall   _Volts_at_Pin
05E2 858220    1496            mov     _turncar_vright_1_88,dpl
05E5 858321    1497            mov     (_turncar_vright_1_88 + 1),dph
05E8 85F022    1498            mov     (_turncar_vright_1_88 + 2),b
05EB F523      1499            mov     (_turncar_vright_1_88 + 3),a
05ED 020100    1500            ljmp    L014002?
05F0           1501   L014004?:
05F0           1502   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:329: pwm_Right0 = -1;                 
05F0 7580FF    1503            mov     _pwm_Right0,#0xFF
05F3 22        1504            ret
05F4           1505   L014012?:
05F4           1506   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:332: else if (leftright == 1) {
05F4 BA0150    1507            cjne    r2,#0x01,L014025?
05F7 BB0050    1508            cjne    r3,#0x00,L014025?
05FA 8001      1509            sjmp    L014026?
05FC           1510   L014025?:
05FC 22        1511            ret
05FD           1512   L014026?:
05FD           1513   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:334: pwm_Left1 = 50;
05FD 75C032    1514            mov     _pwm_Left1,#0x32
0600           1515   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:336: waitms(1000);
0600 9003E8    1516            mov     dptr,#0x03E8
0603 120100    1517            lcall   _waitms
0606           1518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:338: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0606 75820B    1519            mov     dpl,#0x0B
0609 120100    1520            lcall   _Volts_at_Pin
060C 8582D0    1521            mov     _turncar_vleft_1_88,dpl
060F 8583D1    1522            mov     (_turncar_vleft_1_88 + 1),dph
0612 85F0D2    1523            mov     (_turncar_vleft_1_88 + 2),b
0615 F5D3      1524            mov     (_turncar_vleft_1_88 + 3),a
0617           1525   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:339: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0617 75820C    1526            mov     dpl,#0x0C
061A 120100    1527            lcall   _Volts_at_Pin
061D 858220    1528            mov     _turncar_vright_1_88,dpl
0620 858321    1529            mov     (_turncar_vright_1_88 + 1),dph
0623 85F022    1530            mov     (_turncar_vright_1_88 + 2),b
0626 F523      1531            mov     (_turncar_vright_1_88 + 3),a
0628           1532   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:341: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0628           1533   L014006?:
0628 C020      1534            push    _turncar_vright_1_88
062A C021      1535            push    (_turncar_vright_1_88 + 1)
062C C022      1536            push    (_turncar_vright_1_88 + 2)
062E C023      1537            push    (_turncar_vright_1_88 + 3)
0630 85D082    1538            mov     dpl,_turncar_vleft_1_88
0633 85D183    1539            mov     dph,(_turncar_vleft_1_88 + 1)
0636 85D2F0    1540            mov     b,(_turncar_vleft_1_88 + 2)
0639 E5D3      1541            mov     a,(_turncar_vleft_1_88 + 3)
063B 120100    1542            lcall   ___fssub
063E AA82      1543            mov     r2,dpl
0640 AB83      1544            mov     r3,dph
0642 ACF0      1545            mov     r4,b
0644 FD        1546            mov     r5,a
0645 E581      1547            mov     a,sp
0647 24FC      1548            add     a,#0xfc
0649 F581      1549            mov     sp,a
064B 74CD      1550            mov     a,#0xCD
064D C0E0      1551            push    acc
064F 74CC      1552            mov     a,#0xCC
0651 C0E0      1553            push    acc
0653 744C      1554            mov     a,#0x4C
0655 C0E0      1555            push    acc
0657 743E      1556            mov     a,#0x3E
0659 C0E0      1557            push    acc
065B 8A82      1558            mov     dpl,r2
065D 8B83      1559            mov     dph,r3
065F 8CF0      1560            mov     b,r4
0661 ED        1561            mov     a,r5
0662 120100    1562            lcall   ___fsgt
0665 AA82      1563            mov     r2,dpl
0667 E581      1564            mov     a,sp
0669 24FC      1565            add     a,#0xfc
066B F581      1566            mov     sp,a
066D EA        1567            mov     a,r2
066E 7001      1568            jnz     L014007?
0670 C020      1569            push    _turncar_vright_1_88
0672 C021      1570            push    (_turncar_vright_1_88 + 1)
0674 C022      1571            push    (_turncar_vright_1_88 + 2)
0676 C023      1572            push    (_turncar_vright_1_88 + 3)
0678 85D082    1573            mov     dpl,_turncar_vleft_1_88
067B 85D183    1574            mov     dph,(_turncar_vleft_1_88 + 1)
067E 85D2F0    1575            mov     b,(_turncar_vleft_1_88 + 2)
0681 E5D3      1576            mov     a,(_turncar_vleft_1_88 + 3)
0683 120100    1577            lcall   ___fssub
0686 AA82      1578            mov     r2,dpl
0688 AB83      1579            mov     r3,dph
068A ACF0      1580            mov     r4,b
068C FD        1581            mov     r5,a
068D E581      1582            mov     a,sp
068F 24FC      1583            add     a,#0xfc
0691 F581      1584            mov     sp,a
0693 74CD      1585            mov     a,#0xCD
0695 C0E0      1586            push    acc
0697 74CC      1587            mov     a,#0xCC
0699 C0E0      1588            push    acc
069B 744C      1589            mov     a,#0x4C
069D C0E0      1590            push    acc
069F 74BE      1591            mov     a,#0xBE
06A1 C0E0      1592            push    acc
06A3 8A82      1593            mov     dpl,r2
06A5 8B83      1594            mov     dph,r3
06A7 8CF0      1595            mov     b,r4
06A9 ED        1596            mov     a,r5
06AA 120100    1597            lcall   ___fslt
06AD AA82      1598            mov     r2,dpl
06AF E581      1599            mov     a,sp
06B1 24FC      1600            add     a,#0xfc
06B3 F581      1601            mov     sp,a
06B5 EA        1602            mov     a,r2
06B6 6001      1603            jz      L014008?
06B8           1604   L014007?:
06B8           1605   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:343: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
06B8 75820B    1606            mov     dpl,#0x0B
06BB 120100    1607            lcall   _Volts_at_Pin
06BE 8582D0    1608            mov     _turncar_vleft_1_88,dpl
06C1 8583D1    1609            mov     (_turncar_vleft_1_88 + 1),dph
06C4 85F0D2    1610            mov     (_turncar_vleft_1_88 + 2),b
06C7 F5D3      1611            mov     (_turncar_vleft_1_88 + 3),a
06C9           1612   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:344: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
06C9 75820C    1613            mov     dpl,#0x0C
06CC 120100    1614            lcall   _Volts_at_Pin
06CF 858220    1615            mov     _turncar_vright_1_88,dpl
06D2 858321    1616            mov     (_turncar_vright_1_88 + 1),dph
06D5 85F022    1617            mov     (_turncar_vright_1_88 + 2),b
06D8 F523      1618            mov     (_turncar_vright_1_88 + 3),a
06DA 020100    1619            ljmp    L014006?
06DD           1620   L014008?:
06DD           1621   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:348: pwm_Left1 = -1; 
06DD 75C0FF    1622            mov     _pwm_Left1,#0xFF
06E0 22        1623            ret
06E1           1624   ;------------------------------------------------------------
06E1           1625   ;Allocation info for local variables in function 'uturn'
06E1           1626   ;------------------------------------------------------------
06E1           1627   ;vleft                     Allocated with name '_uturn_vleft_1_93'
06E1           1628   ;vright                    Allocated with name '_uturn_vright_1_93'
06E1           1629   ;------------------------------------------------------------
06E1           1630   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:352: void uturn () {
06E1           1631   ;        -----------------------------------------
06E1           1632   ;         function uturn
06E1           1633   ;        -----------------------------------------
06E1           1634   _uturn:
06E1           1635   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:356: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
06E1 75820B    1636            mov     dpl,#0x0B
06E4 120100    1637            lcall   _Volts_at_Pin
06E7 858270    1638            mov     _uturn_vleft_1_93,dpl
06EA 858371    1639            mov     (_uturn_vleft_1_93 + 1),dph
06ED 85F072    1640            mov     (_uturn_vleft_1_93 + 2),b
06F0 F573      1641            mov     (_uturn_vleft_1_93 + 3),a
06F2           1642   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:357: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
06F2 75820C    1643            mov     dpl,#0x0C
06F5 120100    1644            lcall   _Volts_at_Pin
06F8 8582C0    1645            mov     _uturn_vright_1_93,dpl
06FB 8583C1    1646            mov     (_uturn_vright_1_93 + 1),dph
06FE 85F0C2    1647            mov     (_uturn_vright_1_93 + 2),b
0701 F5C3      1648            mov     (_uturn_vright_1_93 + 3),a
0703           1649   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:359: pwm_Left0 = -1;
0703 7500FF    1650            mov     _pwm_Left0,#0xFF
0706           1651   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:360: pwm_Left1 = 50;
0706 75C032    1652            mov     _pwm_Left1,#0x32
0709           1653   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:361: pwm_Right0 = -1;
0709 7580FF    1654            mov     _pwm_Right0,#0xFF
070C           1655   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:362: pwm_Right1 = 50;
070C 754032    1656            mov     _pwm_Right1,#0x32
070F           1657   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:364: waitms(4000);
070F 900FA0    1658            mov     dptr,#0x0FA0
0712 120100    1659            lcall   _waitms
0715           1660   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:366: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0715           1661   L015002?:
0715 C0C0      1662            push    _uturn_vright_1_93
0717 C0C1      1663            push    (_uturn_vright_1_93 + 1)
0719 C0C2      1664            push    (_uturn_vright_1_93 + 2)
071B C0C3      1665            push    (_uturn_vright_1_93 + 3)
071D 857082    1666            mov     dpl,_uturn_vleft_1_93
0720 857183    1667            mov     dph,(_uturn_vleft_1_93 + 1)
0723 8572F0    1668            mov     b,(_uturn_vleft_1_93 + 2)
0726 E573      1669            mov     a,(_uturn_vleft_1_93 + 3)
0728 120100    1670            lcall   ___fssub
072B AA82      1671            mov     r2,dpl
072D AB83      1672            mov     r3,dph
072F ACF0      1673            mov     r4,b
0731 FD        1674            mov     r5,a
0732 E581      1675            mov     a,sp
0734 24FC      1676            add     a,#0xfc
0736 F581      1677            mov     sp,a
0738 74CD      1678            mov     a,#0xCD
073A C0E0      1679            push    acc
073C 74CC      1680            mov     a,#0xCC
073E C0E0      1681            push    acc
0740 744C      1682            mov     a,#0x4C
0742 C0E0      1683            push    acc
0744 743E      1684            mov     a,#0x3E
0746 C0E0      1685            push    acc
0748 8A82      1686            mov     dpl,r2
074A 8B83      1687            mov     dph,r3
074C 8CF0      1688            mov     b,r4
074E ED        1689            mov     a,r5
074F 120100    1690            lcall   ___fsgt
0752 AA82      1691            mov     r2,dpl
0754 E581      1692            mov     a,sp
0756 24FC      1693            add     a,#0xfc
0758 F581      1694            mov     sp,a
075A EA        1695            mov     a,r2
075B 7001      1696            jnz     L015003?
075D C0C0      1697            push    _uturn_vright_1_93
075F C0C1      1698            push    (_uturn_vright_1_93 + 1)
0761 C0C2      1699            push    (_uturn_vright_1_93 + 2)
0763 C0C3      1700            push    (_uturn_vright_1_93 + 3)
0765 857082    1701            mov     dpl,_uturn_vleft_1_93
0768 857183    1702            mov     dph,(_uturn_vleft_1_93 + 1)
076B 8572F0    1703            mov     b,(_uturn_vleft_1_93 + 2)
076E E573      1704            mov     a,(_uturn_vleft_1_93 + 3)
0770 120100    1705            lcall   ___fssub
0773 AA82      1706            mov     r2,dpl
0775 AB83      1707            mov     r3,dph
0777 ACF0      1708            mov     r4,b
0779 FD        1709            mov     r5,a
077A E581      1710            mov     a,sp
077C 24FC      1711            add     a,#0xfc
077E F581      1712            mov     sp,a
0780 74CD      1713            mov     a,#0xCD
0782 C0E0      1714            push    acc
0784 74CC      1715            mov     a,#0xCC
0786 C0E0      1716            push    acc
0788 744C      1717            mov     a,#0x4C
078A C0E0      1718            push    acc
078C 74BE      1719            mov     a,#0xBE
078E C0E0      1720            push    acc
0790 8A82      1721            mov     dpl,r2
0792 8B83      1722            mov     dph,r3
0794 8CF0      1723            mov     b,r4
0796 ED        1724            mov     a,r5
0797 120100    1725            lcall   ___fslt
079A AA82      1726            mov     r2,dpl
079C E581      1727            mov     a,sp
079E 24FC      1728            add     a,#0xfc
07A0 F581      1729            mov     sp,a
07A2 EA        1730            mov     a,r2
07A3 6001      1731            jz      L015005?
07A5           1732   L015003?:
07A5           1733   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:368: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
07A5 75820B    1734            mov     dpl,#0x0B
07A8 120100    1735            lcall   _Volts_at_Pin
07AB 858270    1736            mov     _uturn_vleft_1_93,dpl
07AE 858371    1737            mov     (_uturn_vleft_1_93 + 1),dph
07B1 85F072    1738            mov     (_uturn_vleft_1_93 + 2),b
07B4 F573      1739            mov     (_uturn_vleft_1_93 + 3),a
07B6           1740   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:369: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
07B6 75820C    1741            mov     dpl,#0x0C
07B9 120100    1742            lcall   _Volts_at_Pin
07BC 8582C0    1743            mov     _uturn_vright_1_93,dpl
07BF 8583C1    1744            mov     (_uturn_vright_1_93 + 1),dph
07C2 85F0C2    1745            mov     (_uturn_vright_1_93 + 2),b
07C5 F5C3      1746            mov     (_uturn_vright_1_93 + 3),a
07C7 020100    1747            ljmp    L015002?
07CA           1748   L015005?:
07CA 22        1749            ret
07CB           1750   ;------------------------------------------------------------
07CB           1751   ;Allocation info for local variables in function 'main'
07CB           1752   ;------------------------------------------------------------
07CB           1753   ;------------------------------------------------------------
07CB           1754   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:373: void main (void)
07CB           1755   ;        -----------------------------------------
07CB           1756   ;         function main
07CB           1757   ;        -----------------------------------------
07CB           1758   _main:
07CB           1759   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:376: MOTOR_LEFT0 =0;
07CB C295      1760            clr     _P1_5
07CD           1761   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:377: MOTOR_LEFT1 =0;
07CD C296      1762            clr     _P1_6
07CF           1763   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:378: MOTOR_RIGHT0 =0;
07CF C2A0      1764            clr     _P2_0
07D1           1765   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:379: MOTOR_RIGHT1 =0;
07D1 C2A1      1766            clr     _P2_1
07D3           1767   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:381: currentstate = 1;        //initialize the car to be stopped
07D3 758001    1768            mov     _currentstate,#0x01
07D6           1769   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:382: currentcmd = 1;          //initialize the command to be null
07D6 75C001    1770            mov     _currentcmd,#0x01
07D9           1771   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:385: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
07D9 7450      1772            mov     a,#__str_1
07DB C0E0      1773            push    acc
07DD 74A8      1774            mov     a,#(__str_1 >> 8)
07DF C0E0      1775            push    acc
07E1 7480      1776            mov     a,#0x80
07E3 C0E0      1777            push    acc
07E5 120100    1778            lcall   _printf
07E8 1581      1779            dec     sp
07EA 1581      1780            dec     sp
07EC 1581      1781            dec     sp
07EE           1782   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:394: InitPinADC(2, 3); // Configure P2.3 as analog input
07EE 756003    1783            mov     _InitPinADC_PARM_2,#0x03
07F1 758202    1784            mov     dpl,#0x02
07F4 120100    1785            lcall   _InitPinADC
07F7           1786   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:395: InitPinADC(2, 4); // Configure P2.4 as analog input
07F7 756004    1787            mov     _InitPinADC_PARM_2,#0x04
07FA 758202    1788            mov     dpl,#0x02
07FD 120100    1789            lcall   _InitPinADC
0800           1790   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:396: InitPinADC(1, 0);
0800 756000    1791            mov     _InitPinADC_PARM_2,#0x00
0803 758201    1792            mov     dpl,#0x01
0806 120100    1793            lcall   _InitPinADC
0809           1794   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:397: InitADC();
0809 120100    1795            lcall   _InitADC
080C           1796   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:399: while(1)
080C           1797   L016026?:
080C           1798   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:403: printf("adc readings = %f\r\n", Volts_at_Pin(LQFP32_MUX_P1_0));
080C 758200    1799            mov     dpl,#0x00
080F 120100    1800            lcall   _Volts_at_Pin
0812 AA82      1801            mov     r2,dpl
0814 AB83      1802            mov     r3,dph
0816 ACF0      1803            mov     r4,b
0818 FD        1804            mov     r5,a
0819 C002      1805            push    ar2
081B C003      1806            push    ar3
081D C004      1807            push    ar4
081F C005      1808            push    ar5
0821 74D0      1809            mov     a,#__str_2
0823 C0E0      1810            push    acc
0825 74A8      1811            mov     a,#(__str_2 >> 8)
0827 C0E0      1812            push    acc
0829 7480      1813            mov     a,#0x80
082B C0E0      1814            push    acc
082D 120100    1815            lcall   _printf
0830 E581      1816            mov     a,sp
0832 24F9      1817            add     a,#0xf9
0834 F581      1818            mov     sp,a
0836           1819   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:405: switch (currentstate) {
0836 AA80      1820            mov     r2,_currentstate
0838 BA0110    1821            cjne    r2,#0x01,L016042?
083B 8001      1822            sjmp    L016001?
083D           1823   L016042?:
083D BA0290    1824            cjne    r2,#0x02,L016043?
0840 8001      1825            sjmp    L016002?
0842           1826   L016043?:
0842           1827   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:406: case 1:
0842 BA0310    1828            cjne    r2,#0x03,L016004?
0845 8001      1829            sjmp    L016003?
0847           1830   L016001?:
0847           1831   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:407: linetrack(0);    //forwards
0847 900000    1832            mov     dptr,#0x0000
084A 120100    1833            lcall   _linetrack
084D           1834   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:408: break;
084D           1835   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:409: case 2:
084D 8001      1836            sjmp    L016004?
084F           1837   L016002?:
084F           1838   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:410: linetrack(1);    //backwards
084F 900001    1839            mov     dptr,#0x0001
0852 120100    1840            lcall   _linetrack
0855           1841   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:411: break;
0855           1842   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:412: case 3:
0855 8001      1843            sjmp    L016004?
0857           1844   L016003?:
0857           1845   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:413: stopcar();               //stop car
0857 120100    1846            lcall   _stopcar
085A           1847   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:415: }
085A           1848   L016004?:
085A           1849   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:417: switch (currentcmd) {
085A E5C0      1850            mov     a,_currentcmd
085C FA        1851            mov     r2,a
085D 30E790    1852            jnb     acc.7,L016045?
0860 020100    1853            ljmp    L016023?
0863           1854   L016045?:
0863 C3        1855            clr     c
0864 7486      1856            mov     a,#(0x06 ^ 0x80)
0866 8AF0      1857            mov     b,r2
0868 63F080    1858            xrl     b,#0x80
086B 95F0      1859            subb    a,b
086D 5001      1860            jnc     L016046?
086F 020100    1861            ljmp    L016023?
0872           1862   L016046?:
0872 EA        1863            mov     a,r2
0873 2A        1864            add     a,r2
0874 2A        1865            add     a,r2
0875 90AB50    1866            mov     dptr,#L016047?
0878 73        1867            jmp     @a+dptr
0879           1868   L016047?:
0879 020100    1869            ljmp    L016005?
087C 020100    1870            ljmp    L016011?
087F 020100    1871            ljmp    L016015?
0882 020100    1872            ljmp    L016019?
0885 020100    1873            ljmp    L016020?
0888 020100    1874            ljmp    L016021?
088B 020100    1875            ljmp    L016022?
088E           1876   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:419: case 0 :
088E           1877   L016005?:
088E           1878   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:421: if (currentstate == 1) {
088E 7401      1879            mov     a,#0x01
0890 B58050    1880            cjne    a,_currentstate,L016048?
0893 8001      1881            sjmp    L016049?
0895           1882   L016048?:
0895 020100    1883            ljmp    L016026?
0898           1884   L016049?:
0898           1885   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:422: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 && Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
0898 75820B    1886            mov     dpl,#0x0B
089B 120100    1887            lcall   _Volts_at_Pin
089E AA82      1888            mov     r2,dpl
08A0 AB83      1889            mov     r3,dph
08A2 ACF0      1890            mov     r4,b
08A4 FD        1891            mov     r5,a
08A5 E4        1892            clr     a
08A6 C0E0      1893            push    acc
08A8 C0E0      1894            push    acc
08AA 7480      1895            mov     a,#0x80
08AC C0E0      1896            push    acc
08AE 743F      1897            mov     a,#0x3F
08B0 C0E0      1898            push    acc
08B2 8A82      1899            mov     dpl,r2
08B4 8B83      1900            mov     dph,r3
08B6 8CF0      1901            mov     b,r4
08B8 ED        1902            mov     a,r5
08B9 120100    1903            lcall   ___fsgt
08BC AA82      1904            mov     r2,dpl
08BE E581      1905            mov     a,sp
08C0 24FC      1906            add     a,#0xfc
08C2 F581      1907            mov     sp,a
08C4 EA        1908            mov     a,r2
08C5 7001      1909            jnz     L016050?
08C7 020100    1910            ljmp    L016026?
08CA           1911   L016050?:
08CA 75820C    1912            mov     dpl,#0x0C
08CD 120100    1913            lcall   _Volts_at_Pin
08D0 AA82      1914            mov     r2,dpl
08D2 AB83      1915            mov     r3,dph
08D4 ACF0      1916            mov     r4,b
08D6 FD        1917            mov     r5,a
08D7 E4        1918            clr     a
08D8 C0E0      1919            push    acc
08DA C0E0      1920            push    acc
08DC 7480      1921            mov     a,#0x80
08DE C0E0      1922            push    acc
08E0 743F      1923            mov     a,#0x3F
08E2 C0E0      1924            push    acc
08E4 8A82      1925            mov     dpl,r2
08E6 8B83      1926            mov     dph,r3
08E8 8CF0      1927            mov     b,r4
08EA ED        1928            mov     a,r5
08EB 120100    1929            lcall   ___fsgt
08EE AA82      1930            mov     r2,dpl
08F0 E581      1931            mov     a,sp
08F2 24FC      1932            add     a,#0xfc
08F4 F581      1933            mov     sp,a
08F6 EA        1934            mov     a,r2
08F7 7001      1935            jnz     L016051?
08F9 020100    1936            ljmp    L016026?
08FC           1937   L016051?:
08FC           1938   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:424: pwm_Left1 = 35;
08FC 75C023    1939            mov     _pwm_Left1,#0x23
08FF           1940   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:425: pwm_Left0 = -1;
08FF 7500FF    1941            mov     _pwm_Left0,#0xFF
0902           1942   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:426: pwm_Right0 = 35;
0902 758023    1943            mov     _pwm_Right0,#0x23
0905           1944   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:427: pwm_Right1 = -1;                                                 
0905 7540FF    1945            mov     _pwm_Right1,#0xFF
0908           1946   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:428: waitms(1500);
0908 9005DC    1947            mov     dptr,#0x05DC
090B 120100    1948            lcall   _waitms
090E           1949   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:431: break;
090E 020100    1950            ljmp    L016026?
0911           1951   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:432: case 1 :
0911           1952   L016011?:
0911           1953   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:434: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 && Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
0911 75820B    1954            mov     dpl,#0x0B
0914 120100    1955            lcall   _Volts_at_Pin
0917 AA82      1956            mov     r2,dpl
0919 AB83      1957            mov     r3,dph
091B ACF0      1958            mov     r4,b
091D FD        1959            mov     r5,a
091E E4        1960            clr     a
091F C0E0      1961            push    acc
0921 C0E0      1962            push    acc
0923 7480      1963            mov     a,#0x80
0925 C0E0      1964            push    acc
0927 743F      1965            mov     a,#0x3F
0929 C0E0      1966            push    acc
092B 8A82      1967            mov     dpl,r2
092D 8B83      1968            mov     dph,r3
092F 8CF0      1969            mov     b,r4
0931 ED        1970            mov     a,r5
0932 120100    1971            lcall   ___fsgt
0935 AA82      1972            mov     r2,dpl
0937 E581      1973            mov     a,sp
0939 24FC      1974            add     a,#0xfc
093B F581      1975            mov     sp,a
093D EA        1976            mov     a,r2
093E 7001      1977            jnz     L016052?
0940 020100    1978            ljmp    L016026?
0943           1979   L016052?:
0943 75820C    1980            mov     dpl,#0x0C
0946 120100    1981            lcall   _Volts_at_Pin
0949 AA82      1982            mov     r2,dpl
094B AB83      1983            mov     r3,dph
094D ACF0      1984            mov     r4,b
094F FD        1985            mov     r5,a
0950 E4        1986            clr     a
0951 C0E0      1987            push    acc
0953 C0E0      1988            push    acc
0955 7480      1989            mov     a,#0x80
0957 C0E0      1990            push    acc
0959 743F      1991            mov     a,#0x3F
095B C0E0      1992            push    acc
095D 8A82      1993            mov     dpl,r2
095F 8B83      1994            mov     dph,r3
0961 8CF0      1995            mov     b,r4
0963 ED        1996            mov     a,r5
0964 120100    1997            lcall   ___fsgt
0967 AA82      1998            mov     r2,dpl
0969 E581      1999            mov     a,sp
096B 24FC      2000            add     a,#0xfc
096D F581      2001            mov     sp,a
096F EA        2002            mov     a,r2
0970 7001      2003            jnz     L016053?
0972 020100    2004            ljmp    L016026?
0975           2005   L016053?:
0975           2006   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:436: pwm_Left1 = 35;
0975 75C023    2007            mov     _pwm_Left1,#0x23
0978           2008   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:437: pwm_Left0 = -1;
0978 7500FF    2009            mov     _pwm_Left0,#0xFF
097B           2010   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:438: pwm_Right0 = 35;
097B 758023    2011            mov     _pwm_Right0,#0x23
097E           2012   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:439: pwm_Right1 = -1;                                                 
097E 7540FF    2013            mov     _pwm_Right1,#0xFF
0981           2014   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:440: waitms(1500);
0981 9005DC    2015            mov     dptr,#0x05DC
0984 120100    2016            lcall   _waitms
0987           2017   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:442: turncar(0); //0 = left
0987 900000    2018            mov     dptr,#0x0000
098A 120100    2019            lcall   _turncar
098D           2020   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:443: currentcmd = 0;
098D 75C000    2021            mov     _currentcmd,#0x00
0990           2022   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:446: break;
0990 020100    2023            ljmp    L016026?
0993           2024   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:449: case 2 :
0993           2025   L016015?:
0993           2026   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:451: if (Volts_at_Pin(LQFP32_MUX_P2_4) > 1 || Volts_at_Pin(LQFP32_MUX_P2_3) > 1) {
0993 75820C    2027            mov     dpl,#0x0C
0996 120100    2028            lcall   _Volts_at_Pin
0999 AA82      2029            mov     r2,dpl
099B AB83      2030            mov     r3,dph
099D ACF0      2031            mov     r4,b
099F FD        2032            mov     r5,a
09A0 E4        2033            clr     a
09A1 C0E0      2034            push    acc
09A3 C0E0      2035            push    acc
09A5 7480      2036            mov     a,#0x80
09A7 C0E0      2037            push    acc
09A9 743F      2038            mov     a,#0x3F
09AB C0E0      2039            push    acc
09AD 8A82      2040            mov     dpl,r2
09AF 8B83      2041            mov     dph,r3
09B1 8CF0      2042            mov     b,r4
09B3 ED        2043            mov     a,r5
09B4 120100    2044            lcall   ___fsgt
09B7 AA82      2045            mov     r2,dpl
09B9 E581      2046            mov     a,sp
09BB 24FC      2047            add     a,#0xfc
09BD F581      2048            mov     sp,a
09BF EA        2049            mov     a,r2
09C0 7001      2050            jnz     L016016?
09C2 75820B    2051            mov     dpl,#0x0B
09C5 120100    2052            lcall   _Volts_at_Pin
09C8 AA82      2053            mov     r2,dpl
09CA AB83      2054            mov     r3,dph
09CC ACF0      2055            mov     r4,b
09CE FD        2056            mov     r5,a
09CF E4        2057            clr     a
09D0 C0E0      2058            push    acc
09D2 C0E0      2059            push    acc
09D4 7480      2060            mov     a,#0x80
09D6 C0E0      2061            push    acc
09D8 743F      2062            mov     a,#0x3F
09DA C0E0      2063            push    acc
09DC 8A82      2064            mov     dpl,r2
09DE 8B83      2065            mov     dph,r3
09E0 8CF0      2066            mov     b,r4
09E2 ED        2067            mov     a,r5
09E3 120100    2068            lcall   ___fsgt
09E6 AA82      2069            mov     r2,dpl
09E8 E581      2070            mov     a,sp
09EA 24FC      2071            add     a,#0xfc
09EC F581      2072            mov     sp,a
09EE EA        2073            mov     a,r2
09EF 7001      2074            jnz     L016055?
09F1 020100    2075            ljmp    L016026?
09F4           2076   L016055?:
09F4           2077   L016016?:
09F4           2078   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:452: printf("\n\r reached intersection :D");
09F4 7450      2079            mov     a,#__str_3
09F6 C0E0      2080            push    acc
09F8 74AF      2081            mov     a,#(__str_3 >> 8)
09FA C0E0      2082            push    acc
09FC 7480      2083            mov     a,#0x80
09FE C0E0      2084            push    acc
0A00 120100    2085            lcall   _printf
0A03 1581      2086            dec     sp
0A05 1581      2087            dec     sp
0A07 1581      2088            dec     sp
0A09           2089   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:453: pwm_Left1 = 35;
0A09 75C023    2090            mov     _pwm_Left1,#0x23
0A0C           2091   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:454: pwm_Left0 = -1;
0A0C 7500FF    2092            mov     _pwm_Left0,#0xFF
0A0F           2093   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:455: pwm_Right0 = 35;
0A0F 758023    2094            mov     _pwm_Right0,#0x23
0A12           2095   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:456: pwm_Right1 = -1;
0A12 7540FF    2096            mov     _pwm_Right1,#0xFF
0A15           2097   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:457: waitms(1500);
0A15 9005DC    2098            mov     dptr,#0x05DC
0A18 120100    2099            lcall   _waitms
0A1B           2100   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:459: turncar(1); //1 = right
0A1B 900001    2101            mov     dptr,#0x0001
0A1E 120100    2102            lcall   _turncar
0A21           2103   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:460: currentcmd = 0;
0A21 75C000    2104            mov     _currentcmd,#0x00
0A24           2105   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:462: break;
0A24 020100    2106            ljmp    L016026?
0A27           2107   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:465: case 3 :
0A27           2108   L016019?:
0A27           2109   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:466: currentstate = 1;
0A27 758001    2110            mov     _currentstate,#0x01
0A2A           2111   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:467: currentcmd = 0;
0A2A 75C000    2112            mov     _currentcmd,#0x00
0A2D           2113   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:468: break;
0A2D 020100    2114            ljmp    L016026?
0A30           2115   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:471: case 4 :
0A30           2116   L016020?:
0A30           2117   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:472: currentstate = 2;
0A30 758002    2118            mov     _currentstate,#0x02
0A33           2119   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:473: currentcmd = 0;
0A33 75C000    2120            mov     _currentcmd,#0x00
0A36           2121   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:474: break;
0A36 020100    2122            ljmp    L016026?
0A39           2123   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:477: case 5 :
0A39           2124   L016021?:
0A39           2125   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:478: currentstate = 3;
0A39 758003    2126            mov     _currentstate,#0x03
0A3C           2127   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:479: currentcmd = 0;
0A3C 75C000    2128            mov     _currentcmd,#0x00
0A3F           2129   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:480: break;
0A3F 020100    2130            ljmp    L016026?
0A42           2131   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:483: case 6 :
0A42           2132   L016022?:
0A42           2133   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:484: uturn();  //uturn
0A42 120100    2134            lcall   _uturn
0A45           2135   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:485: currentcmd = 0;
0A45 75C000    2136            mov     _currentcmd,#0x00
0A48           2137   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:486: break;
0A48 020100    2138            ljmp    L016026?
0A4B           2139   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:487: default: 
0A4B           2140   L016023?:
0A4B           2141   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:488: currentstate = 1;
0A4B 758001    2142            mov     _currentstate,#0x01
0A4E           2143   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:489: }
0A4E 020100    2144            ljmp    L016026?
0A51           2145            rseg R_CSEG
0A51           2146   
0000           2147            rseg R_XINIT
0000           2148   
0000           2149            rseg R_CONST
0000           2150   __str_0:
0000 63757272  2151            db 'current command is %d'
     656E7420
     636F6D6D
     616E6420
     69732025
     64
0015 0D        2152            db 0x0D
0016 0A        2153            db 0x0A
0017 00        2154            db 0x00
0018           2155   __str_1:
0018 1B        2156            db 0x1B
0019 5B324A    2157            db '[2J'
001C 00        2158            db 0x00
001D           2159   __str_2:
001D 61646320  2160            db 'adc readings = %f'
     72656164
     696E6773
     203D2025
     66
002E 0D        2161            db 0x0D
002F 0A        2162            db 0x0A
0030 00        2163            db 0x00
0031           2164   __str_3:
0031 0A        2165            db 0x0A
0032 0D        2166            db 0x0D
0033 20726561  2167            db ' reached intersection :D'
     63686564
     20696E74
     65727365
     6374696F
     6E203A44
004B 00        2168            db 0x00
004C           2169   
002E           2170            CSEG
002E           2171   
002E           2172   end
