0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Apr 02 12:57:37 2017
0000              5   ;--------------------------------------------------------
                  5   $name motors
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _uturn
0000             30            public _turncar
0000             31            public _stopcar
0000             32            public _linetrack
0000             33            public _readData
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _forward_backward
0000             39            public _Timer2_ISR
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _currentstate
0000             44            public _currentcmd
0000             45            public _direction
0000             46            public _pwm_Right1
0000             47            public _pwm_Right0
0000             48            public _pwm_Left1
0000             49            public _pwm_Left0
0000             50            public _pwm_both
0000             51            public _mode
0000             52            public _pwm_count
0000             53   ;--------------------------------------------------------
0000             54   ; Special Function Registers
0000             55   ;--------------------------------------------------------
0000             56   _P0             DATA 0x80
0000             57   _SP             DATA 0x81
0000             58   _DPL            DATA 0x82
0000             59   _DPH            DATA 0x83
0000             60   _EMI0TC         DATA 0x84
0000             61   _EMI0CF         DATA 0x85
0000             62   _OSCLCN         DATA 0x86
0000             63   _PCON           DATA 0x87
0000             64   _TCON           DATA 0x88
0000             65   _TMOD           DATA 0x89
0000             66   _TL0            DATA 0x8a
0000             67   _TL1            DATA 0x8b
0000             68   _TH0            DATA 0x8c
0000             69   _TH1            DATA 0x8d
0000             70   _CKCON          DATA 0x8e
0000             71   _PSCTL          DATA 0x8f
0000             72   _P1             DATA 0x90
0000             73   _TMR3CN         DATA 0x91
0000             74   _TMR4CN         DATA 0x91
0000             75   _TMR3RLL        DATA 0x92
0000             76   _TMR4RLL        DATA 0x92
0000             77   _TMR3RLH        DATA 0x93
0000             78   _TMR4RLH        DATA 0x93
0000             79   _TMR3L          DATA 0x94
0000             80   _TMR4L          DATA 0x94
0000             81   _TMR3H          DATA 0x95
0000             82   _TMR4H          DATA 0x95
0000             83   _USB0ADR        DATA 0x96
0000             84   _USB0DAT        DATA 0x97
0000             85   _SCON           DATA 0x98
0000             86   _SCON0          DATA 0x98
0000             87   _SBUF           DATA 0x99
0000             88   _SBUF0          DATA 0x99
0000             89   _CPT1CN         DATA 0x9a
0000             90   _CPT0CN         DATA 0x9b
0000             91   _CPT1MD         DATA 0x9c
0000             92   _CPT0MD         DATA 0x9d
0000             93   _CPT1MX         DATA 0x9e
0000             94   _CPT0MX         DATA 0x9f
0000             95   _P2             DATA 0xa0
0000             96   _SPI0CFG        DATA 0xa1
0000             97   _SPI0CKR        DATA 0xa2
0000             98   _SPI0DAT        DATA 0xa3
0000             99   _P0MDOUT        DATA 0xa4
0000            100   _P1MDOUT        DATA 0xa5
0000            101   _P2MDOUT        DATA 0xa6
0000            102   _P3MDOUT        DATA 0xa7
0000            103   _IE             DATA 0xa8
0000            104   _CLKSEL         DATA 0xa9
0000            105   _EMI0CN         DATA 0xaa
0000            106   __XPAGE         DATA 0xaa
0000            107   _SBCON1         DATA 0xac
0000            108   _P4MDOUT        DATA 0xae
0000            109   _PFE0CN         DATA 0xaf
0000            110   _P3             DATA 0xb0
0000            111   _OSCXCN         DATA 0xb1
0000            112   _OSCICN         DATA 0xb2
0000            113   _OSCICL         DATA 0xb3
0000            114   _SBRLL1         DATA 0xb4
0000            115   _SBRLH1         DATA 0xb5
0000            116   _FLSCL          DATA 0xb6
0000            117   _FLKEY          DATA 0xb7
0000            118   _IP             DATA 0xb8
0000            119   _CLKMUL         DATA 0xb9
0000            120   _SMBTC          DATA 0xb9
0000            121   _AMX0N          DATA 0xba
0000            122   _AMX0P          DATA 0xbb
0000            123   _ADC0CF         DATA 0xbc
0000            124   _ADC0L          DATA 0xbd
0000            125   _ADC0H          DATA 0xbe
0000            126   _SFRPAGE        DATA 0xbf
0000            127   _SMB0CN         DATA 0xc0
0000            128   _SMB1CN         DATA 0xc0
0000            129   _SMB0CF         DATA 0xc1
0000            130   _SMB1CF         DATA 0xc1
0000            131   _SMB0DAT        DATA 0xc2
0000            132   _SMB1DAT        DATA 0xc2
0000            133   _ADC0GTL        DATA 0xc3
0000            134   _ADC0GTH        DATA 0xc4
0000            135   _ADC0LTL        DATA 0xc5
0000            136   _ADC0LTH        DATA 0xc6
0000            137   _P4             DATA 0xc7
0000            138   _TMR2CN         DATA 0xc8
0000            139   _TMR5CN         DATA 0xc8
0000            140   _REG01CN        DATA 0xc9
0000            141   _TMR2RLL        DATA 0xca
0000            142   _TMR5RLL        DATA 0xca
0000            143   _TMR2RLH        DATA 0xcb
0000            144   _TMR5RLH        DATA 0xcb
0000            145   _TMR2L          DATA 0xcc
0000            146   _TMR5L          DATA 0xcc
0000            147   _TMR2H          DATA 0xcd
0000            148   _TMR5H          DATA 0xcd
0000            149   _SMB0ADM        DATA 0xce
0000            150   _SMB1ADM        DATA 0xce
0000            151   _SMB0ADR        DATA 0xcf
0000            152   _SMB1ADR        DATA 0xcf
0000            153   _PSW            DATA 0xd0
0000            154   _REF0CN         DATA 0xd1
0000            155   _SCON1          DATA 0xd2
0000            156   _SBUF1          DATA 0xd3
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2SKIP         DATA 0xd6
0000            160   _USB0XCN        DATA 0xd7
0000            161   _PCA0CN         DATA 0xd8
0000            162   _PCA0MD         DATA 0xd9
0000            163   _PCA0CPM0       DATA 0xda
0000            164   _PCA0CPM1       DATA 0xdb
0000            165   _PCA0CPM2       DATA 0xdc
0000            166   _PCA0CPM3       DATA 0xdd
0000            167   _PCA0CPM4       DATA 0xde
0000            168   _P3SKIP         DATA 0xdf
0000            169   _ACC            DATA 0xe0
0000            170   _XBR0           DATA 0xe1
0000            171   _XBR1           DATA 0xe2
0000            172   _XBR2           DATA 0xe3
0000            173   _IT01CF         DATA 0xe4
0000            174   _CKCON1         DATA 0xe4
0000            175   _SMOD1          DATA 0xe5
0000            176   _EIE1           DATA 0xe6
0000            177   _EIE2           DATA 0xe7
0000            178   _ADC0CN         DATA 0xe8
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPH1       DATA 0xea
0000            181   _PCA0CPL2       DATA 0xeb
0000            182   _PCA0CPH2       DATA 0xec
0000            183   _PCA0CPL3       DATA 0xed
0000            184   _PCA0CPH3       DATA 0xee
0000            185   _RSTSRC         DATA 0xef
0000            186   _B              DATA 0xf0
0000            187   _P0MDIN         DATA 0xf1
0000            188   _P1MDIN         DATA 0xf2
0000            189   _P2MDIN         DATA 0xf3
0000            190   _P3MDIN         DATA 0xf4
0000            191   _P4MDIN         DATA 0xf5
0000            192   _EIP1           DATA 0xf6
0000            193   _EIP2           DATA 0xf7
0000            194   _SPI0CN         DATA 0xf8
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0H          DATA 0xfa
0000            197   _PCA0CPL0       DATA 0xfb
0000            198   _PCA0CPH0       DATA 0xfc
0000            199   _PCA0CPL4       DATA 0xfd
0000            200   _PCA0CPH4       DATA 0xfe
0000            201   _VDM0CN         DATA 0xff
0000            202   _DPTR           DATA 0x8382
0000            203   _TMR2RL         DATA 0xcbca
0000            204   _TMR3RL         DATA 0x9392
0000            205   _TMR4RL         DATA 0x9392
0000            206   _TMR5RL         DATA 0xcbca
0000            207   _TMR2           DATA 0xcdcc
0000            208   _TMR3           DATA 0x9594
0000            209   _TMR4           DATA 0x9594
0000            210   _TMR5           DATA 0xcdcc
0000            211   _SBRL1          DATA 0xb5b4
0000            212   _ADC0           DATA 0xbebd
0000            213   _ADC0GT         DATA 0xc4c3
0000            214   _ADC0LT         DATA 0xc6c5
0000            215   _PCA0           DATA 0xfaf9
0000            216   _PCA0CP1        DATA 0xeae9
0000            217   _PCA0CP2        DATA 0xeceb
0000            218   _PCA0CP3        DATA 0xeeed
0000            219   _PCA0CP0        DATA 0xfcfb
0000            220   _PCA0CP4        DATA 0xfefd
0000            221   ;--------------------------------------------------------
0000            222   ; special function bits
0000            223   ;--------------------------------------------------------
0000            224   _P0_0           BIT 0x80
0000            225   _P0_1           BIT 0x81
0000            226   _P0_2           BIT 0x82
0000            227   _P0_3           BIT 0x83
0000            228   _P0_4           BIT 0x84
0000            229   _P0_5           BIT 0x85
0000            230   _P0_6           BIT 0x86
0000            231   _P0_7           BIT 0x87
0000            232   _TF1            BIT 0x8f
0000            233   _TR1            BIT 0x8e
0000            234   _TF0            BIT 0x8d
0000            235   _TR0            BIT 0x8c
0000            236   _IE1            BIT 0x8b
0000            237   _IT1            BIT 0x8a
0000            238   _IE0            BIT 0x89
0000            239   _IT0            BIT 0x88
0000            240   _P1_0           BIT 0x90
0000            241   _P1_1           BIT 0x91
0000            242   _P1_2           BIT 0x92
0000            243   _P1_3           BIT 0x93
0000            244   _P1_4           BIT 0x94
0000            245   _P1_5           BIT 0x95
0000            246   _P1_6           BIT 0x96
0000            247   _P1_7           BIT 0x97
0000            248   _S0MODE         BIT 0x9f
0000            249   _SCON0_6        BIT 0x9e
0000            250   _MCE0           BIT 0x9d
0000            251   _REN0           BIT 0x9c
0000            252   _TB80           BIT 0x9b
0000            253   _RB80           BIT 0x9a
0000            254   _TI0            BIT 0x99
0000            255   _RI0            BIT 0x98
0000            256   _SCON_6         BIT 0x9e
0000            257   _MCE            BIT 0x9d
0000            258   _REN            BIT 0x9c
0000            259   _TB8            BIT 0x9b
0000            260   _RB8            BIT 0x9a
0000            261   _TI             BIT 0x99
0000            262   _RI             BIT 0x98
0000            263   _P2_0           BIT 0xa0
0000            264   _P2_1           BIT 0xa1
0000            265   _P2_2           BIT 0xa2
0000            266   _P2_3           BIT 0xa3
0000            267   _P2_4           BIT 0xa4
0000            268   _P2_5           BIT 0xa5
0000            269   _P2_6           BIT 0xa6
0000            270   _P2_7           BIT 0xa7
0000            271   _EA             BIT 0xaf
0000            272   _ESPI0          BIT 0xae
0000            273   _ET2            BIT 0xad
0000            274   _ES0            BIT 0xac
0000            275   _ET1            BIT 0xab
0000            276   _EX1            BIT 0xaa
0000            277   _ET0            BIT 0xa9
0000            278   _EX0            BIT 0xa8
0000            279   _P3_0           BIT 0xb0
0000            280   _P3_1           BIT 0xb1
0000            281   _P3_2           BIT 0xb2
0000            282   _P3_3           BIT 0xb3
0000            283   _P3_4           BIT 0xb4
0000            284   _P3_5           BIT 0xb5
0000            285   _P3_6           BIT 0xb6
0000            286   _P3_7           BIT 0xb7
0000            287   _IP_7           BIT 0xbf
0000            288   _PSPI0          BIT 0xbe
0000            289   _PT2            BIT 0xbd
0000            290   _PS0            BIT 0xbc
0000            291   _PT1            BIT 0xbb
0000            292   _PX1            BIT 0xba
0000            293   _PT0            BIT 0xb9
0000            294   _PX0            BIT 0xb8
0000            295   _MASTER0        BIT 0xc7
0000            296   _TXMODE0        BIT 0xc6
0000            297   _STA0           BIT 0xc5
0000            298   _STO0           BIT 0xc4
0000            299   _ACKRQ0         BIT 0xc3
0000            300   _ARBLOST0       BIT 0xc2
0000            301   _ACK0           BIT 0xc1
0000            302   _SI0            BIT 0xc0
0000            303   _MASTER1        BIT 0xc7
0000            304   _TXMODE1        BIT 0xc6
0000            305   _STA1           BIT 0xc5
0000            306   _STO1           BIT 0xc4
0000            307   _ACKRQ1         BIT 0xc3
0000            308   _ARBLOST1       BIT 0xc2
0000            309   _ACK1           BIT 0xc1
0000            310   _SI1            BIT 0xc0
0000            311   _TF2            BIT 0xcf
0000            312   _TF2H           BIT 0xcf
0000            313   _TF2L           BIT 0xce
0000            314   _TF2LEN         BIT 0xcd
0000            315   _TF2CEN         BIT 0xcc
0000            316   _T2SPLIT        BIT 0xcb
0000            317   _TR2            BIT 0xca
0000            318   _T2CSS          BIT 0xc9
0000            319   _T2XCLK         BIT 0xc8
0000            320   _TF5H           BIT 0xcf
0000            321   _TF5L           BIT 0xce
0000            322   _TF5LEN         BIT 0xcd
0000            323   _TMR5CN_4       BIT 0xcc
0000            324   _T5SPLIT        BIT 0xcb
0000            325   _TR5            BIT 0xca
0000            326   _TMR5CN_1       BIT 0xc9
0000            327   _T5XCLK         BIT 0xc8
0000            328   _CY             BIT 0xd7
0000            329   _AC             BIT 0xd6
0000            330   _F0             BIT 0xd5
0000            331   _RS1            BIT 0xd4
0000            332   _RS0            BIT 0xd3
0000            333   _OV             BIT 0xd2
0000            334   _F1             BIT 0xd1
0000            335   _PARITY         BIT 0xd0
0000            336   _CF             BIT 0xdf
0000            337   _CR             BIT 0xde
0000            338   _PCA0CN_5       BIT 0xde
0000            339   _CCF4           BIT 0xdc
0000            340   _CCF3           BIT 0xdb
0000            341   _CCF2           BIT 0xda
0000            342   _CCF1           BIT 0xd9
0000            343   _CCF0           BIT 0xd8
0000            344   _ACC_7          BIT 0xe7
0000            345   _ACC_6          BIT 0xe6
0000            346   _ACC_5          BIT 0xe5
0000            347   _ACC_4          BIT 0xe4
0000            348   _ACC_3          BIT 0xe3
0000            349   _ACC_2          BIT 0xe2
0000            350   _ACC_1          BIT 0xe1
0000            351   _ACC_0          BIT 0xe0
0000            352   _AD0EN          BIT 0xef
0000            353   _AD0TM          BIT 0xee
0000            354   _AD0INT         BIT 0xed
0000            355   _AD0BUSY        BIT 0xec
0000            356   _AD0WINT        BIT 0xeb
0000            357   _AD0CM2         BIT 0xea
0000            358   _AD0CM1         BIT 0xe9
0000            359   _AD0CM0         BIT 0xe8
0000            360   _B_7            BIT 0xf7
0000            361   _B_6            BIT 0xf6
0000            362   _B_5            BIT 0xf5
0000            363   _B_4            BIT 0xf4
0000            364   _B_3            BIT 0xf3
0000            365   _B_2            BIT 0xf2
0000            366   _B_1            BIT 0xf1
0000            367   _B_0            BIT 0xf0
0000            368   _SPIF           BIT 0xff
0000            369   _WCOL           BIT 0xfe
0000            370   _MODF           BIT 0xfd
0000            371   _RXOVRN         BIT 0xfc
0000            372   _NSSMD1         BIT 0xfb
0000            373   _NSSMD0         BIT 0xfa
0000            374   _TXBMT          BIT 0xf9
0000            375   _SPIEN          BIT 0xf8
0000            376   ;--------------------------------------------------------
0000            377   ; overlayable register banks
0000            378   ;--------------------------------------------------------
0000            379            rbank0 segment data overlay
0000            380   ;--------------------------------------------------------
0000            381   ; internal ram data
0000            382   ;--------------------------------------------------------
0000            383            rseg R_DSEG
0000            384   _pwm_count:
0000            385            ds 1
0001            386   _mode:
0001            387            ds 1
0002            388   _pwm_both:
0002            389            ds 1
0003            390   _pwm_Left0:
0003            391            ds 1
0004            392   _pwm_Left1:
0004            393            ds 1
0005            394   _pwm_Right0:
0005            395            ds 1
0006            396   _pwm_Right1:
0006            397            ds 1
0007            398   _direction:
0007            399            ds 1
0008            400   _currentcmd:
0008            401            ds 1
0009            402   _currentstate:
0009            403            ds 1
000A            404   _linetrack_vleft_1_84:
000A            405            ds 4
000E            406   _linetrack_vright_1_84:
000E            407            ds 4
0012            408   _linetrack_sloc0_1_0:
0012            409            ds 4
0016            410   _linetrack_sloc1_1_0:
0016            411            ds 2
0018            412   _turncar_vleft_1_88:
0018            413            ds 4
001C            414   _turncar_vright_1_88:
001C            415            ds 4
0020            416   _uturn_vleft_1_93:
0020            417            ds 4
0024            418   _uturn_vright_1_93:
0024            419            ds 4
0028            420   ;--------------------------------------------------------
0028            421   ; overlayable items in internal ram 
0028            422   ;--------------------------------------------------------
0000            423            rseg    R_OSEG
0000            424            rseg    R_OSEG
0000            425            rseg    R_OSEG
0000            426   _InitPinADC_PARM_2:
0000            427            ds 1
0001            428            rseg    R_OSEG
0001            429   ;--------------------------------------------------------
0001            430   ; indirectly addressable internal ram data
0001            431   ;--------------------------------------------------------
0000            432            rseg R_ISEG
0000            433   ;--------------------------------------------------------
0000            434   ; absolute internal ram data
0000            435   ;--------------------------------------------------------
0000            436            DSEG
0000            437   ;--------------------------------------------------------
0000            438   ; bit data
0000            439   ;--------------------------------------------------------
0000            440            rseg R_BSEG
0000            441   _Timer2_ISR_sloc0_1_0:
0000            442            DBIT    1
0001            443   ;--------------------------------------------------------
0001            444   ; paged external ram data
0001            445   ;--------------------------------------------------------
0000            446            rseg R_PSEG
0000            447   ;--------------------------------------------------------
0000            448   ; external ram data
0000            449   ;--------------------------------------------------------
0000            450            rseg R_XSEG
0000            451   ;--------------------------------------------------------
0000            452   ; absolute external ram data
0000            453   ;--------------------------------------------------------
0000            454            XSEG
0000            455   ;--------------------------------------------------------
0000            456   ; external initialized ram data
0000            457   ;--------------------------------------------------------
0000            458            rseg R_IXSEG
0000            459            rseg R_HOME
0000            460            rseg R_GSINIT
0000            461            rseg R_CSEG
0000            462   ;--------------------------------------------------------
0000            463   ; Reset entry point and interrupt vectors
0000            464   ;--------------------------------------------------------
0000            465            CSEG at 0x0000
0000 020100     466            ljmp    _crt0
002B            467            CSEG at 0x002b
002B 020100     468            ljmp    _Timer2_ISR
002E            469   ;--------------------------------------------------------
002E            470   ; global & static initialisations
002E            471   ;--------------------------------------------------------
0000            472            rseg R_HOME
0000            473            rseg R_GSINIT
0000            474            rseg R_GSINIT
0000            475   ;--------------------------------------------------------
0000            476   ; data variables initialization
0000            477   ;--------------------------------------------------------
0000            478            rseg R_DINIT
0000            479   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:22: volatile  char pwm_count=0;
0000 755800     480            mov     _pwm_count,#0x00
0003            481   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:23: volatile  char mode = 0;
0003 751800     482            mov     _mode,#0x00
0006            483   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:24: volatile  char pwm_both =0;
0006 75D800     484            mov     _pwm_both,#0x00
0009            485   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:25: volatile  char pwm_Left0 = 0; //p1.5
0009 759800     486            mov     _pwm_Left0,#0x00
000C            487   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:26: volatile  char pwm_Left1 = 0; //p1.6
000C 755800     488            mov     _pwm_Left1,#0x00
000F            489   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:27: volatile  char pwm_Right0 = 0; //p2.0
000F 751800     490            mov     _pwm_Right0,#0x00
0012            491   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:28: volatile  char pwm_Right1 = 0; //p2.1
0012 75D800     492            mov     _pwm_Right1,#0x00
0015            493   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:29: volatile  char direction = 0; // 1 for back 0 for forward
0015 759800     494            mov     _direction,#0x00
0018            495   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:31: volatile  char currentcmd = 0;
0018 755800     496            mov     _currentcmd,#0x00
001B            497   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:32: volatile  char currentstate = 1;
001B 751801     498            mov     _currentstate,#0x01
001E            499            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            500   ;--------------------------------------------------------
001E            501   ; code
001E            502   ;--------------------------------------------------------
0000            503            rseg R_CSEG
0000            504   ;------------------------------------------------------------
0000            505   ;Allocation info for local variables in function '_c51_external_startup'
0000            506   ;------------------------------------------------------------
0000            507   ;------------------------------------------------------------
0000            508   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:36: char _c51_external_startup (void)
0000            509   ;        -----------------------------------------
0000            510   ;         function _c51_external_startup
0000            511   ;        -----------------------------------------
0000            512   __c51_external_startup:
0000            513            using   0
0000            514   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:38: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     515            anl     _PCA0MD,#0xBF
0003            516   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:39: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     517            mov     _VDM0CN,#0x80
0006            518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:40: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     519            mov     _RSTSRC,#0x06
0009            520   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:48: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     521            orl     _CLKSEL,#0x03
000C            522   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:52: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     523            orl     _OSCICN,#0x03
000F            524   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:55: SCON0 = 0x10;
000F 759810     525            mov     _SCON0,#0x10
0012            526   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:57: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     527            mov     _TH1,#0x30
0015            528   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:58: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     529            anl     _CKCON,#0xF4
0018            530   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:59: CKCON |=  0x08;
0018 438E08     531            orl     _CKCON,#0x08
001B            532   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:72: TL1 = TH1;      // Init Timer1
001B 858D8B     533            mov     _TL1,_TH1
001E            534   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:73: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     535            anl     _TMOD,#0x0F
0021            536   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:74: TMOD |=  0x20;
0021 438920     537            orl     _TMOD,#0x20
0024            538   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:75: TR1 = 1; // START Timer1
0024 D28E       539            setb    _TR1
0026            540   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:76: TI = 1;  // Indicate TX0 ready
0026 D299       541            setb    _TI
0028            542   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:79: P2MDOUT|=0b_0000_0011;
0028 43A603     543            orl     _P2MDOUT,#0x03
002B            544   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:80: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     545            orl     _P0MDOUT,#0x10
002E            546   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:81: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     547            mov     _XBR0,#0x01
0031            548   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:82: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     549            mov     _XBR1,#0x40
0034            550   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:85: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     551            mov     _TMR2CN,#0x00
0037            552   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:86: CKCON|=0b_0001_0000;
0037 438E10     553            orl     _CKCON,#0x10
003A            554   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:87: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     555            mov     _TMR2RL,#0x78
003D 75CBEC     556            mov     (_TMR2RL >> 8),#0xEC
0040            557   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:88: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     558            mov     _TMR2,#0xFF
0043 75CDFF     559            mov     (_TMR2 >> 8),#0xFF
0046            560   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:89: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       561            setb    _ET2
0048            562   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:90: TR2=1;         // Start Timer2
0048 D2CA       563            setb    _TR2
004A            564   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:92: EA=1; // Enable interrupts
004A D2AF       565            setb    _EA
004C            566   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:94: return 0;
004C 758200     567            mov     dpl,#0x00
004F 22         568            ret
0050            569   ;------------------------------------------------------------
0050            570   ;Allocation info for local variables in function 'Timer3us'
0050            571   ;------------------------------------------------------------
0050            572   ;us                        Allocated to registers r2 
0050            573   ;i                         Allocated to registers r3 
0050            574   ;------------------------------------------------------------
0050            575   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:98: void Timer3us(unsigned char us)
0050            576   ;        -----------------------------------------
0050            577   ;         function Timer3us
0050            578   ;        -----------------------------------------
0050            579   _Timer3us:
0050 AA82       580            mov     r2,dpl
0052            581   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:103: CKCON|=0b_0100_0000;
0052 438E40     582            orl     _CKCON,#0x40
0055            583   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:105: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0055 7592D0     584            mov     _TMR3RL,#0xD0
0058 7593FF     585            mov     (_TMR3RL >> 8),#0xFF
005B            586   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:106: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005B 859294     587            mov     _TMR3,_TMR3RL
005E 859395     588            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0061            589   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:108: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0061 759104     590            mov     _TMR3CN,#0x04
0064            591   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: for (i = 0; i < us; i++)       // Count <us> overflows
0064 7B00       592            mov     r3,#0x00
0066            593   L003004?:
0066 C3         594            clr     c
0067 EB         595            mov     a,r3
0068 9A         596            subb    a,r2
0069 5001       597            jnc     L003007?
006B            598   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:111: while (!(TMR3CN & 0x80));  // Wait for overflow
006B            599   L003001?:
006B E591       600            mov     a,_TMR3CN
006D 30E7E8     601            jnb     acc.7,L003001?
0070            602   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:112: TMR3CN &= ~(0x80);         // Clear overflow indicator
0070 53917F     603            anl     _TMR3CN,#0x7F
0073            604   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: for (i = 0; i < us; i++)       // Count <us> overflows
0073 0B         605            inc     r3
0074 8001       606            sjmp    L003004?
0076            607   L003007?:
0076            608   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:114: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0076 759100     609            mov     _TMR3CN,#0x00
0079 22         610            ret
007A            611   ;------------------------------------------------------------
007A            612   ;Allocation info for local variables in function 'waitms'
007A            613   ;------------------------------------------------------------
007A            614   ;ms                        Allocated to registers r2 r3 
007A            615   ;j                         Allocated to registers r2 r3 
007A            616   ;------------------------------------------------------------
007A            617   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:117: void waitms (unsigned int ms)
007A            618   ;        -----------------------------------------
007A            619   ;         function waitms
007A            620   ;        -----------------------------------------
007A            621   _waitms:
007A AA82       622            mov     r2,dpl
007C AB83       623            mov     r3,dph
007E            624   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: for(j=ms; j!=0; j--)
007E            625   L004001?:
007E BA00E8     626            cjne    r2,#0x00,L004010?
0081 BB00E8     627            cjne    r3,#0x00,L004010?
0084 22         628            ret
0085            629   L004010?:
0085            630   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:122: Timer3us(249);
0085 7582F9     631            mov     dpl,#0xF9
0088 C002       632            push    ar2
008A C003       633            push    ar3
008C 120100     634            lcall   _Timer3us
008F            635   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:123: Timer3us(249);
008F 7582F9     636            mov     dpl,#0xF9
0092 120100     637            lcall   _Timer3us
0095            638   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:124: Timer3us(249);
0095 7582F9     639            mov     dpl,#0xF9
0098 120100     640            lcall   _Timer3us
009B            641   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:125: Timer3us(250);
009B 7582FA     642            mov     dpl,#0xFA
009E 120100     643            lcall   _Timer3us
00A1 D003       644            pop     ar3
00A3 D002       645            pop     ar2
00A5            646   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: for(j=ms; j!=0; j--)
00A5 1A         647            dec     r2
00A6 BAFF28     648            cjne    r2,#0xff,L004011?
00A9 1B         649            dec     r3
00AA            650   L004011?:
00AA 8001       651            sjmp    L004001?
00AC            652   ;------------------------------------------------------------
00AC            653   ;Allocation info for local variables in function 'Timer2_ISR'
00AC            654   ;------------------------------------------------------------
00AC            655   ;------------------------------------------------------------
00AC            656   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:130: void Timer2_ISR (void) interrupt 5
00AC            657   ;        -----------------------------------------
00AC            658   ;         function Timer2_ISR
00AC            659   ;        -----------------------------------------
00AC            660   _Timer2_ISR:
00AC C0E0       661            push    acc
00AE C0F0       662            push    b
00B0 C0D0       663            push    psw
00B2 75D000     664            mov     psw,#0x00
00B5            665   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:132: TF2H = 0; // Clear Timer2 interrupt flag
00B5 C2CF       666            clr     _TF2H
00B7            667   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:134: pwm_count++;
00B7 0558       668            inc     _pwm_count
00B9            669   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:135: if(pwm_count>100) pwm_count=0;
00B9 C3         670            clr     c
00BA 74E4       671            mov     a,#(0x64 ^ 0x80)
00BC 8558F0     672            mov     b,_pwm_count
00BF 63F080     673            xrl     b,#0x80
00C2 95F0       674            subb    a,b
00C4 5001       675            jnc     L005002?
00C6 755800     676            mov     _pwm_count,#0x00
00C9            677   L005002?:
00C9            678   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:138: MOTOR_LEFT0 = pwm_count > pwm_Left0 ? 0 : 1; //p1.5
00C9 C3         679            clr     c
00CA E598       680            mov     a,_pwm_Left0
00CC 6480       681            xrl     a,#0x80
00CE 8558F0     682            mov     b,_pwm_count
00D1 63F080     683            xrl     b,#0x80
00D4 95F0       684            subb    a,b
00D6 92A8       685            mov  _Timer2_ISR_sloc0_1_0,c
00D8 B3         686            cpl     c
00D9 9295       687            mov     _P1_5,c
00DB            688   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:139: MOTOR_LEFT1 = pwm_count > pwm_Left1 ? 0 : 1; //p1.6
00DB C3         689            clr     c
00DC E558       690            mov     a,_pwm_Left1
00DE 6480       691            xrl     a,#0x80
00E0 8558F0     692            mov     b,_pwm_count
00E3 63F080     693            xrl     b,#0x80
00E6 95F0       694            subb    a,b
00E8 92A8       695            mov  _Timer2_ISR_sloc0_1_0,c
00EA B3         696            cpl     c
00EB 9296       697            mov     _P1_6,c
00ED            698   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:140: MOTOR_RIGHT0 = pwm_count > pwm_Right0 ? 0 : 1; //p2.0
00ED C3         699            clr     c
00EE E518       700            mov     a,_pwm_Right0
00F0 6480       701            xrl     a,#0x80
00F2 8558F0     702            mov     b,_pwm_count
00F5 63F080     703            xrl     b,#0x80
00F8 95F0       704            subb    a,b
00FA 92A8       705            mov  _Timer2_ISR_sloc0_1_0,c
00FC B3         706            cpl     c
00FD 92A0       707            mov     _P2_0,c
00FF            708   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:141: MOTOR_RIGHT1 = pwm_count > pwm_Right1 ? 0 : 1; //p2.1
00FF C3         709            clr     c
0100 E5D8       710            mov     a,_pwm_Right1
0102 6480       711            xrl     a,#0x80
0104 8558F0     712            mov     b,_pwm_count
0107 63F080     713            xrl     b,#0x80
010A 95F0       714            subb    a,b
010C 92A8       715            mov  _Timer2_ISR_sloc0_1_0,c
010E B3         716            cpl     c
010F 92A1       717            mov     _P2_1,c
0111 D0D0       718            pop     psw
0113 D0F0       719            pop     b
0115 D0E0       720            pop     acc
0117 32         721            reti
0118            722   ;        eliminated unneeded push/pop dpl
0118            723   ;        eliminated unneeded push/pop dph
0118            724   ;------------------------------------------------------------
0118            725   ;Allocation info for local variables in function 'forward_backward'
0118            726   ;------------------------------------------------------------
0118            727   ;direction                 Allocated to registers r2 
0118            728   ;------------------------------------------------------------
0118            729   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:148: void forward_backward(unsigned char direction)
0118            730   ;        -----------------------------------------
0118            731   ;         function forward_backward
0118            732   ;        -----------------------------------------
0118            733   _forward_backward:
0118            734   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:151: if (direction == 0) { //p2.1,1.6 on
0118 E582       735            mov     a,dpl
011A FA         736            mov     r2,a
011B 7001       737            jnz     L006004?
011D            738   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:152: pwm_Left0 = pwm_Right0 = -1;
011D 7518FF     739            mov     _pwm_Right0,#0xFF
0120 7598FF     740            mov     _pwm_Left0,#0xFF
0123            741   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:153: pwm_Left1 = pwm_Right1 = pwm_both;  //MOTOR_LEFT1 = MOTOR_RIGHT1 = pwm_both;
0123 85D8D8     742            mov     _pwm_Right1,_pwm_both
0126 85D858     743            mov     _pwm_Left1,_pwm_both
0129 22         744            ret
012A            745   L006004?:
012A            746   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:156: else if (direction == 1) { //p2.0,1.5 on
012A BA0168     747            cjne    r2,#0x01,L006006?
012D            748   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:157: pwm_Left1 = pwm_Right1 = -1;
012D 75D8FF     749            mov     _pwm_Right1,#0xFF
0130 7558FF     750            mov     _pwm_Left1,#0xFF
0133            751   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:158: pwm_Left0 = pwm_Right0 = pwm_both; 
0133 85D818     752            mov     _pwm_Right0,_pwm_both
0136 85D898     753            mov     _pwm_Left0,_pwm_both
0139            754   L006006?:
0139 22         755            ret
013A            756   ;------------------------------------------------------------
013A            757   ;Allocation info for local variables in function 'InitADC'
013A            758   ;------------------------------------------------------------
013A            759   ;------------------------------------------------------------
013A            760   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:164: void InitADC (void)
013A            761   ;        -----------------------------------------
013A            762   ;         function InitADC
013A            763   ;        -----------------------------------------
013A            764   _InitADC:
013A            765   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:167: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
013A 75BCF8     766            mov     _ADC0CF,#0xF8
013D            767   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:168: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
013D 75E880     768            mov     _ADC0CN,#0x80
0140            769   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:169: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
0140 75D108     770            mov     _REF0CN,#0x08
0143 22         771            ret
0144            772   ;------------------------------------------------------------
0144            773   ;Allocation info for local variables in function 'InitPinADC'
0144            774   ;------------------------------------------------------------
0144            775   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0144            776   ;portno                    Allocated to registers r2 
0144            777   ;mask                      Allocated to registers r3 
0144            778   ;------------------------------------------------------------
0144            779   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:172: void InitPinADC (unsigned char portno, unsigned char pinno)
0144            780   ;        -----------------------------------------
0144            781   ;         function InitPinADC
0144            782   ;        -----------------------------------------
0144            783   _InitPinADC:
0144 AA82       784            mov     r2,dpl
0146            785   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:176: mask=1<<pinno;
0146 85F8F0     786            mov     b,_InitPinADC_PARM_2
0149 05F0       787            inc     b
014B 7401       788            mov     a,#0x01
014D 8001       789            sjmp    L008012?
014F            790   L008010?:
014F 25E0       791            add     a,acc
0151            792   L008012?:
0151 D5F0E8     793            djnz    b,L008010?
0154 FB         794            mov     r3,a
0155            795   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:178: switch (portno)
0155 EA         796            mov     a,r2
0156 24FC       797            add     a,#0xff - 0x03
0158 4001       798            jc      L008007?
015A EA         799            mov     a,r2
015B 2A         800            add     a,r2
015C 2A         801            add     a,r2
015D 909E68     802            mov     dptr,#L008014?
0160 73         803            jmp     @a+dptr
0161            804   L008014?:
0161 020100     805            ljmp    L008001?
0164 020100     806            ljmp    L008002?
0167 020100     807            ljmp    L008003?
016A 020100     808            ljmp    L008004?
016D            809   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:180: case 0:
016D            810   L008001?:
016D            811   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:181: P0MDIN &= (~mask); // Set pin as analog input
016D EB         812            mov     a,r3
016E F4         813            cpl     a
016F 52F1       814            anl     _P0MDIN,a
0171            815   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:182: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0171 EB         816            mov     a,r3
0172 42D4       817            orl     _P0SKIP,a
0174            818   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:183: break;
0174            819   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:184: case 1:
0174 22         820            ret
0175            821   L008002?:
0175            822   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:185: P1MDIN &= (~mask); // Set pin as analog input
0175 EB         823            mov     a,r3
0176 F4         824            cpl     a
0177 52F2       825            anl     _P1MDIN,a
0179            826   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:186: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0179 EB         827            mov     a,r3
017A 42D5       828            orl     _P1SKIP,a
017C            829   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:187: break;
017C            830   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:188: case 2:
017C 22         831            ret
017D            832   L008003?:
017D            833   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:189: P2MDIN &= (~mask); // Set pin as analog input
017D EB         834            mov     a,r3
017E F4         835            cpl     a
017F 52F3       836            anl     _P2MDIN,a
0181            837   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:190: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0181 EB         838            mov     a,r3
0182 42D6       839            orl     _P2SKIP,a
0184            840   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:191: break;
0184            841   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:192: case 3:
0184 22         842            ret
0185            843   L008004?:
0185            844   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:193: P3MDIN &= (~mask); // Set pin as analog input
0185 EB         845            mov     a,r3
0186 F4         846            cpl     a
0187 FA         847            mov     r2,a
0188 52F4       848            anl     _P3MDIN,a
018A            849   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:194: P3SKIP |= mask; // Skip Crossbar decoding for this pin
018A EB         850            mov     a,r3
018B 42DF       851            orl     _P3SKIP,a
018D            852   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:198: }
018D            853   L008007?:
018D 22         854            ret
018E            855   ;------------------------------------------------------------
018E            856   ;Allocation info for local variables in function 'ADC_at_Pin'
018E            857   ;------------------------------------------------------------
018E            858   ;pin                       Allocated to registers 
018E            859   ;------------------------------------------------------------
018E            860   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:201: unsigned int ADC_at_Pin(unsigned char pin)
018E            861   ;        -----------------------------------------
018E            862   ;         function ADC_at_Pin
018E            863   ;        -----------------------------------------
018E            864   _ADC_at_Pin:
018E 8582BB     865            mov     _AMX0P,dpl
0191            866   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:204: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
0191 75BA1F     867            mov     _AMX0N,#0x1F
0194            868   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:206: AD0BUSY=1;
0194 D2EC       869            setb    _AD0BUSY
0196            870   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:207: while (AD0BUSY); // Wait for dummy conversion to finish
0196            871   L009001?:
0196 20ECA8     872            jb      _AD0BUSY,L009001?
0199            873   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:209: AD0BUSY = 1;
0199 D2EC       874            setb    _AD0BUSY
019B            875   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:210: while (AD0BUSY); // Wait for conversion to complete
019B            876   L009004?:
019B 20ECE8     877            jb      _AD0BUSY,L009004?
019E            878   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:211: return (ADC0L+(ADC0H*0x100));
019E AABD       879            mov     r2,_ADC0L
01A0 7B00       880            mov     r3,#0x00
01A2 ADBE       881            mov     r5,_ADC0H
01A4 7C00       882            mov     r4,#0x00
01A6 EC         883            mov     a,r4
01A7 2A         884            add     a,r2
01A8 F582       885            mov     dpl,a
01AA ED         886            mov     a,r5
01AB 3B         887            addc    a,r3
01AC F583       888            mov     dph,a
01AE 22         889            ret
01AF            890   ;------------------------------------------------------------
01AF            891   ;Allocation info for local variables in function 'Volts_at_Pin'
01AF            892   ;------------------------------------------------------------
01AF            893   ;pin                       Allocated to registers r2 
01AF            894   ;------------------------------------------------------------
01AF            895   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:214: float Volts_at_Pin(unsigned char pin)
01AF            896   ;        -----------------------------------------
01AF            897   ;         function Volts_at_Pin
01AF            898   ;        -----------------------------------------
01AF            899   _Volts_at_Pin:
01AF            900   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:216: return ((ADC_at_Pin(pin)*3.30)/1024.0);
01AF 120100     901            lcall   _ADC_at_Pin
01B2 120100     902            lcall   ___uint2fs
01B5 AA82       903            mov     r2,dpl
01B7 AB83       904            mov     r3,dph
01B9 ACF0       905            mov     r4,b
01BB FD         906            mov     r5,a
01BC C002       907            push    ar2
01BE C003       908            push    ar3
01C0 C004       909            push    ar4
01C2 C005       910            push    ar5
01C4 903333     911            mov     dptr,#0x3333
01C7 75F053     912            mov     b,#0x53
01CA 7440       913            mov     a,#0x40
01CC 120100     914            lcall   ___fsmul
01CF AA82       915            mov     r2,dpl
01D1 AB83       916            mov     r3,dph
01D3 ACF0       917            mov     r4,b
01D5 FD         918            mov     r5,a
01D6 E581       919            mov     a,sp
01D8 24FC       920            add     a,#0xfc
01DA F581       921            mov     sp,a
01DC E4         922            clr     a
01DD C0E0       923            push    acc
01DF C0E0       924            push    acc
01E1 7480       925            mov     a,#0x80
01E3 C0E0       926            push    acc
01E5 7444       927            mov     a,#0x44
01E7 C0E0       928            push    acc
01E9 8A82       929            mov     dpl,r2
01EB 8B83       930            mov     dph,r3
01ED 8CF0       931            mov     b,r4
01EF ED         932            mov     a,r5
01F0 120100     933            lcall   ___fsdiv
01F3 AA82       934            mov     r2,dpl
01F5 AB83       935            mov     r3,dph
01F7 ACF0       936            mov     r4,b
01F9 FD         937            mov     r5,a
01FA E581       938            mov     a,sp
01FC 24FC       939            add     a,#0xfc
01FE F581       940            mov     sp,a
0200 8A82       941            mov     dpl,r2
0202 8B83       942            mov     dph,r3
0204 8CF0       943            mov     b,r4
0206 ED         944            mov     a,r5
0207 22         945            ret
0208            946   ;------------------------------------------------------------
0208            947   ;Allocation info for local variables in function 'readData'
0208            948   ;------------------------------------------------------------
0208            949   ;commandflag               Allocated to registers r2 r3 
0208            950   ;------------------------------------------------------------
0208            951   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:220: void readData (void) {
0208            952   ;        -----------------------------------------
0208            953   ;         function readData
0208            954   ;        -----------------------------------------
0208            955   _readData:
0208            956   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:221: int commandflag = 1;                                     //determines if there's a real command coming in or not
0208 7A01       957            mov     r2,#0x01
020A 7B00       958            mov     r3,#0x00
020C            959   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:223: if (COMMAND_PIN == 0) {                                  //0---
020C 309128     960            jnb     _P1_1,L011039?
020F 020100     961            ljmp    L011022?
0212            962   L011039?:
0212            963   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:224: waitms(CMDFRQ*1.5);
0212 900069     964            mov     dptr,#0x0069
0215 C002       965            push    ar2
0217 C003       966            push    ar3
0219 120100     967            lcall   _waitms
021C D003       968            pop     ar3
021E D002       969            pop     ar2
0220            970   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:225: if (COMMAND_PIN == 1) {                          //01--
0220 3091A8     971            jnb     _P1_1,L011019?
0223            972   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:226: waitms(CMDFRQ);
0223 900046     973            mov     dptr,#0x0046
0226 C002       974            push    ar2
0228 C003       975            push    ar3
022A 120100     976            lcall   _waitms
022D D003       977            pop     ar3
022F D002       978            pop     ar2
0231            979   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:227: if (COMMAND_PIN == 0) {                  //010-
0231 2091E8     980            jb      _P1_1,L011007?
0234            981   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:228: waitms(CMDFRQ);
0234 900046     982            mov     dptr,#0x0046
0237 120100     983            lcall   _waitms
023A            984   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:229: if (COMMAND_PIN == 0) {          //0100  
023A 209128     985            jb      _P1_1,L011002?
023D            986   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:230: currentcmd = 4;
023D 755804     987            mov     _currentcmd,#0x04
0240            988   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:231: commandflag = 0;
0240 7A00       989            mov     r2,#0x00
0242 7B00       990            mov     r3,#0x00
0244 8001       991            sjmp    L011020?
0246            992   L011002?:
0246            993   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:234: currentcmd = 5;
0246 755805     994            mov     _currentcmd,#0x05
0249            995   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:235: commandflag = 0;
0249 7A00       996            mov     r2,#0x00
024B 7B00       997            mov     r3,#0x00
024D 8001       998            sjmp    L011020?
024F            999   L011007?:
024F           1000   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:239: waitms(CMDFRQ);
024F 900046    1001            mov     dptr,#0x0046
0252 C002      1002            push    ar2
0254 C003      1003            push    ar3
0256 120100    1004            lcall   _waitms
0259 D003      1005            pop     ar3
025B D002      1006            pop     ar2
025D           1007   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:240: if (COMMAND_PIN == 0) {          //0110
025D 209168    1008            jb      _P1_1,L011020?
0260           1009   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:241: currentcmd = 6;
0260 755806    1010            mov     _currentcmd,#0x06
0263           1011   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:242: commandflag = 0;
0263 7A00      1012            mov     r2,#0x00
0265 7B00      1013            mov     r3,#0x00
0267 8001      1014            sjmp    L011020?
0269           1015   L011019?:
0269           1016   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:247: waitms(CMDFRQ);
0269 900046    1017            mov     dptr,#0x0046
026C 120100    1018            lcall   _waitms
026F           1019   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:248: if (COMMAND_PIN == 1) {                  //001-
026F 3091A8    1020            jnb     _P1_1,L011016?
0272           1021   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:249: waitms(CMDFRQ);
0272 900046    1022            mov     dptr,#0x0046
0275 120100    1023            lcall   _waitms
0278           1024   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:250: if (COMMAND_PIN == 1) {          //0011
0278 3091E8    1025            jnb     _P1_1,L011010?
027B           1026   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:251: currentcmd = 3;
027B 755803    1027            mov     _currentcmd,#0x03
027E           1028   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:252: commandflag = 0;
027E 7A00      1029            mov     r2,#0x00
0280 7B00      1030            mov     r3,#0x00
0282 8001      1031            sjmp    L011020?
0284           1032   L011010?:
0284           1033   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:255: currentcmd = 2;
0284 755802    1034            mov     _currentcmd,#0x02
0287           1035   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:256: commandflag = 0;
0287 7A00      1036            mov     r2,#0x00
0289 7B00      1037            mov     r3,#0x00
028B 8001      1038            sjmp    L011020?
028D           1039   L011016?:
028D           1040   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:260: waitms(CMDFRQ);
028D 900046    1041            mov     dptr,#0x0046
0290 120100    1042            lcall   _waitms
0293           1043   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:261: if (COMMAND_PIN == 1) {          //0001  
0293 309128    1044            jnb     _P1_1,L011013?
0296           1045   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:262: currentcmd == 1;
0296 E558      1046            mov     a,_currentcmd
0298           1047   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:263: commandflag = 0;
0298 7A00      1048            mov     r2,#0x00
029A 7B00      1049            mov     r3,#0x00
029C 8001      1050            sjmp    L011020?
029E           1051   L011013?:
029E           1052   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:266: commandflag = 1;
029E 7A01      1053            mov     r2,#0x01
02A0 7B00      1054            mov     r3,#0x00
02A2           1055   L011020?:
02A2           1056   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:270: printf("\n\r current command is %d, commandflag = %d\r\n", currentcmd, commandflag);             
02A2 AC58      1057            mov     r4,_currentcmd
02A4 E558      1058            mov     a,_currentcmd
02A6 33        1059            rlc     a
02A7 95E0      1060            subb    a,acc
02A9 FD        1061            mov     r5,a
02AA C002      1062            push    ar2
02AC C003      1063            push    ar3
02AE C002      1064            push    ar2
02B0 C003      1065            push    ar3
02B2 C004      1066            push    ar4
02B4 C005      1067            push    ar5
02B6 7468      1068            mov     a,#__str_0
02B8 C0E0      1069            push    acc
02BA 74A3      1070            mov     a,#(__str_0 >> 8)
02BC C0E0      1071            push    acc
02BE 7480      1072            mov     a,#0x80
02C0 C0E0      1073            push    acc
02C2 120100    1074            lcall   _printf
02C5 E581      1075            mov     a,sp
02C7 24F9      1076            add     a,#0xf9
02C9 F581      1077            mov     sp,a
02CB D003      1078            pop     ar3
02CD D002      1079            pop     ar2
02CF           1080   L011022?:
02CF           1081   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:276: if (commandflag == 0) {                                  //only wait for signal to end if a command has been received. 
02CF EA        1082            mov     a,r2
02D0 4B        1083            orl     a,r3
02D1 7001      1084            jnz     L011028?
02D3           1085   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:277: while (COMMAND_PIN == 0) {}
02D3           1086   L011023?:
02D3 309128    1087            jnb     _P1_1,L011023?
02D6           1088   L011028?:
02D6 22        1089            ret
02D7           1090   ;------------------------------------------------------------
02D7           1091   ;Allocation info for local variables in function 'linetrack'
02D7           1092   ;------------------------------------------------------------
02D7           1093   ;forwardbackward           Allocated to registers 
02D7           1094   ;vleft                     Allocated with name '_linetrack_vleft_1_84'
02D7           1095   ;vright                    Allocated with name '_linetrack_vright_1_84'
02D7           1096   ;sloc0                     Allocated with name '_linetrack_sloc0_1_0'
02D7           1097   ;sloc1                     Allocated with name '_linetrack_sloc1_1_0'
02D7           1098   ;------------------------------------------------------------
02D7           1099   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:282: void linetrack (int forwardbackward) {
02D7           1100   ;        -----------------------------------------
02D7           1101   ;         function linetrack
02D7           1102   ;        -----------------------------------------
02D7           1103   _linetrack:
02D7           1104   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:286: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
02D7 75820B    1105            mov     dpl,#0x0B
02DA 120100    1106            lcall   _Volts_at_Pin
02DD 858228    1107            mov     _linetrack_vleft_1_84,dpl
02E0 858329    1108            mov     (_linetrack_vleft_1_84 + 1),dph
02E3 85F02A    1109            mov     (_linetrack_vleft_1_84 + 2),b
02E6 F52B      1110            mov     (_linetrack_vleft_1_84 + 3),a
02E8           1111   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:287: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
02E8 75820C    1112            mov     dpl,#0x0C
02EB 120100    1113            lcall   _Volts_at_Pin
02EE 858278    1114            mov     _linetrack_vright_1_84,dpl
02F1 858379    1115            mov     (_linetrack_vright_1_84 + 1),dph
02F4 85F07A    1116            mov     (_linetrack_vright_1_84 + 2),b
02F7 F57B      1117            mov     (_linetrack_vright_1_84 + 3),a
02F9           1118   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:289: pwm_Left0 = -1;
02F9 7598FF    1119            mov     _pwm_Left0,#0xFF
02FC           1120   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:291: pwm_Left1 = vright*vright*75/(vright*vright+vleft*vleft);
02FC C078      1121            push    _linetrack_vright_1_84
02FE C079      1122            push    (_linetrack_vright_1_84 + 1)
0300 C07A      1123            push    (_linetrack_vright_1_84 + 2)
0302 C07B      1124            push    (_linetrack_vright_1_84 + 3)
0304 857882    1125            mov     dpl,_linetrack_vright_1_84
0307 857983    1126            mov     dph,(_linetrack_vright_1_84 + 1)
030A 857AF0    1127            mov     b,(_linetrack_vright_1_84 + 2)
030D E57B      1128            mov     a,(_linetrack_vright_1_84 + 3)
030F 120100    1129            lcall   ___fsmul
0312 AA82      1130            mov     r2,dpl
0314 AB83      1131            mov     r3,dph
0316 ACF0      1132            mov     r4,b
0318 FD        1133            mov     r5,a
0319 E581      1134            mov     a,sp
031B 24FC      1135            add     a,#0xfc
031D F581      1136            mov     sp,a
031F C002      1137            push    ar2
0321 C003      1138            push    ar3
0323 C004      1139            push    ar4
0325 C005      1140            push    ar5
0327 900000    1141            mov     dptr,#0x0000
032A 75F096    1142            mov     b,#0x96
032D 7442      1143            mov     a,#0x42
032F 120100    1144            lcall   ___fsmul
0332 AA82      1145            mov     r2,dpl
0334 AB83      1146            mov     r3,dph
0336 ACF0      1147            mov     r4,b
0338 FD        1148            mov     r5,a
0339 E581      1149            mov     a,sp
033B 24FC      1150            add     a,#0xfc
033D F581      1151            mov     sp,a
033F C002      1152            push    ar2
0341 C003      1153            push    ar3
0343 C004      1154            push    ar4
0345 C005      1155            push    ar5
0347 C078      1156            push    _linetrack_vright_1_84
0349 C079      1157            push    (_linetrack_vright_1_84 + 1)
034B C07A      1158            push    (_linetrack_vright_1_84 + 2)
034D C07B      1159            push    (_linetrack_vright_1_84 + 3)
034F 857882    1160            mov     dpl,_linetrack_vright_1_84
0352 857983    1161            mov     dph,(_linetrack_vright_1_84 + 1)
0355 857AF0    1162            mov     b,(_linetrack_vright_1_84 + 2)
0358 E57B      1163            mov     a,(_linetrack_vright_1_84 + 3)
035A 120100    1164            lcall   ___fsmul
035D 8582C8    1165            mov     _linetrack_sloc0_1_0,dpl
0360 8583C9    1166            mov     (_linetrack_sloc0_1_0 + 1),dph
0363 85F0CA    1167            mov     (_linetrack_sloc0_1_0 + 2),b
0366 F5CB      1168            mov     (_linetrack_sloc0_1_0 + 3),a
0368 E581      1169            mov     a,sp
036A 24FC      1170            add     a,#0xfc
036C F581      1171            mov     sp,a
036E C028      1172            push    _linetrack_vleft_1_84
0370 C029      1173            push    (_linetrack_vleft_1_84 + 1)
0372 C02A      1174            push    (_linetrack_vleft_1_84 + 2)
0374 C02B      1175            push    (_linetrack_vleft_1_84 + 3)
0376 852882    1176            mov     dpl,_linetrack_vleft_1_84
0379 852983    1177            mov     dph,(_linetrack_vleft_1_84 + 1)
037C 852AF0    1178            mov     b,(_linetrack_vleft_1_84 + 2)
037F E52B      1179            mov     a,(_linetrack_vleft_1_84 + 3)
0381 120100    1180            lcall   ___fsmul
0384 AE82      1181            mov     r6,dpl
0386 AF83      1182            mov     r7,dph
0388 A8F0      1183            mov     r0,b
038A F9        1184            mov     r1,a
038B E581      1185            mov     a,sp
038D 24FC      1186            add     a,#0xfc
038F F581      1187            mov     sp,a
0391 C006      1188            push    ar6
0393 C007      1189            push    ar7
0395 C000      1190            push    ar0
0397 C001      1191            push    ar1
0399 85C882    1192            mov     dpl,_linetrack_sloc0_1_0
039C 85C983    1193            mov     dph,(_linetrack_sloc0_1_0 + 1)
039F 85CAF0    1194            mov     b,(_linetrack_sloc0_1_0 + 2)
03A2 E5CB      1195            mov     a,(_linetrack_sloc0_1_0 + 3)
03A4 120100    1196            lcall   ___fsadd
03A7 AE82      1197            mov     r6,dpl
03A9 AF83      1198            mov     r7,dph
03AB A8F0      1199            mov     r0,b
03AD F9        1200            mov     r1,a
03AE E581      1201            mov     a,sp
03B0 24FC      1202            add     a,#0xfc
03B2 F581      1203            mov     sp,a
03B4 D005      1204            pop     ar5
03B6 D004      1205            pop     ar4
03B8 D003      1206            pop     ar3
03BA D002      1207            pop     ar2
03BC C006      1208            push    ar6
03BE C007      1209            push    ar7
03C0 C000      1210            push    ar0
03C2 C001      1211            push    ar1
03C4 8A82      1212            mov     dpl,r2
03C6 8B83      1213            mov     dph,r3
03C8 8CF0      1214            mov     b,r4
03CA ED        1215            mov     a,r5
03CB 120100    1216            lcall   ___fsdiv
03CE AA82      1217            mov     r2,dpl
03D0 AB83      1218            mov     r3,dph
03D2 ACF0      1219            mov     r4,b
03D4 FD        1220            mov     r5,a
03D5 E581      1221            mov     a,sp
03D7 24FC      1222            add     a,#0xfc
03D9 F581      1223            mov     sp,a
03DB 8A82      1224            mov     dpl,r2
03DD 8B83      1225            mov     dph,r3
03DF 8CF0      1226            mov     b,r4
03E1 ED        1227            mov     a,r5
03E2 120100    1228            lcall   ___fs2schar
03E5 858258    1229            mov     _pwm_Left1,dpl
03E8           1230   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:292: pwm_Right1 = -1;
03E8 75D8FF    1231            mov     _pwm_Right1,#0xFF
03EB           1232   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:294: pwm_Right0 = vleft*vleft*75/(vright*vright+vleft*vleft);
03EB C028      1233            push    _linetrack_vleft_1_84
03ED C029      1234            push    (_linetrack_vleft_1_84 + 1)
03EF C02A      1235            push    (_linetrack_vleft_1_84 + 2)
03F1 C02B      1236            push    (_linetrack_vleft_1_84 + 3)
03F3 852882    1237            mov     dpl,_linetrack_vleft_1_84
03F6 852983    1238            mov     dph,(_linetrack_vleft_1_84 + 1)
03F9 852AF0    1239            mov     b,(_linetrack_vleft_1_84 + 2)
03FC E52B      1240            mov     a,(_linetrack_vleft_1_84 + 3)
03FE 120100    1241            lcall   ___fsmul
0401 AA82      1242            mov     r2,dpl
0403 AB83      1243            mov     r3,dph
0405 ACF0      1244            mov     r4,b
0407 FD        1245            mov     r5,a
0408 E581      1246            mov     a,sp
040A 24FC      1247            add     a,#0xfc
040C F581      1248            mov     sp,a
040E C002      1249            push    ar2
0410 C003      1250            push    ar3
0412 C004      1251            push    ar4
0414 C005      1252            push    ar5
0416 900000    1253            mov     dptr,#0x0000
0419 75F096    1254            mov     b,#0x96
041C 7442      1255            mov     a,#0x42
041E 120100    1256            lcall   ___fsmul
0421 AA82      1257            mov     r2,dpl
0423 AB83      1258            mov     r3,dph
0425 ACF0      1259            mov     r4,b
0427 FD        1260            mov     r5,a
0428 E581      1261            mov     a,sp
042A 24FC      1262            add     a,#0xfc
042C F581      1263            mov     sp,a
042E C002      1264            push    ar2
0430 C003      1265            push    ar3
0432 C004      1266            push    ar4
0434 C005      1267            push    ar5
0436 C078      1268            push    _linetrack_vright_1_84
0438 C079      1269            push    (_linetrack_vright_1_84 + 1)
043A C07A      1270            push    (_linetrack_vright_1_84 + 2)
043C C07B      1271            push    (_linetrack_vright_1_84 + 3)
043E 857882    1272            mov     dpl,_linetrack_vright_1_84
0441 857983    1273            mov     dph,(_linetrack_vright_1_84 + 1)
0444 857AF0    1274            mov     b,(_linetrack_vright_1_84 + 2)
0447 E57B      1275            mov     a,(_linetrack_vright_1_84 + 3)
0449 120100    1276            lcall   ___fsmul
044C 8582C8    1277            mov     _linetrack_sloc0_1_0,dpl
044F 8583C9    1278            mov     (_linetrack_sloc0_1_0 + 1),dph
0452 85F0CA    1279            mov     (_linetrack_sloc0_1_0 + 2),b
0455 F5CB      1280            mov     (_linetrack_sloc0_1_0 + 3),a
0457 E581      1281            mov     a,sp
0459 24FC      1282            add     a,#0xfc
045B F581      1283            mov     sp,a
045D C028      1284            push    _linetrack_vleft_1_84
045F C029      1285            push    (_linetrack_vleft_1_84 + 1)
0461 C02A      1286            push    (_linetrack_vleft_1_84 + 2)
0463 C02B      1287            push    (_linetrack_vleft_1_84 + 3)
0465 852882    1288            mov     dpl,_linetrack_vleft_1_84
0468 852983    1289            mov     dph,(_linetrack_vleft_1_84 + 1)
046B 852AF0    1290            mov     b,(_linetrack_vleft_1_84 + 2)
046E E52B      1291            mov     a,(_linetrack_vleft_1_84 + 3)
0470 120100    1292            lcall   ___fsmul
0473 AE82      1293            mov     r6,dpl
0475 AF83      1294            mov     r7,dph
0477 A8F0      1295            mov     r0,b
0479 F9        1296            mov     r1,a
047A E581      1297            mov     a,sp
047C 24FC      1298            add     a,#0xfc
047E F581      1299            mov     sp,a
0480 C006      1300            push    ar6
0482 C007      1301            push    ar7
0484 C000      1302            push    ar0
0486 C001      1303            push    ar1
0488 85C882    1304            mov     dpl,_linetrack_sloc0_1_0
048B 85C983    1305            mov     dph,(_linetrack_sloc0_1_0 + 1)
048E 85CAF0    1306            mov     b,(_linetrack_sloc0_1_0 + 2)
0491 E5CB      1307            mov     a,(_linetrack_sloc0_1_0 + 3)
0493 120100    1308            lcall   ___fsadd
0496 AE82      1309            mov     r6,dpl
0498 AF83      1310            mov     r7,dph
049A A8F0      1311            mov     r0,b
049C F9        1312            mov     r1,a
049D E581      1313            mov     a,sp
049F 24FC      1314            add     a,#0xfc
04A1 F581      1315            mov     sp,a
04A3 D005      1316            pop     ar5
04A5 D004      1317            pop     ar4
04A7 D003      1318            pop     ar3
04A9 D002      1319            pop     ar2
04AB C006      1320            push    ar6
04AD C007      1321            push    ar7
04AF C000      1322            push    ar0
04B1 C001      1323            push    ar1
04B3 8A82      1324            mov     dpl,r2
04B5 8B83      1325            mov     dph,r3
04B7 8CF0      1326            mov     b,r4
04B9 ED        1327            mov     a,r5
04BA 120100    1328            lcall   ___fsdiv
04BD AA82      1329            mov     r2,dpl
04BF AB83      1330            mov     r3,dph
04C1 ACF0      1331            mov     r4,b
04C3 FD        1332            mov     r5,a
04C4 E581      1333            mov     a,sp
04C6 24FC      1334            add     a,#0xfc
04C8 F581      1335            mov     sp,a
04CA 8A82      1336            mov     dpl,r2
04CC 8B83      1337            mov     dph,r3
04CE 8CF0      1338            mov     b,r4
04D0 ED        1339            mov     a,r5
04D1 120100    1340            lcall   ___fs2schar
04D4 858218    1341            mov     _pwm_Right0,dpl
04D7           1342   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:299: printf("2.3=%f, 2.4=%f, Left0=%4d, Right1=%4d, Left1=%4d, Right0=%4d, command:%d, state:%d\r", vleft, vright, pwm_Left0, pwm_Right1, pwm_Left1, pwm_Right0, currentcmd, currentstate);
04D7 AA18      1343            mov     r2,_currentstate
04D9 E518      1344            mov     a,_currentstate
04DB 33        1345            rlc     a
04DC 95E0      1346            subb    a,acc
04DE FB        1347            mov     r3,a
04DF AC58      1348            mov     r4,_currentcmd
04E1 E558      1349            mov     a,_currentcmd
04E3 33        1350            rlc     a
04E4 95E0      1351            subb    a,acc
04E6 FD        1352            mov     r5,a
04E7 AE18      1353            mov     r6,_pwm_Right0
04E9 E518      1354            mov     a,_pwm_Right0
04EB 33        1355            rlc     a
04EC 95E0      1356            subb    a,acc
04EE FF        1357            mov     r7,a
04EF 8558C8    1358            mov     _linetrack_sloc0_1_0,_pwm_Left1
04F2 E558      1359            mov     a,_pwm_Left1
04F4 33        1360            rlc     a
04F5 95E0      1361            subb    a,acc
04F7 F5C9      1362            mov     (_linetrack_sloc0_1_0 + 1),a
04F9 85D818    1363            mov     _linetrack_sloc1_1_0,_pwm_Right1
04FC E5D8      1364            mov     a,_pwm_Right1
04FE 33        1365            rlc     a
04FF 95E0      1366            subb    a,acc
0501 F519      1367            mov     (_linetrack_sloc1_1_0 + 1),a
0503 A898      1368            mov     r0,_pwm_Left0
0505 E598      1369            mov     a,_pwm_Left0
0507 33        1370            rlc     a
0508 95E0      1371            subb    a,acc
050A F9        1372            mov     r1,a
050B C002      1373            push    ar2
050D C003      1374            push    ar3
050F C004      1375            push    ar4
0511 C005      1376            push    ar5
0513 C006      1377            push    ar6
0515 C007      1378            push    ar7
0517 C0C8      1379            push    _linetrack_sloc0_1_0
0519 C0C9      1380            push    (_linetrack_sloc0_1_0 + 1)
051B C018      1381            push    _linetrack_sloc1_1_0
051D C019      1382            push    (_linetrack_sloc1_1_0 + 1)
051F C000      1383            push    ar0
0521 C001      1384            push    ar1
0523 C078      1385            push    _linetrack_vright_1_84
0525 C079      1386            push    (_linetrack_vright_1_84 + 1)
0527 C07A      1387            push    (_linetrack_vright_1_84 + 2)
0529 C07B      1388            push    (_linetrack_vright_1_84 + 3)
052B C028      1389            push    _linetrack_vleft_1_84
052D C029      1390            push    (_linetrack_vleft_1_84 + 1)
052F C02A      1391            push    (_linetrack_vleft_1_84 + 2)
0531 C02B      1392            push    (_linetrack_vleft_1_84 + 3)
0533 74E8      1393            mov     a,#__str_1
0535 C0E0      1394            push    acc
0537 74A4      1395            mov     a,#(__str_1 >> 8)
0539 C0E0      1396            push    acc
053B 7480      1397            mov     a,#0x80
053D C0E0      1398            push    acc
053F 120100    1399            lcall   _printf
0542 E581      1400            mov     a,sp
0544 24E9      1401            add     a,#0xe9
0546 F581      1402            mov     sp,a
0548 22        1403            ret
0549           1404   ;------------------------------------------------------------
0549           1405   ;Allocation info for local variables in function 'stopcar'
0549           1406   ;------------------------------------------------------------
0549           1407   ;------------------------------------------------------------
0549           1408   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:303: void stopcar () {
0549           1409   ;        -----------------------------------------
0549           1410   ;         function stopcar
0549           1411   ;        -----------------------------------------
0549           1412   _stopcar:
0549           1413   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:304: pwm_Left1 = -1;
0549 7558FF    1414            mov     _pwm_Left1,#0xFF
054C           1415   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:305: pwm_Right1 = -1;
054C 75D8FF    1416            mov     _pwm_Right1,#0xFF
054F           1417   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:306: pwm_Left0 = -1;
054F 7598FF    1418            mov     _pwm_Left0,#0xFF
0552           1419   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:307: pwm_Right0 = -1;
0552 7518FF    1420            mov     _pwm_Right0,#0xFF
0555 22        1421            ret
0556           1422   ;------------------------------------------------------------
0556           1423   ;Allocation info for local variables in function 'turncar'
0556           1424   ;------------------------------------------------------------
0556           1425   ;leftright                 Allocated to registers r2 r3 
0556           1426   ;vleft                     Allocated with name '_turncar_vleft_1_88'
0556           1427   ;vright                    Allocated with name '_turncar_vright_1_88'
0556           1428   ;------------------------------------------------------------
0556           1429   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:310: void turncar (int leftright) {
0556           1430   ;        -----------------------------------------
0556           1431   ;         function turncar
0556           1432   ;        -----------------------------------------
0556           1433   _turncar:
0556 AA82      1434            mov     r2,dpl
0558 AB83      1435            mov     r3,dph
055A           1436   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:314: pwm_Left0 = -1;
055A 7598FF    1437            mov     _pwm_Left0,#0xFF
055D           1438   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:315: pwm_Left1 = -1;
055D 7558FF    1439            mov     _pwm_Left1,#0xFF
0560           1440   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:316: pwm_Right0 = -1;
0560 7518FF    1441            mov     _pwm_Right0,#0xFF
0563           1442   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:317: pwm_Right1 = -1;
0563 75D8FF    1443            mov     _pwm_Right1,#0xFF
0566           1444   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:320: if (leftright == 0) {
0566 EA        1445            mov     a,r2
0567 4B        1446            orl     a,r3
0568 6001      1447            jz      L014022?
056A 020100    1448            ljmp    L014012?
056D           1449   L014022?:
056D           1450   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:322: pwm_Right0 = 50;
056D 751832    1451            mov     _pwm_Right0,#0x32
0570           1452   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:324: waitms(1000);
0570 9003E8    1453            mov     dptr,#0x03E8
0573 120100    1454            lcall   _waitms
0576           1455   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:326: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0576 75820B    1456            mov     dpl,#0x0B
0579 120100    1457            lcall   _Volts_at_Pin
057C 858268    1458            mov     _turncar_vleft_1_88,dpl
057F 858369    1459            mov     (_turncar_vleft_1_88 + 1),dph
0582 85F06A    1460            mov     (_turncar_vleft_1_88 + 2),b
0585 F56B      1461            mov     (_turncar_vleft_1_88 + 3),a
0587           1462   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:327: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0587 75820C    1463            mov     dpl,#0x0C
058A 120100    1464            lcall   _Volts_at_Pin
058D 8582B8    1465            mov     _turncar_vright_1_88,dpl
0590 8583B9    1466            mov     (_turncar_vright_1_88 + 1),dph
0593 85F0BA    1467            mov     (_turncar_vright_1_88 + 2),b
0596 F5BB      1468            mov     (_turncar_vright_1_88 + 3),a
0598           1469   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:329: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0598           1470   L014002?:
0598 C0B8      1471            push    _turncar_vright_1_88
059A C0B9      1472            push    (_turncar_vright_1_88 + 1)
059C C0BA      1473            push    (_turncar_vright_1_88 + 2)
059E C0BB      1474            push    (_turncar_vright_1_88 + 3)
05A0 856882    1475            mov     dpl,_turncar_vleft_1_88
05A3 856983    1476            mov     dph,(_turncar_vleft_1_88 + 1)
05A6 856AF0    1477            mov     b,(_turncar_vleft_1_88 + 2)
05A9 E56B      1478            mov     a,(_turncar_vleft_1_88 + 3)
05AB 120100    1479            lcall   ___fssub
05AE AC82      1480            mov     r4,dpl
05B0 AD83      1481            mov     r5,dph
05B2 AEF0      1482            mov     r6,b
05B4 FF        1483            mov     r7,a
05B5 E581      1484            mov     a,sp
05B7 24FC      1485            add     a,#0xfc
05B9 F581      1486            mov     sp,a
05BB 74CD      1487            mov     a,#0xCD
05BD C0E0      1488            push    acc
05BF 74CC      1489            mov     a,#0xCC
05C1 C0E0      1490            push    acc
05C3 744C      1491            mov     a,#0x4C
05C5 C0E0      1492            push    acc
05C7 743E      1493            mov     a,#0x3E
05C9 C0E0      1494            push    acc
05CB 8C82      1495            mov     dpl,r4
05CD 8D83      1496            mov     dph,r5
05CF 8EF0      1497            mov     b,r6
05D1 EF        1498            mov     a,r7
05D2 120100    1499            lcall   ___fsgt
05D5 AC82      1500            mov     r4,dpl
05D7 E581      1501            mov     a,sp
05D9 24FC      1502            add     a,#0xfc
05DB F581      1503            mov     sp,a
05DD EC        1504            mov     a,r4
05DE 7001      1505            jnz     L014003?
05E0 C0B8      1506            push    _turncar_vright_1_88
05E2 C0B9      1507            push    (_turncar_vright_1_88 + 1)
05E4 C0BA      1508            push    (_turncar_vright_1_88 + 2)
05E6 C0BB      1509            push    (_turncar_vright_1_88 + 3)
05E8 856882    1510            mov     dpl,_turncar_vleft_1_88
05EB 856983    1511            mov     dph,(_turncar_vleft_1_88 + 1)
05EE 856AF0    1512            mov     b,(_turncar_vleft_1_88 + 2)
05F1 E56B      1513            mov     a,(_turncar_vleft_1_88 + 3)
05F3 120100    1514            lcall   ___fssub
05F6 AC82      1515            mov     r4,dpl
05F8 AD83      1516            mov     r5,dph
05FA AEF0      1517            mov     r6,b
05FC FF        1518            mov     r7,a
05FD E581      1519            mov     a,sp
05FF 24FC      1520            add     a,#0xfc
0601 F581      1521            mov     sp,a
0603 74CD      1522            mov     a,#0xCD
0605 C0E0      1523            push    acc
0607 74CC      1524            mov     a,#0xCC
0609 C0E0      1525            push    acc
060B 744C      1526            mov     a,#0x4C
060D C0E0      1527            push    acc
060F 74BE      1528            mov     a,#0xBE
0611 C0E0      1529            push    acc
0613 8C82      1530            mov     dpl,r4
0615 8D83      1531            mov     dph,r5
0617 8EF0      1532            mov     b,r6
0619 EF        1533            mov     a,r7
061A 120100    1534            lcall   ___fslt
061D AC82      1535            mov     r4,dpl
061F E581      1536            mov     a,sp
0621 24FC      1537            add     a,#0xfc
0623 F581      1538            mov     sp,a
0625 EC        1539            mov     a,r4
0626 6001      1540            jz      L014004?
0628           1541   L014003?:
0628           1542   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:331: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0628 75820B    1543            mov     dpl,#0x0B
062B 120100    1544            lcall   _Volts_at_Pin
062E 858268    1545            mov     _turncar_vleft_1_88,dpl
0631 858369    1546            mov     (_turncar_vleft_1_88 + 1),dph
0634 85F06A    1547            mov     (_turncar_vleft_1_88 + 2),b
0637 F56B      1548            mov     (_turncar_vleft_1_88 + 3),a
0639           1549   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:332: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0639 75820C    1550            mov     dpl,#0x0C
063C 120100    1551            lcall   _Volts_at_Pin
063F 8582B8    1552            mov     _turncar_vright_1_88,dpl
0642 8583B9    1553            mov     (_turncar_vright_1_88 + 1),dph
0645 85F0BA    1554            mov     (_turncar_vright_1_88 + 2),b
0648 F5BB      1555            mov     (_turncar_vright_1_88 + 3),a
064A 020100    1556            ljmp    L014002?
064D           1557   L014004?:
064D           1558   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:336: pwm_Right0 = -1;                 
064D 7518FF    1559            mov     _pwm_Right0,#0xFF
0650 22        1560            ret
0651           1561   L014012?:
0651           1562   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:339: else if (leftright == 1) {
0651 BA0128    1563            cjne    r2,#0x01,L014025?
0654 BB0028    1564            cjne    r3,#0x00,L014025?
0657 8001      1565            sjmp    L014026?
0659           1566   L014025?:
0659 22        1567            ret
065A           1568   L014026?:
065A           1569   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:341: pwm_Left1 = 50;
065A 755832    1570            mov     _pwm_Left1,#0x32
065D           1571   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:343: waitms(1000);
065D 9003E8    1572            mov     dptr,#0x03E8
0660 120100    1573            lcall   _waitms
0663           1574   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:345: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0663 75820B    1575            mov     dpl,#0x0B
0666 120100    1576            lcall   _Volts_at_Pin
0669 858268    1577            mov     _turncar_vleft_1_88,dpl
066C 858369    1578            mov     (_turncar_vleft_1_88 + 1),dph
066F 85F06A    1579            mov     (_turncar_vleft_1_88 + 2),b
0672 F56B      1580            mov     (_turncar_vleft_1_88 + 3),a
0674           1581   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:346: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0674 75820C    1582            mov     dpl,#0x0C
0677 120100    1583            lcall   _Volts_at_Pin
067A 8582B8    1584            mov     _turncar_vright_1_88,dpl
067D 8583B9    1585            mov     (_turncar_vright_1_88 + 1),dph
0680 85F0BA    1586            mov     (_turncar_vright_1_88 + 2),b
0683 F5BB      1587            mov     (_turncar_vright_1_88 + 3),a
0685           1588   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:348: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0685           1589   L014006?:
0685 C0B8      1590            push    _turncar_vright_1_88
0687 C0B9      1591            push    (_turncar_vright_1_88 + 1)
0689 C0BA      1592            push    (_turncar_vright_1_88 + 2)
068B C0BB      1593            push    (_turncar_vright_1_88 + 3)
068D 856882    1594            mov     dpl,_turncar_vleft_1_88
0690 856983    1595            mov     dph,(_turncar_vleft_1_88 + 1)
0693 856AF0    1596            mov     b,(_turncar_vleft_1_88 + 2)
0696 E56B      1597            mov     a,(_turncar_vleft_1_88 + 3)
0698 120100    1598            lcall   ___fssub
069B AA82      1599            mov     r2,dpl
069D AB83      1600            mov     r3,dph
069F ACF0      1601            mov     r4,b
06A1 FD        1602            mov     r5,a
06A2 E581      1603            mov     a,sp
06A4 24FC      1604            add     a,#0xfc
06A6 F581      1605            mov     sp,a
06A8 74CD      1606            mov     a,#0xCD
06AA C0E0      1607            push    acc
06AC 74CC      1608            mov     a,#0xCC
06AE C0E0      1609            push    acc
06B0 744C      1610            mov     a,#0x4C
06B2 C0E0      1611            push    acc
06B4 743E      1612            mov     a,#0x3E
06B6 C0E0      1613            push    acc
06B8 8A82      1614            mov     dpl,r2
06BA 8B83      1615            mov     dph,r3
06BC 8CF0      1616            mov     b,r4
06BE ED        1617            mov     a,r5
06BF 120100    1618            lcall   ___fsgt
06C2 AA82      1619            mov     r2,dpl
06C4 E581      1620            mov     a,sp
06C6 24FC      1621            add     a,#0xfc
06C8 F581      1622            mov     sp,a
06CA EA        1623            mov     a,r2
06CB 7001      1624            jnz     L014007?
06CD C0B8      1625            push    _turncar_vright_1_88
06CF C0B9      1626            push    (_turncar_vright_1_88 + 1)
06D1 C0BA      1627            push    (_turncar_vright_1_88 + 2)
06D3 C0BB      1628            push    (_turncar_vright_1_88 + 3)
06D5 856882    1629            mov     dpl,_turncar_vleft_1_88
06D8 856983    1630            mov     dph,(_turncar_vleft_1_88 + 1)
06DB 856AF0    1631            mov     b,(_turncar_vleft_1_88 + 2)
06DE E56B      1632            mov     a,(_turncar_vleft_1_88 + 3)
06E0 120100    1633            lcall   ___fssub
06E3 AA82      1634            mov     r2,dpl
06E5 AB83      1635            mov     r3,dph
06E7 ACF0      1636            mov     r4,b
06E9 FD        1637            mov     r5,a
06EA E581      1638            mov     a,sp
06EC 24FC      1639            add     a,#0xfc
06EE F581      1640            mov     sp,a
06F0 74CD      1641            mov     a,#0xCD
06F2 C0E0      1642            push    acc
06F4 74CC      1643            mov     a,#0xCC
06F6 C0E0      1644            push    acc
06F8 744C      1645            mov     a,#0x4C
06FA C0E0      1646            push    acc
06FC 74BE      1647            mov     a,#0xBE
06FE C0E0      1648            push    acc
0700 8A82      1649            mov     dpl,r2
0702 8B83      1650            mov     dph,r3
0704 8CF0      1651            mov     b,r4
0706 ED        1652            mov     a,r5
0707 120100    1653            lcall   ___fslt
070A AA82      1654            mov     r2,dpl
070C E581      1655            mov     a,sp
070E 24FC      1656            add     a,#0xfc
0710 F581      1657            mov     sp,a
0712 EA        1658            mov     a,r2
0713 6001      1659            jz      L014008?
0715           1660   L014007?:
0715           1661   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:350: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0715 75820B    1662            mov     dpl,#0x0B
0718 120100    1663            lcall   _Volts_at_Pin
071B 858268    1664            mov     _turncar_vleft_1_88,dpl
071E 858369    1665            mov     (_turncar_vleft_1_88 + 1),dph
0721 85F06A    1666            mov     (_turncar_vleft_1_88 + 2),b
0724 F56B      1667            mov     (_turncar_vleft_1_88 + 3),a
0726           1668   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:351: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0726 75820C    1669            mov     dpl,#0x0C
0729 120100    1670            lcall   _Volts_at_Pin
072C 8582B8    1671            mov     _turncar_vright_1_88,dpl
072F 8583B9    1672            mov     (_turncar_vright_1_88 + 1),dph
0732 85F0BA    1673            mov     (_turncar_vright_1_88 + 2),b
0735 F5BB      1674            mov     (_turncar_vright_1_88 + 3),a
0737 020100    1675            ljmp    L014006?
073A           1676   L014008?:
073A           1677   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:355: pwm_Left1 = -1; 
073A 7558FF    1678            mov     _pwm_Left1,#0xFF
073D 22        1679            ret
073E           1680   ;------------------------------------------------------------
073E           1681   ;Allocation info for local variables in function 'uturn'
073E           1682   ;------------------------------------------------------------
073E           1683   ;vleft                     Allocated with name '_uturn_vleft_1_93'
073E           1684   ;vright                    Allocated with name '_uturn_vright_1_93'
073E           1685   ;------------------------------------------------------------
073E           1686   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:359: void uturn () {
073E           1687   ;        -----------------------------------------
073E           1688   ;         function uturn
073E           1689   ;        -----------------------------------------
073E           1690   _uturn:
073E           1691   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:363: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
073E 75820B    1692            mov     dpl,#0x0B
0741 120100    1693            lcall   _Volts_at_Pin
0744 858208    1694            mov     _uturn_vleft_1_93,dpl
0747 858309    1695            mov     (_uturn_vleft_1_93 + 1),dph
074A 85F00A    1696            mov     (_uturn_vleft_1_93 + 2),b
074D F50B      1697            mov     (_uturn_vleft_1_93 + 3),a
074F           1698   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:364: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
074F 75820C    1699            mov     dpl,#0x0C
0752 120100    1700            lcall   _Volts_at_Pin
0755 858258    1701            mov     _uturn_vright_1_93,dpl
0758 858359    1702            mov     (_uturn_vright_1_93 + 1),dph
075B 85F05A    1703            mov     (_uturn_vright_1_93 + 2),b
075E F55B      1704            mov     (_uturn_vright_1_93 + 3),a
0760           1705   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:366: pwm_Left0 = -1;
0760 7598FF    1706            mov     _pwm_Left0,#0xFF
0763           1707   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:367: pwm_Left1 = 50;
0763 755832    1708            mov     _pwm_Left1,#0x32
0766           1709   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:368: pwm_Right0 = -1;
0766 7518FF    1710            mov     _pwm_Right0,#0xFF
0769           1711   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:369: pwm_Right1 = 50;
0769 75D832    1712            mov     _pwm_Right1,#0x32
076C           1713   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:371: waitms(4000);
076C 900FA0    1714            mov     dptr,#0x0FA0
076F 120100    1715            lcall   _waitms
0772           1716   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:373: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0772           1717   L015002?:
0772 C058      1718            push    _uturn_vright_1_93
0774 C059      1719            push    (_uturn_vright_1_93 + 1)
0776 C05A      1720            push    (_uturn_vright_1_93 + 2)
0778 C05B      1721            push    (_uturn_vright_1_93 + 3)
077A 850882    1722            mov     dpl,_uturn_vleft_1_93
077D 850983    1723            mov     dph,(_uturn_vleft_1_93 + 1)
0780 850AF0    1724            mov     b,(_uturn_vleft_1_93 + 2)
0783 E50B      1725            mov     a,(_uturn_vleft_1_93 + 3)
0785 120100    1726            lcall   ___fssub
0788 AA82      1727            mov     r2,dpl
078A AB83      1728            mov     r3,dph
078C ACF0      1729            mov     r4,b
078E FD        1730            mov     r5,a
078F E581      1731            mov     a,sp
0791 24FC      1732            add     a,#0xfc
0793 F581      1733            mov     sp,a
0795 74CD      1734            mov     a,#0xCD
0797 C0E0      1735            push    acc
0799 74CC      1736            mov     a,#0xCC
079B C0E0      1737            push    acc
079D 744C      1738            mov     a,#0x4C
079F C0E0      1739            push    acc
07A1 743E      1740            mov     a,#0x3E
07A3 C0E0      1741            push    acc
07A5 8A82      1742            mov     dpl,r2
07A7 8B83      1743            mov     dph,r3
07A9 8CF0      1744            mov     b,r4
07AB ED        1745            mov     a,r5
07AC 120100    1746            lcall   ___fsgt
07AF AA82      1747            mov     r2,dpl
07B1 E581      1748            mov     a,sp
07B3 24FC      1749            add     a,#0xfc
07B5 F581      1750            mov     sp,a
07B7 EA        1751            mov     a,r2
07B8 7001      1752            jnz     L015003?
07BA C058      1753            push    _uturn_vright_1_93
07BC C059      1754            push    (_uturn_vright_1_93 + 1)
07BE C05A      1755            push    (_uturn_vright_1_93 + 2)
07C0 C05B      1756            push    (_uturn_vright_1_93 + 3)
07C2 850882    1757            mov     dpl,_uturn_vleft_1_93
07C5 850983    1758            mov     dph,(_uturn_vleft_1_93 + 1)
07C8 850AF0    1759            mov     b,(_uturn_vleft_1_93 + 2)
07CB E50B      1760            mov     a,(_uturn_vleft_1_93 + 3)
07CD 120100    1761            lcall   ___fssub
07D0 AA82      1762            mov     r2,dpl
07D2 AB83      1763            mov     r3,dph
07D4 ACF0      1764            mov     r4,b
07D6 FD        1765            mov     r5,a
07D7 E581      1766            mov     a,sp
07D9 24FC      1767            add     a,#0xfc
07DB F581      1768            mov     sp,a
07DD 74CD      1769            mov     a,#0xCD
07DF C0E0      1770            push    acc
07E1 74CC      1771            mov     a,#0xCC
07E3 C0E0      1772            push    acc
07E5 744C      1773            mov     a,#0x4C
07E7 C0E0      1774            push    acc
07E9 74BE      1775            mov     a,#0xBE
07EB C0E0      1776            push    acc
07ED 8A82      1777            mov     dpl,r2
07EF 8B83      1778            mov     dph,r3
07F1 8CF0      1779            mov     b,r4
07F3 ED        1780            mov     a,r5
07F4 120100    1781            lcall   ___fslt
07F7 AA82      1782            mov     r2,dpl
07F9 E581      1783            mov     a,sp
07FB 24FC      1784            add     a,#0xfc
07FD F581      1785            mov     sp,a
07FF EA        1786            mov     a,r2
0800 6001      1787            jz      L015005?
0802           1788   L015003?:
0802           1789   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:375: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0802 75820B    1790            mov     dpl,#0x0B
0805 120100    1791            lcall   _Volts_at_Pin
0808 858208    1792            mov     _uturn_vleft_1_93,dpl
080B 858309    1793            mov     (_uturn_vleft_1_93 + 1),dph
080E 85F00A    1794            mov     (_uturn_vleft_1_93 + 2),b
0811 F50B      1795            mov     (_uturn_vleft_1_93 + 3),a
0813           1796   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:376: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0813 75820C    1797            mov     dpl,#0x0C
0816 120100    1798            lcall   _Volts_at_Pin
0819 858258    1799            mov     _uturn_vright_1_93,dpl
081C 858359    1800            mov     (_uturn_vright_1_93 + 1),dph
081F 85F05A    1801            mov     (_uturn_vright_1_93 + 2),b
0822 F55B      1802            mov     (_uturn_vright_1_93 + 3),a
0824 020100    1803            ljmp    L015002?
0827           1804   L015005?:
0827 22        1805            ret
0828           1806   ;------------------------------------------------------------
0828           1807   ;Allocation info for local variables in function 'main'
0828           1808   ;------------------------------------------------------------
0828           1809   ;------------------------------------------------------------
0828           1810   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:380: void main (void)
0828           1811   ;        -----------------------------------------
0828           1812   ;         function main
0828           1813   ;        -----------------------------------------
0828           1814   _main:
0828           1815   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:383: MOTOR_LEFT0 =0;
0828 C295      1816            clr     _P1_5
082A           1817   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:384: MOTOR_LEFT1 =0;
082A C296      1818            clr     _P1_6
082C           1819   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:385: MOTOR_RIGHT0 =0;
082C C2A0      1820            clr     _P2_0
082E           1821   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:386: MOTOR_RIGHT1 =0;
082E C2A1      1822            clr     _P2_1
0830           1823   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:388: currentstate = 1;        //initialize the car to be stopped
0830 751801    1824            mov     _currentstate,#0x01
0833           1825   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:389: currentcmd = 0;          //initialize the command to be null
0833 755800    1826            mov     _currentcmd,#0x00
0836           1827   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:392: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0836 7428      1828            mov     a,#__str_2
0838 C0E0      1829            push    acc
083A 74A9      1830            mov     a,#(__str_2 >> 8)
083C C0E0      1831            push    acc
083E 7480      1832            mov     a,#0x80
0840 C0E0      1833            push    acc
0842 120100    1834            lcall   _printf
0845 1581      1835            dec     sp
0847 1581      1836            dec     sp
0849 1581      1837            dec     sp
084B           1838   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:401: InitPinADC(2, 3); // Configure P2.3 as analog input
084B 75F803    1839            mov     _InitPinADC_PARM_2,#0x03
084E 758202    1840            mov     dpl,#0x02
0851 120100    1841            lcall   _InitPinADC
0854           1842   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:402: InitPinADC(2, 4); // Configure P2.4 as analog input
0854 75F804    1843            mov     _InitPinADC_PARM_2,#0x04
0857 758202    1844            mov     dpl,#0x02
085A 120100    1845            lcall   _InitPinADC
085D           1846   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:403: InitPinADC(1, 0);
085D 75F800    1847            mov     _InitPinADC_PARM_2,#0x00
0860 758201    1848            mov     dpl,#0x01
0863 120100    1849            lcall   _InitPinADC
0866           1850   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:404: InitADC();
0866 120100    1851            lcall   _InitADC
0869           1852   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:406: while(1)
0869           1853   L016027?:
0869           1854   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:408: readData(); //check for incoming commands
0869 120100    1855            lcall   _readData
086C           1856   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:420: switch (currentstate) {
086C AA18      1857            mov     r2,_currentstate
086E BA01A8    1858            cjne    r2,#0x01,L016044?
0871 8001      1859            sjmp    L016001?
0873           1860   L016044?:
0873 BA0228    1861            cjne    r2,#0x02,L016045?
0876 8001      1862            sjmp    L016002?
0878           1863   L016045?:
0878 BA03A8    1864            cjne    r2,#0x03,L016046?
087B 8001      1865            sjmp    L016003?
087D           1866   L016046?:
087D           1867   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:421: case 1:
087D BA0428    1868            cjne    r2,#0x04,L016005?
0880 8001      1869            sjmp    L016004?
0882           1870   L016001?:
0882           1871   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:422: linetrack(0);    //forwards
0882 900000    1872            mov     dptr,#0x0000
0885 120100    1873            lcall   _linetrack
0888           1874   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:423: break;
0888           1875   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:424: case 2:
0888 8001      1876            sjmp    L016005?
088A           1877   L016002?:
088A           1878   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:425: linetrack(1);    //backwards
088A 900001    1879            mov     dptr,#0x0001
088D 120100    1880            lcall   _linetrack
0890           1881   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:426: break;
0890           1882   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:427: case 3:
0890 8001      1883            sjmp    L016005?
0892           1884   L016003?:
0892           1885   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:428: stopcar();               //stop car
0892 120100    1886            lcall   _stopcar
0895           1887   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:429: break;
0895           1888   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:430: case 4:                          //debugging
0895 8001      1889            sjmp    L016005?
0897           1890   L016004?:
0897           1891   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:431: pwm_Left1 = 100;
0897 755864    1892            mov     _pwm_Left1,#0x64
089A           1893   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:432: pwm_Left0 = -1;
089A 7598FF    1894            mov     _pwm_Left0,#0xFF
089D           1895   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:433: pwm_Right1 = -1;
089D 75D8FF    1896            mov     _pwm_Right1,#0xFF
08A0           1897   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:434: pwm_Right0 = 100; 
08A0 751864    1898            mov     _pwm_Right0,#0x64
08A3           1899   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:436: }
08A3           1900   L016005?:
08A3           1901   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:438: switch (currentcmd) {
08A3 E558      1902            mov     a,_currentcmd
08A5 FA        1903            mov     r2,a
08A6 30E7A8    1904            jnb     acc.7,L016048?
08A9 020100    1905            ljmp    L016024?
08AC           1906   L016048?:
08AC C3        1907            clr     c
08AD 7486      1908            mov     a,#(0x06 ^ 0x80)
08AF 8AF0      1909            mov     b,r2
08B1 63F080    1910            xrl     b,#0x80
08B4 95F0      1911            subb    a,b
08B6 5001      1912            jnc     L016049?
08B8 020100    1913            ljmp    L016024?
08BB           1914   L016049?:
08BB EA        1915            mov     a,r2
08BC 2A        1916            add     a,r2
08BD 2A        1917            add     a,r2
08BE 90AC68    1918            mov     dptr,#L016050?
08C1 73        1919            jmp     @a+dptr
08C2           1920   L016050?:
08C2 020100    1921            ljmp    L016006?
08C5 020100    1922            ljmp    L016012?
08C8 020100    1923            ljmp    L016016?
08CB 020100    1924            ljmp    L016020?
08CE 020100    1925            ljmp    L016021?
08D1 020100    1926            ljmp    L016022?
08D4 020100    1927            ljmp    L016023?
08D7           1928   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:440: case 0 :
08D7           1929   L016006?:
08D7           1930   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:442: if (currentstate == 1) {
08D7 7401      1931            mov     a,#0x01
08D9 B51868    1932            cjne    a,_currentstate,L016051?
08DC 8001      1933            sjmp    L016052?
08DE           1934   L016051?:
08DE 020100    1935            ljmp    L016027?
08E1           1936   L016052?:
08E1           1937   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:443: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 && Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
08E1 75820B    1938            mov     dpl,#0x0B
08E4 120100    1939            lcall   _Volts_at_Pin
08E7 AA82      1940            mov     r2,dpl
08E9 AB83      1941            mov     r3,dph
08EB ACF0      1942            mov     r4,b
08ED FD        1943            mov     r5,a
08EE E4        1944            clr     a
08EF C0E0      1945            push    acc
08F1 C0E0      1946            push    acc
08F3 7480      1947            mov     a,#0x80
08F5 C0E0      1948            push    acc
08F7 743F      1949            mov     a,#0x3F
08F9 C0E0      1950            push    acc
08FB 8A82      1951            mov     dpl,r2
08FD 8B83      1952            mov     dph,r3
08FF 8CF0      1953            mov     b,r4
0901 ED        1954            mov     a,r5
0902 120100    1955            lcall   ___fsgt
0905 AA82      1956            mov     r2,dpl
0907 E581      1957            mov     a,sp
0909 24FC      1958            add     a,#0xfc
090B F581      1959            mov     sp,a
090D EA        1960            mov     a,r2
090E 7001      1961            jnz     L016053?
0910 020100    1962            ljmp    L016027?
0913           1963   L016053?:
0913 75820C    1964            mov     dpl,#0x0C
0916 120100    1965            lcall   _Volts_at_Pin
0919 AA82      1966            mov     r2,dpl
091B AB83      1967            mov     r3,dph
091D ACF0      1968            mov     r4,b
091F FD        1969            mov     r5,a
0920 E4        1970            clr     a
0921 C0E0      1971            push    acc
0923 C0E0      1972            push    acc
0925 7480      1973            mov     a,#0x80
0927 C0E0      1974            push    acc
0929 743F      1975            mov     a,#0x3F
092B C0E0      1976            push    acc
092D 8A82      1977            mov     dpl,r2
092F 8B83      1978            mov     dph,r3
0931 8CF0      1979            mov     b,r4
0933 ED        1980            mov     a,r5
0934 120100    1981            lcall   ___fsgt
0937 AA82      1982            mov     r2,dpl
0939 E581      1983            mov     a,sp
093B 24FC      1984            add     a,#0xfc
093D F581      1985            mov     sp,a
093F EA        1986            mov     a,r2
0940 7001      1987            jnz     L016054?
0942 020100    1988            ljmp    L016027?
0945           1989   L016054?:
0945           1990   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:445: pwm_Left1 = 35;
0945 755823    1991            mov     _pwm_Left1,#0x23
0948           1992   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:446: pwm_Left0 = -1;
0948 7598FF    1993            mov     _pwm_Left0,#0xFF
094B           1994   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:447: pwm_Right0 = 35;
094B 751823    1995            mov     _pwm_Right0,#0x23
094E           1996   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:448: pwm_Right1 = -1;                                                 
094E 75D8FF    1997            mov     _pwm_Right1,#0xFF
0951           1998   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:449: waitms(1500);
0951 9005DC    1999            mov     dptr,#0x05DC
0954 120100    2000            lcall   _waitms
0957           2001   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:452: break;
0957 020100    2002            ljmp    L016027?
095A           2003   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:453: case 1 :
095A           2004   L016012?:
095A           2005   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:455: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 && Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
095A 75820B    2006            mov     dpl,#0x0B
095D 120100    2007            lcall   _Volts_at_Pin
0960 AA82      2008            mov     r2,dpl
0962 AB83      2009            mov     r3,dph
0964 ACF0      2010            mov     r4,b
0966 FD        2011            mov     r5,a
0967 E4        2012            clr     a
0968 C0E0      2013            push    acc
096A C0E0      2014            push    acc
096C 7480      2015            mov     a,#0x80
096E C0E0      2016            push    acc
0970 743F      2017            mov     a,#0x3F
0972 C0E0      2018            push    acc
0974 8A82      2019            mov     dpl,r2
0976 8B83      2020            mov     dph,r3
0978 8CF0      2021            mov     b,r4
097A ED        2022            mov     a,r5
097B 120100    2023            lcall   ___fsgt
097E AA82      2024            mov     r2,dpl
0980 E581      2025            mov     a,sp
0982 24FC      2026            add     a,#0xfc
0984 F581      2027            mov     sp,a
0986 EA        2028            mov     a,r2
0987 7001      2029            jnz     L016055?
0989 020100    2030            ljmp    L016027?
098C           2031   L016055?:
098C 75820C    2032            mov     dpl,#0x0C
098F 120100    2033            lcall   _Volts_at_Pin
0992 AA82      2034            mov     r2,dpl
0994 AB83      2035            mov     r3,dph
0996 ACF0      2036            mov     r4,b
0998 FD        2037            mov     r5,a
0999 E4        2038            clr     a
099A C0E0      2039            push    acc
099C C0E0      2040            push    acc
099E 7480      2041            mov     a,#0x80
09A0 C0E0      2042            push    acc
09A2 743F      2043            mov     a,#0x3F
09A4 C0E0      2044            push    acc
09A6 8A82      2045            mov     dpl,r2
09A8 8B83      2046            mov     dph,r3
09AA 8CF0      2047            mov     b,r4
09AC ED        2048            mov     a,r5
09AD 120100    2049            lcall   ___fsgt
09B0 AA82      2050            mov     r2,dpl
09B2 E581      2051            mov     a,sp
09B4 24FC      2052            add     a,#0xfc
09B6 F581      2053            mov     sp,a
09B8 EA        2054            mov     a,r2
09B9 7001      2055            jnz     L016056?
09BB 020100    2056            ljmp    L016027?
09BE           2057   L016056?:
09BE           2058   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:457: pwm_Left1 = 35;
09BE 755823    2059            mov     _pwm_Left1,#0x23
09C1           2060   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:458: pwm_Left0 = -1;
09C1 7598FF    2061            mov     _pwm_Left0,#0xFF
09C4           2062   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:459: pwm_Right0 = 35;
09C4 751823    2063            mov     _pwm_Right0,#0x23
09C7           2064   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:460: pwm_Right1 = -1;                                                 
09C7 75D8FF    2065            mov     _pwm_Right1,#0xFF
09CA           2066   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:461: waitms(1500);
09CA 9005DC    2067            mov     dptr,#0x05DC
09CD 120100    2068            lcall   _waitms
09D0           2069   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:463: turncar(0); //0 = left
09D0 900000    2070            mov     dptr,#0x0000
09D3 120100    2071            lcall   _turncar
09D6           2072   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:464: currentcmd = 0;
09D6 755800    2073            mov     _currentcmd,#0x00
09D9           2074   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:467: break;
09D9 020100    2075            ljmp    L016027?
09DC           2076   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:470: case 2 :
09DC           2077   L016016?:
09DC           2078   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:472: if (Volts_at_Pin(LQFP32_MUX_P2_4) > 1 || Volts_at_Pin(LQFP32_MUX_P2_3) > 1) {
09DC 75820C    2079            mov     dpl,#0x0C
09DF 120100    2080            lcall   _Volts_at_Pin
09E2 AA82      2081            mov     r2,dpl
09E4 AB83      2082            mov     r3,dph
09E6 ACF0      2083            mov     r4,b
09E8 FD        2084            mov     r5,a
09E9 E4        2085            clr     a
09EA C0E0      2086            push    acc
09EC C0E0      2087            push    acc
09EE 7480      2088            mov     a,#0x80
09F0 C0E0      2089            push    acc
09F2 743F      2090            mov     a,#0x3F
09F4 C0E0      2091            push    acc
09F6 8A82      2092            mov     dpl,r2
09F8 8B83      2093            mov     dph,r3
09FA 8CF0      2094            mov     b,r4
09FC ED        2095            mov     a,r5
09FD 120100    2096            lcall   ___fsgt
0A00 AA82      2097            mov     r2,dpl
0A02 E581      2098            mov     a,sp
0A04 24FC      2099            add     a,#0xfc
0A06 F581      2100            mov     sp,a
0A08 EA        2101            mov     a,r2
0A09 7001      2102            jnz     L016017?
0A0B 75820B    2103            mov     dpl,#0x0B
0A0E 120100    2104            lcall   _Volts_at_Pin
0A11 AA82      2105            mov     r2,dpl
0A13 AB83      2106            mov     r3,dph
0A15 ACF0      2107            mov     r4,b
0A17 FD        2108            mov     r5,a
0A18 E4        2109            clr     a
0A19 C0E0      2110            push    acc
0A1B C0E0      2111            push    acc
0A1D 7480      2112            mov     a,#0x80
0A1F C0E0      2113            push    acc
0A21 743F      2114            mov     a,#0x3F
0A23 C0E0      2115            push    acc
0A25 8A82      2116            mov     dpl,r2
0A27 8B83      2117            mov     dph,r3
0A29 8CF0      2118            mov     b,r4
0A2B ED        2119            mov     a,r5
0A2C 120100    2120            lcall   ___fsgt
0A2F AA82      2121            mov     r2,dpl
0A31 E581      2122            mov     a,sp
0A33 24FC      2123            add     a,#0xfc
0A35 F581      2124            mov     sp,a
0A37 EA        2125            mov     a,r2
0A38 7001      2126            jnz     L016058?
0A3A 020100    2127            ljmp    L016027?
0A3D           2128   L016058?:
0A3D           2129   L016017?:
0A3D           2130   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:473: printf("\n\r reached intersection :D");
0A3D 7468      2131            mov     a,#__str_3
0A3F C0E0      2132            push    acc
0A41 74B0      2133            mov     a,#(__str_3 >> 8)
0A43 C0E0      2134            push    acc
0A45 7480      2135            mov     a,#0x80
0A47 C0E0      2136            push    acc
0A49 120100    2137            lcall   _printf
0A4C 1581      2138            dec     sp
0A4E 1581      2139            dec     sp
0A50 1581      2140            dec     sp
0A52           2141   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:474: pwm_Left1 = 35;
0A52 755823    2142            mov     _pwm_Left1,#0x23
0A55           2143   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:475: pwm_Left0 = -1;
0A55 7598FF    2144            mov     _pwm_Left0,#0xFF
0A58           2145   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:476: pwm_Right0 = 35;
0A58 751823    2146            mov     _pwm_Right0,#0x23
0A5B           2147   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:477: pwm_Right1 = -1;
0A5B 75D8FF    2148            mov     _pwm_Right1,#0xFF
0A5E           2149   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:478: waitms(1500);
0A5E 9005DC    2150            mov     dptr,#0x05DC
0A61 120100    2151            lcall   _waitms
0A64           2152   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:480: turncar(1); //1 = right
0A64 900001    2153            mov     dptr,#0x0001
0A67 120100    2154            lcall   _turncar
0A6A           2155   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:481: currentcmd = 0;
0A6A 755800    2156            mov     _currentcmd,#0x00
0A6D           2157   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:483: break;
0A6D 020100    2158            ljmp    L016027?
0A70           2159   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:486: case 3 :
0A70           2160   L016020?:
0A70           2161   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:487: currentstate = 1;
0A70 751801    2162            mov     _currentstate,#0x01
0A73           2163   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:488: currentcmd = 0;
0A73 755800    2164            mov     _currentcmd,#0x00
0A76           2165   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:489: break;
0A76 020100    2166            ljmp    L016027?
0A79           2167   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:492: case 4 :
0A79           2168   L016021?:
0A79           2169   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:493: currentstate = 2;
0A79 751802    2170            mov     _currentstate,#0x02
0A7C           2171   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:494: currentcmd = 0;
0A7C 755800    2172            mov     _currentcmd,#0x00
0A7F           2173   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:495: break;
0A7F 020100    2174            ljmp    L016027?
0A82           2175   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:498: case 5 :
0A82           2176   L016022?:
0A82           2177   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:499: currentstate = 3;
0A82 751803    2178            mov     _currentstate,#0x03
0A85           2179   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:500: currentcmd = 0;
0A85 755800    2180            mov     _currentcmd,#0x00
0A88           2181   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:501: break;
0A88 020100    2182            ljmp    L016027?
0A8B           2183   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:504: case 6 :
0A8B           2184   L016023?:
0A8B           2185   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:505: uturn();  //uturn
0A8B 120100    2186            lcall   _uturn
0A8E           2187   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:506: currentcmd = 0;
0A8E 755800    2188            mov     _currentcmd,#0x00
0A91           2189   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:507: break;
0A91 020100    2190            ljmp    L016027?
0A94           2191   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:508: default: 
0A94           2192   L016024?:
0A94           2193   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:509: currentstate = 1;
0A94 751801    2194            mov     _currentstate,#0x01
0A97           2195   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:510: }
0A97 020100    2196            ljmp    L016027?
0A9A           2197            rseg R_CSEG
0A9A           2198   
0000           2199            rseg R_XINIT
0000           2200   
0000           2201            rseg R_CONST
0000           2202   __str_0:
0000 0A        2203            db 0x0A
0001 0D        2204            db 0x0D
0002 20637572  2205            db ' current command is %d, commandflag = %d'
     72656E74
     20636F6D
     6D616E64
     20697320
     25642C20
     636F6D6D
     616E6466
     6C616720
     3D202564
002A 0D        2206            db 0x0D
002B 0A        2207            db 0x0A
002C 00        2208            db 0x00
002D           2209   __str_1:
002D 322E333D  2210            db '2.3=%f, 2.4=%f, Left0=%4d, Right1=%4d, Left1=%4d, Right0=%4d'
     25662C20
     322E343D
     25662C20
     4C656674
     303D2534
     642C2052
     69676874
     313D2534
     642C204C
     65667431
     3D253464
     2C205269
     67687430
     3D253464
0069 2C20636F  2211            db ', command:%d, state:%d'
     6D6D616E
     643A2564
     2C207374
     6174653A
     2564
007F 0D        2212            db 0x0D
0080 00        2213            db 0x00
0081           2214   __str_2:
0081 1B        2215            db 0x1B
0082 5B324A    2216            db '[2J'
0085 00        2217            db 0x00
0086           2218   __str_3:
0086 0A        2219            db 0x0A
0087 0D        2220            db 0x0D
0088 20726561  2221            db ' reached intersection :D'
     63686564
     20696E74
     65727365
     6374696F
     6E203A44
00A0 00        2222            db 0x00
00A1           2223   
002E           2224            CSEG
002E           2225   
002E           2226   end
