0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Mar 24 21:31:53 2017
0000              5   ;--------------------------------------------------------
                  5   $name motors
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _forward_backward
0000             28            public _Timer2_ISR
0000             29            public __c51_external_startup
0000             30            public _direction
0000             31            public _pwm_Right1
0000             32            public _pwm_Right0
0000             33            public _pwm_Left1
0000             34            public _pwm_Left0
0000             35            public _pwm_both
0000             36            public _mode
0000             37            public _pwm_count
0000             38   ;--------------------------------------------------------
0000             39   ; Special Function Registers
0000             40   ;--------------------------------------------------------
0000             41   _P0             DATA 0x80
0000             42   _SP             DATA 0x81
0000             43   _DPL            DATA 0x82
0000             44   _DPH            DATA 0x83
0000             45   _EMI0TC         DATA 0x84
0000             46   _EMI0CF         DATA 0x85
0000             47   _OSCLCN         DATA 0x86
0000             48   _PCON           DATA 0x87
0000             49   _TCON           DATA 0x88
0000             50   _TMOD           DATA 0x89
0000             51   _TL0            DATA 0x8a
0000             52   _TL1            DATA 0x8b
0000             53   _TH0            DATA 0x8c
0000             54   _TH1            DATA 0x8d
0000             55   _CKCON          DATA 0x8e
0000             56   _PSCTL          DATA 0x8f
0000             57   _P1             DATA 0x90
0000             58   _TMR3CN         DATA 0x91
0000             59   _TMR4CN         DATA 0x91
0000             60   _TMR3RLL        DATA 0x92
0000             61   _TMR4RLL        DATA 0x92
0000             62   _TMR3RLH        DATA 0x93
0000             63   _TMR4RLH        DATA 0x93
0000             64   _TMR3L          DATA 0x94
0000             65   _TMR4L          DATA 0x94
0000             66   _TMR3H          DATA 0x95
0000             67   _TMR4H          DATA 0x95
0000             68   _USB0ADR        DATA 0x96
0000             69   _USB0DAT        DATA 0x97
0000             70   _SCON           DATA 0x98
0000             71   _SCON0          DATA 0x98
0000             72   _SBUF           DATA 0x99
0000             73   _SBUF0          DATA 0x99
0000             74   _CPT1CN         DATA 0x9a
0000             75   _CPT0CN         DATA 0x9b
0000             76   _CPT1MD         DATA 0x9c
0000             77   _CPT0MD         DATA 0x9d
0000             78   _CPT1MX         DATA 0x9e
0000             79   _CPT0MX         DATA 0x9f
0000             80   _P2             DATA 0xa0
0000             81   _SPI0CFG        DATA 0xa1
0000             82   _SPI0CKR        DATA 0xa2
0000             83   _SPI0DAT        DATA 0xa3
0000             84   _P0MDOUT        DATA 0xa4
0000             85   _P1MDOUT        DATA 0xa5
0000             86   _P2MDOUT        DATA 0xa6
0000             87   _P3MDOUT        DATA 0xa7
0000             88   _IE             DATA 0xa8
0000             89   _CLKSEL         DATA 0xa9
0000             90   _EMI0CN         DATA 0xaa
0000             91   __XPAGE         DATA 0xaa
0000             92   _SBCON1         DATA 0xac
0000             93   _P4MDOUT        DATA 0xae
0000             94   _PFE0CN         DATA 0xaf
0000             95   _P3             DATA 0xb0
0000             96   _OSCXCN         DATA 0xb1
0000             97   _OSCICN         DATA 0xb2
0000             98   _OSCICL         DATA 0xb3
0000             99   _SBRLL1         DATA 0xb4
0000            100   _SBRLH1         DATA 0xb5
0000            101   _FLSCL          DATA 0xb6
0000            102   _FLKEY          DATA 0xb7
0000            103   _IP             DATA 0xb8
0000            104   _CLKMUL         DATA 0xb9
0000            105   _SMBTC          DATA 0xb9
0000            106   _AMX0N          DATA 0xba
0000            107   _AMX0P          DATA 0xbb
0000            108   _ADC0CF         DATA 0xbc
0000            109   _ADC0L          DATA 0xbd
0000            110   _ADC0H          DATA 0xbe
0000            111   _SFRPAGE        DATA 0xbf
0000            112   _SMB0CN         DATA 0xc0
0000            113   _SMB1CN         DATA 0xc0
0000            114   _SMB0CF         DATA 0xc1
0000            115   _SMB1CF         DATA 0xc1
0000            116   _SMB0DAT        DATA 0xc2
0000            117   _SMB1DAT        DATA 0xc2
0000            118   _ADC0GTL        DATA 0xc3
0000            119   _ADC0GTH        DATA 0xc4
0000            120   _ADC0LTL        DATA 0xc5
0000            121   _ADC0LTH        DATA 0xc6
0000            122   _P4             DATA 0xc7
0000            123   _TMR2CN         DATA 0xc8
0000            124   _TMR5CN         DATA 0xc8
0000            125   _REG01CN        DATA 0xc9
0000            126   _TMR2RLL        DATA 0xca
0000            127   _TMR5RLL        DATA 0xca
0000            128   _TMR2RLH        DATA 0xcb
0000            129   _TMR5RLH        DATA 0xcb
0000            130   _TMR2L          DATA 0xcc
0000            131   _TMR5L          DATA 0xcc
0000            132   _TMR2H          DATA 0xcd
0000            133   _TMR5H          DATA 0xcd
0000            134   _SMB0ADM        DATA 0xce
0000            135   _SMB1ADM        DATA 0xce
0000            136   _SMB0ADR        DATA 0xcf
0000            137   _SMB1ADR        DATA 0xcf
0000            138   _PSW            DATA 0xd0
0000            139   _REF0CN         DATA 0xd1
0000            140   _SCON1          DATA 0xd2
0000            141   _SBUF1          DATA 0xd3
0000            142   _P0SKIP         DATA 0xd4
0000            143   _P1SKIP         DATA 0xd5
0000            144   _P2SKIP         DATA 0xd6
0000            145   _USB0XCN        DATA 0xd7
0000            146   _PCA0CN         DATA 0xd8
0000            147   _PCA0MD         DATA 0xd9
0000            148   _PCA0CPM0       DATA 0xda
0000            149   _PCA0CPM1       DATA 0xdb
0000            150   _PCA0CPM2       DATA 0xdc
0000            151   _PCA0CPM3       DATA 0xdd
0000            152   _PCA0CPM4       DATA 0xde
0000            153   _P3SKIP         DATA 0xdf
0000            154   _ACC            DATA 0xe0
0000            155   _XBR0           DATA 0xe1
0000            156   _XBR1           DATA 0xe2
0000            157   _XBR2           DATA 0xe3
0000            158   _IT01CF         DATA 0xe4
0000            159   _CKCON1         DATA 0xe4
0000            160   _SMOD1          DATA 0xe5
0000            161   _EIE1           DATA 0xe6
0000            162   _EIE2           DATA 0xe7
0000            163   _ADC0CN         DATA 0xe8
0000            164   _PCA0CPL1       DATA 0xe9
0000            165   _PCA0CPH1       DATA 0xea
0000            166   _PCA0CPL2       DATA 0xeb
0000            167   _PCA0CPH2       DATA 0xec
0000            168   _PCA0CPL3       DATA 0xed
0000            169   _PCA0CPH3       DATA 0xee
0000            170   _RSTSRC         DATA 0xef
0000            171   _B              DATA 0xf0
0000            172   _P0MDIN         DATA 0xf1
0000            173   _P1MDIN         DATA 0xf2
0000            174   _P2MDIN         DATA 0xf3
0000            175   _P3MDIN         DATA 0xf4
0000            176   _P4MDIN         DATA 0xf5
0000            177   _EIP1           DATA 0xf6
0000            178   _EIP2           DATA 0xf7
0000            179   _SPI0CN         DATA 0xf8
0000            180   _PCA0L          DATA 0xf9
0000            181   _PCA0H          DATA 0xfa
0000            182   _PCA0CPL0       DATA 0xfb
0000            183   _PCA0CPH0       DATA 0xfc
0000            184   _PCA0CPL4       DATA 0xfd
0000            185   _PCA0CPH4       DATA 0xfe
0000            186   _VDM0CN         DATA 0xff
0000            187   _DPTR           DATA 0x8382
0000            188   _TMR2RL         DATA 0xcbca
0000            189   _TMR3RL         DATA 0x9392
0000            190   _TMR4RL         DATA 0x9392
0000            191   _TMR5RL         DATA 0xcbca
0000            192   _TMR2           DATA 0xcdcc
0000            193   _TMR3           DATA 0x9594
0000            194   _TMR4           DATA 0x9594
0000            195   _TMR5           DATA 0xcdcc
0000            196   _SBRL1          DATA 0xb5b4
0000            197   _ADC0           DATA 0xbebd
0000            198   _ADC0GT         DATA 0xc4c3
0000            199   _ADC0LT         DATA 0xc6c5
0000            200   _PCA0           DATA 0xfaf9
0000            201   _PCA0CP1        DATA 0xeae9
0000            202   _PCA0CP2        DATA 0xeceb
0000            203   _PCA0CP3        DATA 0xeeed
0000            204   _PCA0CP0        DATA 0xfcfb
0000            205   _PCA0CP4        DATA 0xfefd
0000            206   ;--------------------------------------------------------
0000            207   ; special function bits
0000            208   ;--------------------------------------------------------
0000            209   _P0_0           BIT 0x80
0000            210   _P0_1           BIT 0x81
0000            211   _P0_2           BIT 0x82
0000            212   _P0_3           BIT 0x83
0000            213   _P0_4           BIT 0x84
0000            214   _P0_5           BIT 0x85
0000            215   _P0_6           BIT 0x86
0000            216   _P0_7           BIT 0x87
0000            217   _TF1            BIT 0x8f
0000            218   _TR1            BIT 0x8e
0000            219   _TF0            BIT 0x8d
0000            220   _TR0            BIT 0x8c
0000            221   _IE1            BIT 0x8b
0000            222   _IT1            BIT 0x8a
0000            223   _IE0            BIT 0x89
0000            224   _IT0            BIT 0x88
0000            225   _P1_0           BIT 0x90
0000            226   _P1_1           BIT 0x91
0000            227   _P1_2           BIT 0x92
0000            228   _P1_3           BIT 0x93
0000            229   _P1_4           BIT 0x94
0000            230   _P1_5           BIT 0x95
0000            231   _P1_6           BIT 0x96
0000            232   _P1_7           BIT 0x97
0000            233   _S0MODE         BIT 0x9f
0000            234   _SCON0_6        BIT 0x9e
0000            235   _MCE0           BIT 0x9d
0000            236   _REN0           BIT 0x9c
0000            237   _TB80           BIT 0x9b
0000            238   _RB80           BIT 0x9a
0000            239   _TI0            BIT 0x99
0000            240   _RI0            BIT 0x98
0000            241   _SCON_6         BIT 0x9e
0000            242   _MCE            BIT 0x9d
0000            243   _REN            BIT 0x9c
0000            244   _TB8            BIT 0x9b
0000            245   _RB8            BIT 0x9a
0000            246   _TI             BIT 0x99
0000            247   _RI             BIT 0x98
0000            248   _P2_0           BIT 0xa0
0000            249   _P2_1           BIT 0xa1
0000            250   _P2_2           BIT 0xa2
0000            251   _P2_3           BIT 0xa3
0000            252   _P2_4           BIT 0xa4
0000            253   _P2_5           BIT 0xa5
0000            254   _P2_6           BIT 0xa6
0000            255   _P2_7           BIT 0xa7
0000            256   _EA             BIT 0xaf
0000            257   _ESPI0          BIT 0xae
0000            258   _ET2            BIT 0xad
0000            259   _ES0            BIT 0xac
0000            260   _ET1            BIT 0xab
0000            261   _EX1            BIT 0xaa
0000            262   _ET0            BIT 0xa9
0000            263   _EX0            BIT 0xa8
0000            264   _P3_0           BIT 0xb0
0000            265   _P3_1           BIT 0xb1
0000            266   _P3_2           BIT 0xb2
0000            267   _P3_3           BIT 0xb3
0000            268   _P3_4           BIT 0xb4
0000            269   _P3_5           BIT 0xb5
0000            270   _P3_6           BIT 0xb6
0000            271   _P3_7           BIT 0xb7
0000            272   _IP_7           BIT 0xbf
0000            273   _PSPI0          BIT 0xbe
0000            274   _PT2            BIT 0xbd
0000            275   _PS0            BIT 0xbc
0000            276   _PT1            BIT 0xbb
0000            277   _PX1            BIT 0xba
0000            278   _PT0            BIT 0xb9
0000            279   _PX0            BIT 0xb8
0000            280   _MASTER0        BIT 0xc7
0000            281   _TXMODE0        BIT 0xc6
0000            282   _STA0           BIT 0xc5
0000            283   _STO0           BIT 0xc4
0000            284   _ACKRQ0         BIT 0xc3
0000            285   _ARBLOST0       BIT 0xc2
0000            286   _ACK0           BIT 0xc1
0000            287   _SI0            BIT 0xc0
0000            288   _MASTER1        BIT 0xc7
0000            289   _TXMODE1        BIT 0xc6
0000            290   _STA1           BIT 0xc5
0000            291   _STO1           BIT 0xc4
0000            292   _ACKRQ1         BIT 0xc3
0000            293   _ARBLOST1       BIT 0xc2
0000            294   _ACK1           BIT 0xc1
0000            295   _SI1            BIT 0xc0
0000            296   _TF2            BIT 0xcf
0000            297   _TF2H           BIT 0xcf
0000            298   _TF2L           BIT 0xce
0000            299   _TF2LEN         BIT 0xcd
0000            300   _TF2CEN         BIT 0xcc
0000            301   _T2SPLIT        BIT 0xcb
0000            302   _TR2            BIT 0xca
0000            303   _T2CSS          BIT 0xc9
0000            304   _T2XCLK         BIT 0xc8
0000            305   _TF5H           BIT 0xcf
0000            306   _TF5L           BIT 0xce
0000            307   _TF5LEN         BIT 0xcd
0000            308   _TMR5CN_4       BIT 0xcc
0000            309   _T5SPLIT        BIT 0xcb
0000            310   _TR5            BIT 0xca
0000            311   _TMR5CN_1       BIT 0xc9
0000            312   _T5XCLK         BIT 0xc8
0000            313   _CY             BIT 0xd7
0000            314   _AC             BIT 0xd6
0000            315   _F0             BIT 0xd5
0000            316   _RS1            BIT 0xd4
0000            317   _RS0            BIT 0xd3
0000            318   _OV             BIT 0xd2
0000            319   _F1             BIT 0xd1
0000            320   _PARITY         BIT 0xd0
0000            321   _CF             BIT 0xdf
0000            322   _CR             BIT 0xde
0000            323   _PCA0CN_5       BIT 0xde
0000            324   _CCF4           BIT 0xdc
0000            325   _CCF3           BIT 0xdb
0000            326   _CCF2           BIT 0xda
0000            327   _CCF1           BIT 0xd9
0000            328   _CCF0           BIT 0xd8
0000            329   _ACC_7          BIT 0xe7
0000            330   _ACC_6          BIT 0xe6
0000            331   _ACC_5          BIT 0xe5
0000            332   _ACC_4          BIT 0xe4
0000            333   _ACC_3          BIT 0xe3
0000            334   _ACC_2          BIT 0xe2
0000            335   _ACC_1          BIT 0xe1
0000            336   _ACC_0          BIT 0xe0
0000            337   _AD0EN          BIT 0xef
0000            338   _AD0TM          BIT 0xee
0000            339   _AD0INT         BIT 0xed
0000            340   _AD0BUSY        BIT 0xec
0000            341   _AD0WINT        BIT 0xeb
0000            342   _AD0CM2         BIT 0xea
0000            343   _AD0CM1         BIT 0xe9
0000            344   _AD0CM0         BIT 0xe8
0000            345   _B_7            BIT 0xf7
0000            346   _B_6            BIT 0xf6
0000            347   _B_5            BIT 0xf5
0000            348   _B_4            BIT 0xf4
0000            349   _B_3            BIT 0xf3
0000            350   _B_2            BIT 0xf2
0000            351   _B_1            BIT 0xf1
0000            352   _B_0            BIT 0xf0
0000            353   _SPIF           BIT 0xff
0000            354   _WCOL           BIT 0xfe
0000            355   _MODF           BIT 0xfd
0000            356   _RXOVRN         BIT 0xfc
0000            357   _NSSMD1         BIT 0xfb
0000            358   _NSSMD0         BIT 0xfa
0000            359   _TXBMT          BIT 0xf9
0000            360   _SPIEN          BIT 0xf8
0000            361   ;--------------------------------------------------------
0000            362   ; overlayable register banks
0000            363   ;--------------------------------------------------------
0000            364            rbank0 segment data overlay
0000            365   ;--------------------------------------------------------
0000            366   ; internal ram data
0000            367   ;--------------------------------------------------------
0000            368            rseg R_DSEG
0000            369   _pwm_count:
0000            370            ds 1
0001            371   _mode:
0001            372            ds 2
0003            373   _pwm_both:
0003            374            ds 2
0005            375   _pwm_Left0:
0005            376            ds 2
0007            377   _pwm_Left1:
0007            378            ds 2
0009            379   _pwm_Right0:
0009            380            ds 2
000B            381   _pwm_Right1:
000B            382            ds 2
000D            383   _direction:
000D            384            ds 2
000F            385   ;--------------------------------------------------------
000F            386   ; overlayable items in internal ram 
000F            387   ;--------------------------------------------------------
0000            388            rseg    R_OSEG
0000            389   ;--------------------------------------------------------
0000            390   ; indirectly addressable internal ram data
0000            391   ;--------------------------------------------------------
0000            392            rseg R_ISEG
0000            393   ;--------------------------------------------------------
0000            394   ; absolute internal ram data
0000            395   ;--------------------------------------------------------
0000            396            DSEG
0000            397   ;--------------------------------------------------------
0000            398   ; bit data
0000            399   ;--------------------------------------------------------
0000            400            rseg R_BSEG
0000            401   _Timer2_ISR_sloc0_1_0:
0000            402            DBIT    1
0001            403   ;--------------------------------------------------------
0001            404   ; paged external ram data
0001            405   ;--------------------------------------------------------
0000            406            rseg R_PSEG
0000            407   ;--------------------------------------------------------
0000            408   ; external ram data
0000            409   ;--------------------------------------------------------
0000            410            rseg R_XSEG
0000            411   ;--------------------------------------------------------
0000            412   ; absolute external ram data
0000            413   ;--------------------------------------------------------
0000            414            XSEG
0000            415   ;--------------------------------------------------------
0000            416   ; external initialized ram data
0000            417   ;--------------------------------------------------------
0000            418            rseg R_IXSEG
0000            419            rseg R_HOME
0000            420            rseg R_GSINIT
0000            421            rseg R_CSEG
0000            422   ;--------------------------------------------------------
0000            423   ; Reset entry point and interrupt vectors
0000            424   ;--------------------------------------------------------
0000            425            CSEG at 0x0000
0000 020100     426            ljmp    _crt0
002B            427            CSEG at 0x002b
002B 020100     428            ljmp    _Timer2_ISR
002E            429   ;--------------------------------------------------------
002E            430   ; global & static initialisations
002E            431   ;--------------------------------------------------------
0000            432            rseg R_HOME
0000            433            rseg R_GSINIT
0000            434            rseg R_GSINIT
0000            435   ;--------------------------------------------------------
0000            436   ; data variables initialization
0000            437   ;--------------------------------------------------------
0000            438            rseg R_DINIT
0000            439   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:18: volatile  char pwm_count=0;
0000 752000     440            mov     _pwm_count,#0x00
0003            441   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:19: volatile  int mode = 0;
0003 E4         442            clr     a
0004 F5E0       443            mov     _mode,a
0006 F5E1       444            mov     (_mode + 1),a
0008            445   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:20: volatile  int pwm_both =0;
0008 E4         446            clr     a
0009 F5A0       447            mov     _pwm_both,a
000B F5A1       448            mov     (_pwm_both + 1),a
000D            449   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:21: volatile  int pwm_Left0 = 0; //p1.5
000D E4         450            clr     a
000E F560       451            mov     _pwm_Left0,a
0010 F561       452            mov     (_pwm_Left0 + 1),a
0012            453   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:22: volatile  int pwm_Left1 = 0; //p1.6
0012 E4         454            clr     a
0013 F520       455            mov     _pwm_Left1,a
0015 F521       456            mov     (_pwm_Left1 + 1),a
0017            457   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:23: volatile  int pwm_Right0 = 0; //p2.0
0017 E4         458            clr     a
0018 F5E0       459            mov     _pwm_Right0,a
001A F5E1       460            mov     (_pwm_Right0 + 1),a
001C            461   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:24: volatile  int pwm_Right1 = 0; //p2.1
001C E4         462            clr     a
001D F5A0       463            mov     _pwm_Right1,a
001F F5A1       464            mov     (_pwm_Right1 + 1),a
0021            465   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:25: volatile int direction = 0; // 1 for back 0 for forward
0021 E4         466            clr     a
0022 F560       467            mov     _direction,a
0024 F561       468            mov     (_direction + 1),a
0026            469            ; The linker places a 'ret' at the end of segment R_DINIT.
0026            470   ;--------------------------------------------------------
0026            471   ; code
0026            472   ;--------------------------------------------------------
0000            473            rseg R_CSEG
0000            474   ;------------------------------------------------------------
0000            475   ;Allocation info for local variables in function '_c51_external_startup'
0000            476   ;------------------------------------------------------------
0000            477   ;------------------------------------------------------------
0000            478   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:27: char _c51_external_startup (void)
0000            479   ;        -----------------------------------------
0000            480   ;         function _c51_external_startup
0000            481   ;        -----------------------------------------
0000            482   __c51_external_startup:
0000            483            using   0
0000            484   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:29: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     485            anl     _PCA0MD,#0xBF
0003            486   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:30: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     487            mov     _VDM0CN,#0x80
0006            488   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:31: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     489            mov     _RSTSRC,#0x06
0009            490   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:39: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     491            orl     _CLKSEL,#0x03
000C            492   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:43: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     493            orl     _OSCICN,#0x03
000F            494   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:46: SCON0 = 0x10;
000F 759810     495            mov     _SCON0,#0x10
0012            496   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:48: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     497            mov     _TH1,#0x30
0015            498   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:49: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     499            anl     _CKCON,#0xF4
0018            500   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:50: CKCON |=  0x08;
0018 438E08     501            orl     _CKCON,#0x08
001B            502   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:63: TL1 = TH1;      // Init Timer1
001B 858D8B     503            mov     _TL1,_TH1
001E            504   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:64: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     505            anl     _TMOD,#0x0F
0021            506   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:65: TMOD |=  0x20;
0021 438920     507            orl     _TMOD,#0x20
0024            508   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:66: TR1 = 1; // START Timer1
0024 D28E       509            setb    _TR1
0026            510   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:67: TI = 1;  // Indicate TX0 ready
0026 D299       511            setb    _TI
0028            512   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:70: P2MDOUT|=0b_0000_0011;
0028 43A603     513            orl     _P2MDOUT,#0x03
002B            514   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:71: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     515            orl     _P0MDOUT,#0x10
002E            516   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:72: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     517            mov     _XBR0,#0x01
0031            518   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:73: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     519            mov     _XBR1,#0x40
0034            520   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:76: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     521            mov     _TMR2CN,#0x00
0037            522   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:77: CKCON|=0b_0001_0000;
0037 438E10     523            orl     _CKCON,#0x10
003A            524   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:78: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     525            mov     _TMR2RL,#0x78
003D 75CBEC     526            mov     (_TMR2RL >> 8),#0xEC
0040            527   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:79: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     528            mov     _TMR2,#0xFF
0043 75CDFF     529            mov     (_TMR2 >> 8),#0xFF
0046            530   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:80: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       531            setb    _ET2
0048            532   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:81: TR2=1;         // Start Timer2
0048 D2CA       533            setb    _TR2
004A            534   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:83: EA=1; // Enable interrupts
004A D2AF       535            setb    _EA
004C            536   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:85: return 0;
004C 758200     537            mov     dpl,#0x00
004F 22         538            ret
0050            539   ;------------------------------------------------------------
0050            540   ;Allocation info for local variables in function 'Timer2_ISR'
0050            541   ;------------------------------------------------------------
0050            542   ;------------------------------------------------------------
0050            543   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:89: void Timer2_ISR (void) interrupt 5
0050            544   ;        -----------------------------------------
0050            545   ;         function Timer2_ISR
0050            546   ;        -----------------------------------------
0050            547   _Timer2_ISR:
0050 C0E0       548            push    acc
0052 C0F0       549            push    b
0054 C002       550            push    ar2
0056 C003       551            push    ar3
0058 C0D0       552            push    psw
005A 75D000     553            mov     psw,#0x00
005D            554   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:91: TF2H = 0; // Clear Timer2 interrupt flag
005D C2CF       555            clr     _TF2H
005F            556   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:93: pwm_count++;
005F 0520       557            inc     _pwm_count
0061            558   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:94: if(pwm_count>100) pwm_count=0;
0061 C3         559            clr     c
0062 74E4       560            mov     a,#(0x64 ^ 0x80)
0064 8520F0     561            mov     b,_pwm_count
0067 63F080     562            xrl     b,#0x80
006A 95F0       563            subb    a,b
006C 5001       564            jnc     L003002?
006E 752000     565            mov     _pwm_count,#0x00
0071            566   L003002?:
0071            567   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:97: MOTOR_LEFT0 = pwm_count > pwm_Left0 ? 0 : 1; //p1.5
0071 AA20       568            mov     r2,_pwm_count
0073 E520       569            mov     a,_pwm_count
0075 33         570            rlc     a
0076 95E0       571            subb    a,acc
0078 FB         572            mov     r3,a
0079 C3         573            clr     c
007A E560       574            mov     a,_pwm_Left0
007C 9A         575            subb    a,r2
007D E561       576            mov     a,(_pwm_Left0 + 1)
007F 6480       577            xrl     a,#0x80
0081 8BF0       578            mov     b,r3
0083 63F080     579            xrl     b,#0x80
0086 95F0       580            subb    a,b
0088 9258       581            mov  _Timer2_ISR_sloc0_1_0,c
008A B3         582            cpl     c
008B 9295       583            mov     _P1_5,c
008D            584   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:98: MOTOR_LEFT1 = pwm_count > pwm_Left1 ? 0 : 1; //p1.6
008D AA20       585            mov     r2,_pwm_count
008F E520       586            mov     a,_pwm_count
0091 33         587            rlc     a
0092 95E0       588            subb    a,acc
0094 FB         589            mov     r3,a
0095 C3         590            clr     c
0096 E520       591            mov     a,_pwm_Left1
0098 9A         592            subb    a,r2
0099 E521       593            mov     a,(_pwm_Left1 + 1)
009B 6480       594            xrl     a,#0x80
009D 8BF0       595            mov     b,r3
009F 63F080     596            xrl     b,#0x80
00A2 95F0       597            subb    a,b
00A4 9258       598            mov  _Timer2_ISR_sloc0_1_0,c
00A6 B3         599            cpl     c
00A7 9296       600            mov     _P1_6,c
00A9            601   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:99: MOTOR_RIGHT0 = pwm_count > pwm_Right0 ? 0 : 1; //p2.0
00A9 AA20       602            mov     r2,_pwm_count
00AB E520       603            mov     a,_pwm_count
00AD 33         604            rlc     a
00AE 95E0       605            subb    a,acc
00B0 FB         606            mov     r3,a
00B1 C3         607            clr     c
00B2 E5E0       608            mov     a,_pwm_Right0
00B4 9A         609            subb    a,r2
00B5 E5E1       610            mov     a,(_pwm_Right0 + 1)
00B7 6480       611            xrl     a,#0x80
00B9 8BF0       612            mov     b,r3
00BB 63F080     613            xrl     b,#0x80
00BE 95F0       614            subb    a,b
00C0 9258       615            mov  _Timer2_ISR_sloc0_1_0,c
00C2 B3         616            cpl     c
00C3 92A0       617            mov     _P2_0,c
00C5            618   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:100: MOTOR_RIGHT1 = pwm_count > pwm_Right1 ? 0 : 1; //p2.1
00C5 AA20       619            mov     r2,_pwm_count
00C7 E520       620            mov     a,_pwm_count
00C9 33         621            rlc     a
00CA 95E0       622            subb    a,acc
00CC FB         623            mov     r3,a
00CD C3         624            clr     c
00CE E5A0       625            mov     a,_pwm_Right1
00D0 9A         626            subb    a,r2
00D1 E5A1       627            mov     a,(_pwm_Right1 + 1)
00D3 6480       628            xrl     a,#0x80
00D5 8BF0       629            mov     b,r3
00D7 63F080     630            xrl     b,#0x80
00DA 95F0       631            subb    a,b
00DC 9258       632            mov  _Timer2_ISR_sloc0_1_0,c
00DE B3         633            cpl     c
00DF 92A1       634            mov     _P2_1,c
00E1 D0D0       635            pop     psw
00E3 D003       636            pop     ar3
00E5 D002       637            pop     ar2
00E7 D0F0       638            pop     b
00E9 D0E0       639            pop     acc
00EB 32         640            reti
00EC            641   ;        eliminated unneeded push/pop dpl
00EC            642   ;        eliminated unneeded push/pop dph
00EC            643   ;------------------------------------------------------------
00EC            644   ;Allocation info for local variables in function 'forward_backward'
00EC            645   ;------------------------------------------------------------
00EC            646   ;direction                 Allocated to registers r2 
00EC            647   ;------------------------------------------------------------
00EC            648   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:107: void forward_backward(unsigned char direction)
00EC            649   ;        -----------------------------------------
00EC            650   ;         function forward_backward
00EC            651   ;        -----------------------------------------
00EC            652   _forward_backward:
00EC            653   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:110: if (direction == 0) { //p2.1,1.6 on
00EC E582       654            mov     a,dpl
00EE FA         655            mov     r2,a
00EF 7001       656            jnz     L004004?
00F1            657   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:111: pwm_Left0 = pwm_Right0 = -1;
00F1 75E0FF     658            mov     _pwm_Right0,#0xFF
00F4 75E1FF     659            mov     (_pwm_Right0 + 1),#0xFF
00F7 7560FF     660            mov     _pwm_Left0,#0xFF
00FA 7561FF     661            mov     (_pwm_Left0 + 1),#0xFF
00FD            662   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:112: pwm_Left1 = pwm_Right1 = pwm_both;  //MOTOR_LEFT1 = MOTOR_RIGHT1 = pwm_both;
00FD 85A0A0     663            mov     _pwm_Right1,_pwm_both
0100 85A1A1     664            mov     (_pwm_Right1 + 1),(_pwm_both + 1)
0103 85A020     665            mov     _pwm_Left1,_pwm_both
0106 85A121     666            mov     (_pwm_Left1 + 1),(_pwm_both + 1)
0109 22         667            ret
010A            668   L004004?:
010A            669   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:115: else if (direction == 1) { //p2.0,1.5 on
010A BA0158     670            cjne    r2,#0x01,L004006?
010D            671   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:116: pwm_Left1 = pwm_Right1 = -1;
010D 75A0FF     672            mov     _pwm_Right1,#0xFF
0110 75A1FF     673            mov     (_pwm_Right1 + 1),#0xFF
0113 7520FF     674            mov     _pwm_Left1,#0xFF
0116 7521FF     675            mov     (_pwm_Left1 + 1),#0xFF
0119            676   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:117: pwm_Left0 = pwm_Right0 = pwm_both; 
0119 85A0E0     677            mov     _pwm_Right0,_pwm_both
011C 85A1E1     678            mov     (_pwm_Right0 + 1),(_pwm_both + 1)
011F 85A060     679            mov     _pwm_Left0,_pwm_both
0122 85A161     680            mov     (_pwm_Left0 + 1),(_pwm_both + 1)
0125            681   L004006?:
0125 22         682            ret
0126            683   ;------------------------------------------------------------
0126            684   ;Allocation info for local variables in function 'main'
0126            685   ;------------------------------------------------------------
0126            686   ;------------------------------------------------------------
0126            687   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:125: void main (void)
0126            688   ;        -----------------------------------------
0126            689   ;         function main
0126            690   ;        -----------------------------------------
0126            691   _main:
0126            692   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:128: MOTOR_LEFT0 =0;
0126 C295       693            clr     _P1_5
0128            694   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:129: MOTOR_LEFT1 =0;
0128 C296       695            clr     _P1_6
012A            696   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:130: MOTOR_RIGHT0 =0;
012A C2A0       697            clr     _P2_0
012C            698   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:131: MOTOR_RIGHT1 =0;
012C C2A1       699            clr     _P2_1
012E            700   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:134: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
012E 7498       701            mov     a,#__str_0
0130 C0E0       702            push    acc
0132 749A       703            mov     a,#(__str_0 >> 8)
0134 C0E0       704            push    acc
0136 7480       705            mov     a,#0x80
0138 C0E0       706            push    acc
013A 120100     707            lcall   _printf
013D 1581       708            dec     sp
013F 1581       709            dec     sp
0141 1581       710            dec     sp
0143            711   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:136: "Check pins P2.1 and P2.2 with the oscilloscope.\r\n");
0143 7458       712            mov     a,#__str_1
0145 C0E0       713            push    acc
0147 749B       714            mov     a,#(__str_1 >> 8)
0149 C0E0       715            push    acc
014B 7480       716            mov     a,#0x80
014D C0E0       717            push    acc
014F 120100     718            lcall   _printf
0152 1581       719            dec     sp
0154 1581       720            dec     sp
0156 1581       721            dec     sp
0158            722   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:137: printf("Please enter motors mode 1-6\n");
0158 7498       723            mov     a,#__str_2
015A C0E0       724            push    acc
015C 749B       725            mov     a,#(__str_2 >> 8)
015E C0E0       726            push    acc
0160 7480       727            mov     a,#0x80
0162 C0E0       728            push    acc
0164 120100     729            lcall   _printf
0167 1581       730            dec     sp
0169 1581       731            dec     sp
016B 1581       732            dec     sp
016D            733   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:138: scanf("%d \n",&mode);
016D 74E0       734            mov     a,#_mode
016F C0E0       735            push    acc
0171 7413       736            mov     a,#(_mode >> 8)
0173 C0E0       737            push    acc
0175 7440       738            mov     a,#0x40
0177 C0E0       739            push    acc
0179 74D8       740            mov     a,#__str_3
017B C0E0       741            push    acc
017D 749B       742            mov     a,#(__str_3 >> 8)
017F C0E0       743            push    acc
0181 7480       744            mov     a,#0x80
0183 C0E0       745            push    acc
0185 120100     746            lcall   _scanf
0188 E581       747            mov     a,sp
018A 24FA       748            add     a,#0xfa
018C F581       749            mov     sp,a
018E            750   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:139: if(mode == 1) {printf("Enter pwm and direction\n"); scanf("%d %d",&pwm_both, &direction);forward_backward(direction); }
018E 7401       751            mov     a,#0x01
0190 B5E058     752            cjne    a,_mode,L005010?
0193 E4         753            clr     a
0194 B5E158     754            cjne    a,(_mode + 1),L005010?
0197 8001       755            sjmp    L005011?
0199            756   L005010?:
0199 8001       757            sjmp    L005004?
019B            758   L005011?:
019B 7418       759            mov     a,#__str_4
019D C0E0       760            push    acc
019F 749D       761            mov     a,#(__str_4 >> 8)
01A1 C0E0       762            push    acc
01A3 7480       763            mov     a,#0x80
01A5 C0E0       764            push    acc
01A7 120100     765            lcall   _printf
01AA 1581       766            dec     sp
01AC 1581       767            dec     sp
01AE 1581       768            dec     sp
01B0 7460       769            mov     a,#_direction
01B2 C0E0       770            push    acc
01B4 7412       771            mov     a,#(_direction >> 8)
01B6 C0E0       772            push    acc
01B8 7440       773            mov     a,#0x40
01BA C0E0       774            push    acc
01BC 74A0       775            mov     a,#_pwm_both
01BE C0E0       776            push    acc
01C0 7413       777            mov     a,#(_pwm_both >> 8)
01C2 C0E0       778            push    acc
01C4 7440       779            mov     a,#0x40
01C6 C0E0       780            push    acc
01C8 7458       781            mov     a,#__str_5
01CA C0E0       782            push    acc
01CC 749D       783            mov     a,#(__str_5 >> 8)
01CE C0E0       784            push    acc
01D0 7480       785            mov     a,#0x80
01D2 C0E0       786            push    acc
01D4 120100     787            lcall   _scanf
01D7 E581       788            mov     a,sp
01D9 24F7       789            add     a,#0xf7
01DB F581       790            mov     sp,a
01DD 856082     791            mov     dpl,_direction
01E0 120100     792            lcall   _forward_backward
01E3            793   ;        C:\Users\Larry\Documents\GitHub\ELEC291P2\src\motors.c:142: while(1)
01E3            794   L005004?:
01E3 8001       795            sjmp    L005004?
01E5            796            rseg R_CSEG
01E5            797   
0000            798            rseg R_XINIT
0000            799   
0000            800            rseg R_CONST
0000            801   __str_0:
0000 1B         802            db 0x1B
0001 5B324A     803            db '[2J'
0004 00         804            db 0x00
0005            805   __str_1:
0005 53717561   806            db 'Square wave generator for the F38x.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204633
     38782E
0028 0D         807            db 0x0D
0029 0A         808            db 0x0A
002A 43686563   809            db 'Check pins P2.1 and P2.'
     6B207069
     6E732050
     322E3120
     616E6420
     50322E
0041 32207769   810            db '2 with the oscilloscope.'
     74682074
     6865206F
     7363696C
     6C6F7363
     6F70652E
0059 0D         811            db 0x0D
005A 0A         812            db 0x0A
005B 00         813            db 0x00
005C            814   __str_2:
005C 506C6561   815            db 'Please enter motors mode 1-6'
     73652065
     6E746572
     206D6F74
     6F727320
     6D6F6465
     20312D36
0078 0A         816            db 0x0A
0079 00         817            db 0x00
007A            818   __str_3:
007A 256420     819            db '%d '
007D 0A         820            db 0x0A
007E 00         821            db 0x00
007F            822   __str_4:
007F 456E7465   823            db 'Enter pwm and direction'
     72207077
     6D20616E
     64206469
     72656374
     696F6E
0096 0A         824            db 0x0A
0097 00         825            db 0x00
0098            826   __str_5:
0098 25642025   827            db '%d %d'
     64
009D 00         828            db 0x00
009E            829   
002E            830            CSEG
002E            831   
002E            832   end
