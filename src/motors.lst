0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Apr 02 00:51:45 2017
0000              5   ;--------------------------------------------------------
                  5   $name motors
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _uturn
0000             30            public _turncar
0000             31            public _stopcar
0000             32            public _linetrack
0000             33            public _readData
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _forward_backward
0000             39            public _Timer2_ISR
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _currentstate
0000             44            public _currentcmd
0000             45            public _direction
0000             46            public _pwm_Right1
0000             47            public _pwm_Right0
0000             48            public _pwm_Left1
0000             49            public _pwm_Left0
0000             50            public _pwm_both
0000             51            public _mode
0000             52            public _pwm_count
0000             53   ;--------------------------------------------------------
0000             54   ; Special Function Registers
0000             55   ;--------------------------------------------------------
0000             56   _P0             DATA 0x80
0000             57   _SP             DATA 0x81
0000             58   _DPL            DATA 0x82
0000             59   _DPH            DATA 0x83
0000             60   _EMI0TC         DATA 0x84
0000             61   _EMI0CF         DATA 0x85
0000             62   _OSCLCN         DATA 0x86
0000             63   _PCON           DATA 0x87
0000             64   _TCON           DATA 0x88
0000             65   _TMOD           DATA 0x89
0000             66   _TL0            DATA 0x8a
0000             67   _TL1            DATA 0x8b
0000             68   _TH0            DATA 0x8c
0000             69   _TH1            DATA 0x8d
0000             70   _CKCON          DATA 0x8e
0000             71   _PSCTL          DATA 0x8f
0000             72   _P1             DATA 0x90
0000             73   _TMR3CN         DATA 0x91
0000             74   _TMR4CN         DATA 0x91
0000             75   _TMR3RLL        DATA 0x92
0000             76   _TMR4RLL        DATA 0x92
0000             77   _TMR3RLH        DATA 0x93
0000             78   _TMR4RLH        DATA 0x93
0000             79   _TMR3L          DATA 0x94
0000             80   _TMR4L          DATA 0x94
0000             81   _TMR3H          DATA 0x95
0000             82   _TMR4H          DATA 0x95
0000             83   _USB0ADR        DATA 0x96
0000             84   _USB0DAT        DATA 0x97
0000             85   _SCON           DATA 0x98
0000             86   _SCON0          DATA 0x98
0000             87   _SBUF           DATA 0x99
0000             88   _SBUF0          DATA 0x99
0000             89   _CPT1CN         DATA 0x9a
0000             90   _CPT0CN         DATA 0x9b
0000             91   _CPT1MD         DATA 0x9c
0000             92   _CPT0MD         DATA 0x9d
0000             93   _CPT1MX         DATA 0x9e
0000             94   _CPT0MX         DATA 0x9f
0000             95   _P2             DATA 0xa0
0000             96   _SPI0CFG        DATA 0xa1
0000             97   _SPI0CKR        DATA 0xa2
0000             98   _SPI0DAT        DATA 0xa3
0000             99   _P0MDOUT        DATA 0xa4
0000            100   _P1MDOUT        DATA 0xa5
0000            101   _P2MDOUT        DATA 0xa6
0000            102   _P3MDOUT        DATA 0xa7
0000            103   _IE             DATA 0xa8
0000            104   _CLKSEL         DATA 0xa9
0000            105   _EMI0CN         DATA 0xaa
0000            106   __XPAGE         DATA 0xaa
0000            107   _SBCON1         DATA 0xac
0000            108   _P4MDOUT        DATA 0xae
0000            109   _PFE0CN         DATA 0xaf
0000            110   _P3             DATA 0xb0
0000            111   _OSCXCN         DATA 0xb1
0000            112   _OSCICN         DATA 0xb2
0000            113   _OSCICL         DATA 0xb3
0000            114   _SBRLL1         DATA 0xb4
0000            115   _SBRLH1         DATA 0xb5
0000            116   _FLSCL          DATA 0xb6
0000            117   _FLKEY          DATA 0xb7
0000            118   _IP             DATA 0xb8
0000            119   _CLKMUL         DATA 0xb9
0000            120   _SMBTC          DATA 0xb9
0000            121   _AMX0N          DATA 0xba
0000            122   _AMX0P          DATA 0xbb
0000            123   _ADC0CF         DATA 0xbc
0000            124   _ADC0L          DATA 0xbd
0000            125   _ADC0H          DATA 0xbe
0000            126   _SFRPAGE        DATA 0xbf
0000            127   _SMB0CN         DATA 0xc0
0000            128   _SMB1CN         DATA 0xc0
0000            129   _SMB0CF         DATA 0xc1
0000            130   _SMB1CF         DATA 0xc1
0000            131   _SMB0DAT        DATA 0xc2
0000            132   _SMB1DAT        DATA 0xc2
0000            133   _ADC0GTL        DATA 0xc3
0000            134   _ADC0GTH        DATA 0xc4
0000            135   _ADC0LTL        DATA 0xc5
0000            136   _ADC0LTH        DATA 0xc6
0000            137   _P4             DATA 0xc7
0000            138   _TMR2CN         DATA 0xc8
0000            139   _TMR5CN         DATA 0xc8
0000            140   _REG01CN        DATA 0xc9
0000            141   _TMR2RLL        DATA 0xca
0000            142   _TMR5RLL        DATA 0xca
0000            143   _TMR2RLH        DATA 0xcb
0000            144   _TMR5RLH        DATA 0xcb
0000            145   _TMR2L          DATA 0xcc
0000            146   _TMR5L          DATA 0xcc
0000            147   _TMR2H          DATA 0xcd
0000            148   _TMR5H          DATA 0xcd
0000            149   _SMB0ADM        DATA 0xce
0000            150   _SMB1ADM        DATA 0xce
0000            151   _SMB0ADR        DATA 0xcf
0000            152   _SMB1ADR        DATA 0xcf
0000            153   _PSW            DATA 0xd0
0000            154   _REF0CN         DATA 0xd1
0000            155   _SCON1          DATA 0xd2
0000            156   _SBUF1          DATA 0xd3
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2SKIP         DATA 0xd6
0000            160   _USB0XCN        DATA 0xd7
0000            161   _PCA0CN         DATA 0xd8
0000            162   _PCA0MD         DATA 0xd9
0000            163   _PCA0CPM0       DATA 0xda
0000            164   _PCA0CPM1       DATA 0xdb
0000            165   _PCA0CPM2       DATA 0xdc
0000            166   _PCA0CPM3       DATA 0xdd
0000            167   _PCA0CPM4       DATA 0xde
0000            168   _P3SKIP         DATA 0xdf
0000            169   _ACC            DATA 0xe0
0000            170   _XBR0           DATA 0xe1
0000            171   _XBR1           DATA 0xe2
0000            172   _XBR2           DATA 0xe3
0000            173   _IT01CF         DATA 0xe4
0000            174   _CKCON1         DATA 0xe4
0000            175   _SMOD1          DATA 0xe5
0000            176   _EIE1           DATA 0xe6
0000            177   _EIE2           DATA 0xe7
0000            178   _ADC0CN         DATA 0xe8
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPH1       DATA 0xea
0000            181   _PCA0CPL2       DATA 0xeb
0000            182   _PCA0CPH2       DATA 0xec
0000            183   _PCA0CPL3       DATA 0xed
0000            184   _PCA0CPH3       DATA 0xee
0000            185   _RSTSRC         DATA 0xef
0000            186   _B              DATA 0xf0
0000            187   _P0MDIN         DATA 0xf1
0000            188   _P1MDIN         DATA 0xf2
0000            189   _P2MDIN         DATA 0xf3
0000            190   _P3MDIN         DATA 0xf4
0000            191   _P4MDIN         DATA 0xf5
0000            192   _EIP1           DATA 0xf6
0000            193   _EIP2           DATA 0xf7
0000            194   _SPI0CN         DATA 0xf8
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0H          DATA 0xfa
0000            197   _PCA0CPL0       DATA 0xfb
0000            198   _PCA0CPH0       DATA 0xfc
0000            199   _PCA0CPL4       DATA 0xfd
0000            200   _PCA0CPH4       DATA 0xfe
0000            201   _VDM0CN         DATA 0xff
0000            202   _DPTR           DATA 0x8382
0000            203   _TMR2RL         DATA 0xcbca
0000            204   _TMR3RL         DATA 0x9392
0000            205   _TMR4RL         DATA 0x9392
0000            206   _TMR5RL         DATA 0xcbca
0000            207   _TMR2           DATA 0xcdcc
0000            208   _TMR3           DATA 0x9594
0000            209   _TMR4           DATA 0x9594
0000            210   _TMR5           DATA 0xcdcc
0000            211   _SBRL1          DATA 0xb5b4
0000            212   _ADC0           DATA 0xbebd
0000            213   _ADC0GT         DATA 0xc4c3
0000            214   _ADC0LT         DATA 0xc6c5
0000            215   _PCA0           DATA 0xfaf9
0000            216   _PCA0CP1        DATA 0xeae9
0000            217   _PCA0CP2        DATA 0xeceb
0000            218   _PCA0CP3        DATA 0xeeed
0000            219   _PCA0CP0        DATA 0xfcfb
0000            220   _PCA0CP4        DATA 0xfefd
0000            221   ;--------------------------------------------------------
0000            222   ; special function bits
0000            223   ;--------------------------------------------------------
0000            224   _P0_0           BIT 0x80
0000            225   _P0_1           BIT 0x81
0000            226   _P0_2           BIT 0x82
0000            227   _P0_3           BIT 0x83
0000            228   _P0_4           BIT 0x84
0000            229   _P0_5           BIT 0x85
0000            230   _P0_6           BIT 0x86
0000            231   _P0_7           BIT 0x87
0000            232   _TF1            BIT 0x8f
0000            233   _TR1            BIT 0x8e
0000            234   _TF0            BIT 0x8d
0000            235   _TR0            BIT 0x8c
0000            236   _IE1            BIT 0x8b
0000            237   _IT1            BIT 0x8a
0000            238   _IE0            BIT 0x89
0000            239   _IT0            BIT 0x88
0000            240   _P1_0           BIT 0x90
0000            241   _P1_1           BIT 0x91
0000            242   _P1_2           BIT 0x92
0000            243   _P1_3           BIT 0x93
0000            244   _P1_4           BIT 0x94
0000            245   _P1_5           BIT 0x95
0000            246   _P1_6           BIT 0x96
0000            247   _P1_7           BIT 0x97
0000            248   _S0MODE         BIT 0x9f
0000            249   _SCON0_6        BIT 0x9e
0000            250   _MCE0           BIT 0x9d
0000            251   _REN0           BIT 0x9c
0000            252   _TB80           BIT 0x9b
0000            253   _RB80           BIT 0x9a
0000            254   _TI0            BIT 0x99
0000            255   _RI0            BIT 0x98
0000            256   _SCON_6         BIT 0x9e
0000            257   _MCE            BIT 0x9d
0000            258   _REN            BIT 0x9c
0000            259   _TB8            BIT 0x9b
0000            260   _RB8            BIT 0x9a
0000            261   _TI             BIT 0x99
0000            262   _RI             BIT 0x98
0000            263   _P2_0           BIT 0xa0
0000            264   _P2_1           BIT 0xa1
0000            265   _P2_2           BIT 0xa2
0000            266   _P2_3           BIT 0xa3
0000            267   _P2_4           BIT 0xa4
0000            268   _P2_5           BIT 0xa5
0000            269   _P2_6           BIT 0xa6
0000            270   _P2_7           BIT 0xa7
0000            271   _EA             BIT 0xaf
0000            272   _ESPI0          BIT 0xae
0000            273   _ET2            BIT 0xad
0000            274   _ES0            BIT 0xac
0000            275   _ET1            BIT 0xab
0000            276   _EX1            BIT 0xaa
0000            277   _ET0            BIT 0xa9
0000            278   _EX0            BIT 0xa8
0000            279   _P3_0           BIT 0xb0
0000            280   _P3_1           BIT 0xb1
0000            281   _P3_2           BIT 0xb2
0000            282   _P3_3           BIT 0xb3
0000            283   _P3_4           BIT 0xb4
0000            284   _P3_5           BIT 0xb5
0000            285   _P3_6           BIT 0xb6
0000            286   _P3_7           BIT 0xb7
0000            287   _IP_7           BIT 0xbf
0000            288   _PSPI0          BIT 0xbe
0000            289   _PT2            BIT 0xbd
0000            290   _PS0            BIT 0xbc
0000            291   _PT1            BIT 0xbb
0000            292   _PX1            BIT 0xba
0000            293   _PT0            BIT 0xb9
0000            294   _PX0            BIT 0xb8
0000            295   _MASTER0        BIT 0xc7
0000            296   _TXMODE0        BIT 0xc6
0000            297   _STA0           BIT 0xc5
0000            298   _STO0           BIT 0xc4
0000            299   _ACKRQ0         BIT 0xc3
0000            300   _ARBLOST0       BIT 0xc2
0000            301   _ACK0           BIT 0xc1
0000            302   _SI0            BIT 0xc0
0000            303   _MASTER1        BIT 0xc7
0000            304   _TXMODE1        BIT 0xc6
0000            305   _STA1           BIT 0xc5
0000            306   _STO1           BIT 0xc4
0000            307   _ACKRQ1         BIT 0xc3
0000            308   _ARBLOST1       BIT 0xc2
0000            309   _ACK1           BIT 0xc1
0000            310   _SI1            BIT 0xc0
0000            311   _TF2            BIT 0xcf
0000            312   _TF2H           BIT 0xcf
0000            313   _TF2L           BIT 0xce
0000            314   _TF2LEN         BIT 0xcd
0000            315   _TF2CEN         BIT 0xcc
0000            316   _T2SPLIT        BIT 0xcb
0000            317   _TR2            BIT 0xca
0000            318   _T2CSS          BIT 0xc9
0000            319   _T2XCLK         BIT 0xc8
0000            320   _TF5H           BIT 0xcf
0000            321   _TF5L           BIT 0xce
0000            322   _TF5LEN         BIT 0xcd
0000            323   _TMR5CN_4       BIT 0xcc
0000            324   _T5SPLIT        BIT 0xcb
0000            325   _TR5            BIT 0xca
0000            326   _TMR5CN_1       BIT 0xc9
0000            327   _T5XCLK         BIT 0xc8
0000            328   _CY             BIT 0xd7
0000            329   _AC             BIT 0xd6
0000            330   _F0             BIT 0xd5
0000            331   _RS1            BIT 0xd4
0000            332   _RS0            BIT 0xd3
0000            333   _OV             BIT 0xd2
0000            334   _F1             BIT 0xd1
0000            335   _PARITY         BIT 0xd0
0000            336   _CF             BIT 0xdf
0000            337   _CR             BIT 0xde
0000            338   _PCA0CN_5       BIT 0xde
0000            339   _CCF4           BIT 0xdc
0000            340   _CCF3           BIT 0xdb
0000            341   _CCF2           BIT 0xda
0000            342   _CCF1           BIT 0xd9
0000            343   _CCF0           BIT 0xd8
0000            344   _ACC_7          BIT 0xe7
0000            345   _ACC_6          BIT 0xe6
0000            346   _ACC_5          BIT 0xe5
0000            347   _ACC_4          BIT 0xe4
0000            348   _ACC_3          BIT 0xe3
0000            349   _ACC_2          BIT 0xe2
0000            350   _ACC_1          BIT 0xe1
0000            351   _ACC_0          BIT 0xe0
0000            352   _AD0EN          BIT 0xef
0000            353   _AD0TM          BIT 0xee
0000            354   _AD0INT         BIT 0xed
0000            355   _AD0BUSY        BIT 0xec
0000            356   _AD0WINT        BIT 0xeb
0000            357   _AD0CM2         BIT 0xea
0000            358   _AD0CM1         BIT 0xe9
0000            359   _AD0CM0         BIT 0xe8
0000            360   _B_7            BIT 0xf7
0000            361   _B_6            BIT 0xf6
0000            362   _B_5            BIT 0xf5
0000            363   _B_4            BIT 0xf4
0000            364   _B_3            BIT 0xf3
0000            365   _B_2            BIT 0xf2
0000            366   _B_1            BIT 0xf1
0000            367   _B_0            BIT 0xf0
0000            368   _SPIF           BIT 0xff
0000            369   _WCOL           BIT 0xfe
0000            370   _MODF           BIT 0xfd
0000            371   _RXOVRN         BIT 0xfc
0000            372   _NSSMD1         BIT 0xfb
0000            373   _NSSMD0         BIT 0xfa
0000            374   _TXBMT          BIT 0xf9
0000            375   _SPIEN          BIT 0xf8
0000            376   ;--------------------------------------------------------
0000            377   ; overlayable register banks
0000            378   ;--------------------------------------------------------
0000            379            rbank0 segment data overlay
0000            380   ;--------------------------------------------------------
0000            381   ; internal ram data
0000            382   ;--------------------------------------------------------
0000            383            rseg R_DSEG
0000            384   _pwm_count:
0000            385            ds 1
0001            386   _mode:
0001            387            ds 1
0002            388   _pwm_both:
0002            389            ds 1
0003            390   _pwm_Left0:
0003            391            ds 1
0004            392   _pwm_Left1:
0004            393            ds 1
0005            394   _pwm_Right0:
0005            395            ds 1
0006            396   _pwm_Right1:
0006            397            ds 1
0007            398   _direction:
0007            399            ds 1
0008            400   _currentcmd:
0008            401            ds 1
0009            402   _currentstate:
0009            403            ds 1
000A            404   _linetrack_forwardbackward_1_83:
000A            405            ds 2
000C            406   _linetrack_vleft_1_84:
000C            407            ds 4
0010            408   _linetrack_vright_1_84:
0010            409            ds 4
0014            410   _linetrack_sloc0_1_0:
0014            411            ds 4
0018            412   _turncar_vleft_1_91:
0018            413            ds 4
001C            414   _turncar_vright_1_91:
001C            415            ds 4
0020            416   _uturn_vleft_1_96:
0020            417            ds 4
0024            418   _uturn_vright_1_96:
0024            419            ds 4
0028            420   ;--------------------------------------------------------
0028            421   ; overlayable items in internal ram 
0028            422   ;--------------------------------------------------------
0000            423            rseg    R_OSEG
0000            424            rseg    R_OSEG
0000            425            rseg    R_OSEG
0000            426   _InitPinADC_PARM_2:
0000            427            ds 1
0001            428            rseg    R_OSEG
0001            429   ;--------------------------------------------------------
0001            430   ; indirectly addressable internal ram data
0001            431   ;--------------------------------------------------------
0000            432            rseg R_ISEG
0000            433   ;--------------------------------------------------------
0000            434   ; absolute internal ram data
0000            435   ;--------------------------------------------------------
0000            436            DSEG
0000            437   ;--------------------------------------------------------
0000            438   ; bit data
0000            439   ;--------------------------------------------------------
0000            440            rseg R_BSEG
0000            441   _Timer2_ISR_sloc0_1_0:
0000            442            DBIT    1
0001            443   ;--------------------------------------------------------
0001            444   ; paged external ram data
0001            445   ;--------------------------------------------------------
0000            446            rseg R_PSEG
0000            447   ;--------------------------------------------------------
0000            448   ; external ram data
0000            449   ;--------------------------------------------------------
0000            450            rseg R_XSEG
0000            451   ;--------------------------------------------------------
0000            452   ; absolute external ram data
0000            453   ;--------------------------------------------------------
0000            454            XSEG
0000            455   ;--------------------------------------------------------
0000            456   ; external initialized ram data
0000            457   ;--------------------------------------------------------
0000            458            rseg R_IXSEG
0000            459            rseg R_HOME
0000            460            rseg R_GSINIT
0000            461            rseg R_CSEG
0000            462   ;--------------------------------------------------------
0000            463   ; Reset entry point and interrupt vectors
0000            464   ;--------------------------------------------------------
0000            465            CSEG at 0x0000
0000 020100     466            ljmp    _crt0
002B            467            CSEG at 0x002b
002B 020100     468            ljmp    _Timer2_ISR
002E            469   ;--------------------------------------------------------
002E            470   ; global & static initialisations
002E            471   ;--------------------------------------------------------
0000            472            rseg R_HOME
0000            473            rseg R_GSINIT
0000            474            rseg R_GSINIT
0000            475   ;--------------------------------------------------------
0000            476   ; data variables initialization
0000            477   ;--------------------------------------------------------
0000            478            rseg R_DINIT
0000            479   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:22: volatile  char pwm_count=0;
0000 75C000     480            mov     _pwm_count,#0x00
0003            481   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:23: volatile  char mode = 0;
0003 758000     482            mov     _mode,#0x00
0006            483   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:24: volatile  char pwm_both =0;
0006 754000     484            mov     _pwm_both,#0x00
0009            485   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:25: volatile  char pwm_Left0 = 0; //p1.5
0009 750000     486            mov     _pwm_Left0,#0x00
000C            487   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:26: volatile  char pwm_Left1 = 0; //p1.6
000C 75C000     488            mov     _pwm_Left1,#0x00
000F            489   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:27: volatile  char pwm_Right0 = 0; //p2.0
000F 758000     490            mov     _pwm_Right0,#0x00
0012            491   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:28: volatile  char pwm_Right1 = 0; //p2.1
0012 754000     492            mov     _pwm_Right1,#0x00
0015            493   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:29: volatile  char direction = 0; // 1 for back 0 for forward
0015 750000     494            mov     _direction,#0x00
0018            495   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:31: volatile  char currentcmd = 0;
0018 75C000     496            mov     _currentcmd,#0x00
001B            497   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:32: volatile  char currentstate = 1;
001B 758001     498            mov     _currentstate,#0x01
001E            499            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            500   ;--------------------------------------------------------
001E            501   ; code
001E            502   ;--------------------------------------------------------
0000            503            rseg R_CSEG
0000            504   ;------------------------------------------------------------
0000            505   ;Allocation info for local variables in function '_c51_external_startup'
0000            506   ;------------------------------------------------------------
0000            507   ;------------------------------------------------------------
0000            508   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:36: char _c51_external_startup (void)
0000            509   ;        -----------------------------------------
0000            510   ;         function _c51_external_startup
0000            511   ;        -----------------------------------------
0000            512   __c51_external_startup:
0000            513            using   0
0000            514   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:38: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     515            anl     _PCA0MD,#0xBF
0003            516   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:39: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     517            mov     _VDM0CN,#0x80
0006            518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:40: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     519            mov     _RSTSRC,#0x06
0009            520   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:48: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     521            orl     _CLKSEL,#0x03
000C            522   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:52: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     523            orl     _OSCICN,#0x03
000F            524   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:55: SCON0 = 0x10;
000F 759810     525            mov     _SCON0,#0x10
0012            526   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:57: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     527            mov     _TH1,#0x30
0015            528   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:58: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     529            anl     _CKCON,#0xF4
0018            530   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:59: CKCON |=  0x08;
0018 438E08     531            orl     _CKCON,#0x08
001B            532   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:72: TL1 = TH1;      // Init Timer1
001B 858D8B     533            mov     _TL1,_TH1
001E            534   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:73: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     535            anl     _TMOD,#0x0F
0021            536   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:74: TMOD |=  0x20;
0021 438920     537            orl     _TMOD,#0x20
0024            538   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:75: TR1 = 1; // START Timer1
0024 D28E       539            setb    _TR1
0026            540   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:76: TI = 1;  // Indicate TX0 ready
0026 D299       541            setb    _TI
0028            542   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:79: P2MDOUT|=0b_0000_0011;
0028 43A603     543            orl     _P2MDOUT,#0x03
002B            544   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:80: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     545            orl     _P0MDOUT,#0x10
002E            546   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:81: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     547            mov     _XBR0,#0x01
0031            548   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:82: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     549            mov     _XBR1,#0x40
0034            550   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:85: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     551            mov     _TMR2CN,#0x00
0037            552   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:86: CKCON|=0b_0001_0000;
0037 438E10     553            orl     _CKCON,#0x10
003A            554   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:87: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     555            mov     _TMR2RL,#0x78
003D 75CBEC     556            mov     (_TMR2RL >> 8),#0xEC
0040            557   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:88: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     558            mov     _TMR2,#0xFF
0043 75CDFF     559            mov     (_TMR2 >> 8),#0xFF
0046            560   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:89: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       561            setb    _ET2
0048            562   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:90: TR2=1;         // Start Timer2
0048 D2CA       563            setb    _TR2
004A            564   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:92: EA=1; // Enable interrupts
004A D2AF       565            setb    _EA
004C            566   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:94: return 0;
004C 758200     567            mov     dpl,#0x00
004F 22         568            ret
0050            569   ;------------------------------------------------------------
0050            570   ;Allocation info for local variables in function 'Timer3us'
0050            571   ;------------------------------------------------------------
0050            572   ;us                        Allocated to registers r2 
0050            573   ;i                         Allocated to registers r3 
0050            574   ;------------------------------------------------------------
0050            575   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:98: void Timer3us(unsigned char us)
0050            576   ;        -----------------------------------------
0050            577   ;         function Timer3us
0050            578   ;        -----------------------------------------
0050            579   _Timer3us:
0050 AA82       580            mov     r2,dpl
0052            581   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:103: CKCON|=0b_0100_0000;
0052 438E40     582            orl     _CKCON,#0x40
0055            583   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:105: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0055 7592D0     584            mov     _TMR3RL,#0xD0
0058 7593FF     585            mov     (_TMR3RL >> 8),#0xFF
005B            586   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:106: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005B 859294     587            mov     _TMR3,_TMR3RL
005E 859395     588            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0061            589   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:108: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0061 759104     590            mov     _TMR3CN,#0x04
0064            591   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: for (i = 0; i < us; i++)       // Count <us> overflows
0064 7B00       592            mov     r3,#0x00
0066            593   L003004?:
0066 C3         594            clr     c
0067 EB         595            mov     a,r3
0068 9A         596            subb    a,r2
0069 5001       597            jnc     L003007?
006B            598   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:111: while (!(TMR3CN & 0x80));  // Wait for overflow
006B            599   L003001?:
006B E591       600            mov     a,_TMR3CN
006D 30E750     601            jnb     acc.7,L003001?
0070            602   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:112: TMR3CN &= ~(0x80);         // Clear overflow indicator
0070 53917F     603            anl     _TMR3CN,#0x7F
0073            604   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: for (i = 0; i < us; i++)       // Count <us> overflows
0073 0B         605            inc     r3
0074 8001       606            sjmp    L003004?
0076            607   L003007?:
0076            608   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:114: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0076 759100     609            mov     _TMR3CN,#0x00
0079 22         610            ret
007A            611   ;------------------------------------------------------------
007A            612   ;Allocation info for local variables in function 'waitms'
007A            613   ;------------------------------------------------------------
007A            614   ;ms                        Allocated to registers r2 r3 
007A            615   ;j                         Allocated to registers r2 r3 
007A            616   ;------------------------------------------------------------
007A            617   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:117: void waitms (unsigned int ms)
007A            618   ;        -----------------------------------------
007A            619   ;         function waitms
007A            620   ;        -----------------------------------------
007A            621   _waitms:
007A AA82       622            mov     r2,dpl
007C AB83       623            mov     r3,dph
007E            624   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: for(j=ms; j!=0; j--)
007E            625   L004001?:
007E BA0050     626            cjne    r2,#0x00,L004010?
0081 BB0050     627            cjne    r3,#0x00,L004010?
0084 22         628            ret
0085            629   L004010?:
0085            630   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:122: Timer3us(249);
0085 7582F9     631            mov     dpl,#0xF9
0088 C002       632            push    ar2
008A C003       633            push    ar3
008C 120100     634            lcall   _Timer3us
008F            635   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:123: Timer3us(249);
008F 7582F9     636            mov     dpl,#0xF9
0092 120100     637            lcall   _Timer3us
0095            638   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:124: Timer3us(249);
0095 7582F9     639            mov     dpl,#0xF9
0098 120100     640            lcall   _Timer3us
009B            641   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:125: Timer3us(250);
009B 7582FA     642            mov     dpl,#0xFA
009E 120100     643            lcall   _Timer3us
00A1 D003       644            pop     ar3
00A3 D002       645            pop     ar2
00A5            646   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: for(j=ms; j!=0; j--)
00A5 1A         647            dec     r2
00A6 BAFF90     648            cjne    r2,#0xff,L004011?
00A9 1B         649            dec     r3
00AA            650   L004011?:
00AA 8001       651            sjmp    L004001?
00AC            652   ;------------------------------------------------------------
00AC            653   ;Allocation info for local variables in function 'Timer2_ISR'
00AC            654   ;------------------------------------------------------------
00AC            655   ;------------------------------------------------------------
00AC            656   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:130: void Timer2_ISR (void) interrupt 5
00AC            657   ;        -----------------------------------------
00AC            658   ;         function Timer2_ISR
00AC            659   ;        -----------------------------------------
00AC            660   _Timer2_ISR:
00AC C0E0       661            push    acc
00AE C0F0       662            push    b
00B0 C0D0       663            push    psw
00B2 75D000     664            mov     psw,#0x00
00B5            665   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:132: TF2H = 0; // Clear Timer2 interrupt flag
00B5 C2CF       666            clr     _TF2H
00B7            667   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:134: pwm_count++;
00B7 05C0       668            inc     _pwm_count
00B9            669   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:135: if(pwm_count>100) pwm_count=0;
00B9 C3         670            clr     c
00BA 74E4       671            mov     a,#(0x64 ^ 0x80)
00BC 85C0F0     672            mov     b,_pwm_count
00BF 63F080     673            xrl     b,#0x80
00C2 95F0       674            subb    a,b
00C4 5001       675            jnc     L005002?
00C6 75C000     676            mov     _pwm_count,#0x00
00C9            677   L005002?:
00C9            678   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:138: MOTOR_LEFT0 = pwm_count > pwm_Left0 ? 0 : 1; //p1.5
00C9 C3         679            clr     c
00CA E500       680            mov     a,_pwm_Left0
00CC 6480       681            xrl     a,#0x80
00CE 85C0F0     682            mov     b,_pwm_count
00D1 63F080     683            xrl     b,#0x80
00D4 95F0       684            subb    a,b
00D6 9210       685            mov  _Timer2_ISR_sloc0_1_0,c
00D8 B3         686            cpl     c
00D9 9295       687            mov     _P1_5,c
00DB            688   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:139: MOTOR_LEFT1 = pwm_count > pwm_Left1 ? 0 : 1; //p1.6
00DB C3         689            clr     c
00DC E5C0       690            mov     a,_pwm_Left1
00DE 6480       691            xrl     a,#0x80
00E0 85C0F0     692            mov     b,_pwm_count
00E3 63F080     693            xrl     b,#0x80
00E6 95F0       694            subb    a,b
00E8 9210       695            mov  _Timer2_ISR_sloc0_1_0,c
00EA B3         696            cpl     c
00EB 9296       697            mov     _P1_6,c
00ED            698   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:140: MOTOR_RIGHT0 = pwm_count > pwm_Right0 ? 0 : 1; //p2.0
00ED C3         699            clr     c
00EE E580       700            mov     a,_pwm_Right0
00F0 6480       701            xrl     a,#0x80
00F2 85C0F0     702            mov     b,_pwm_count
00F5 63F080     703            xrl     b,#0x80
00F8 95F0       704            subb    a,b
00FA 9210       705            mov  _Timer2_ISR_sloc0_1_0,c
00FC B3         706            cpl     c
00FD 92A0       707            mov     _P2_0,c
00FF            708   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:141: MOTOR_RIGHT1 = pwm_count > pwm_Right1 ? 0 : 1; //p2.1
00FF C3         709            clr     c
0100 E540       710            mov     a,_pwm_Right1
0102 6480       711            xrl     a,#0x80
0104 85C0F0     712            mov     b,_pwm_count
0107 63F080     713            xrl     b,#0x80
010A 95F0       714            subb    a,b
010C 9210       715            mov  _Timer2_ISR_sloc0_1_0,c
010E B3         716            cpl     c
010F 92A1       717            mov     _P2_1,c
0111 D0D0       718            pop     psw
0113 D0F0       719            pop     b
0115 D0E0       720            pop     acc
0117 32         721            reti
0118            722   ;        eliminated unneeded push/pop dpl
0118            723   ;        eliminated unneeded push/pop dph
0118            724   ;------------------------------------------------------------
0118            725   ;Allocation info for local variables in function 'forward_backward'
0118            726   ;------------------------------------------------------------
0118            727   ;direction                 Allocated to registers r2 
0118            728   ;------------------------------------------------------------
0118            729   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:148: void forward_backward(unsigned char direction)
0118            730   ;        -----------------------------------------
0118            731   ;         function forward_backward
0118            732   ;        -----------------------------------------
0118            733   _forward_backward:
0118            734   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:151: if (direction == 0) { //p2.1,1.6 on
0118 E582       735            mov     a,dpl
011A FA         736            mov     r2,a
011B 7001       737            jnz     L006004?
011D            738   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:152: pwm_Left0 = pwm_Right0 = -1;
011D 7580FF     739            mov     _pwm_Right0,#0xFF
0120 7500FF     740            mov     _pwm_Left0,#0xFF
0123            741   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:153: pwm_Left1 = pwm_Right1 = pwm_both;  //MOTOR_LEFT1 = MOTOR_RIGHT1 = pwm_both;
0123 854040     742            mov     _pwm_Right1,_pwm_both
0126 8540C0     743            mov     _pwm_Left1,_pwm_both
0129 22         744            ret
012A            745   L006004?:
012A            746   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:156: else if (direction == 1) { //p2.0,1.5 on
012A BA01D0     747            cjne    r2,#0x01,L006006?
012D            748   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:157: pwm_Left1 = pwm_Right1 = -1;
012D 7540FF     749            mov     _pwm_Right1,#0xFF
0130 75C0FF     750            mov     _pwm_Left1,#0xFF
0133            751   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:158: pwm_Left0 = pwm_Right0 = pwm_both; 
0133 854080     752            mov     _pwm_Right0,_pwm_both
0136 854000     753            mov     _pwm_Left0,_pwm_both
0139            754   L006006?:
0139 22         755            ret
013A            756   ;------------------------------------------------------------
013A            757   ;Allocation info for local variables in function 'InitADC'
013A            758   ;------------------------------------------------------------
013A            759   ;------------------------------------------------------------
013A            760   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:164: void InitADC (void)
013A            761   ;        -----------------------------------------
013A            762   ;         function InitADC
013A            763   ;        -----------------------------------------
013A            764   _InitADC:
013A            765   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:167: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
013A 75BCF8     766            mov     _ADC0CF,#0xF8
013D            767   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:168: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
013D 75E880     768            mov     _ADC0CN,#0x80
0140            769   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:169: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
0140 75D108     770            mov     _REF0CN,#0x08
0143 22         771            ret
0144            772   ;------------------------------------------------------------
0144            773   ;Allocation info for local variables in function 'InitPinADC'
0144            774   ;------------------------------------------------------------
0144            775   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0144            776   ;portno                    Allocated to registers r2 
0144            777   ;mask                      Allocated to registers r3 
0144            778   ;------------------------------------------------------------
0144            779   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:172: void InitPinADC (unsigned char portno, unsigned char pinno)
0144            780   ;        -----------------------------------------
0144            781   ;         function InitPinADC
0144            782   ;        -----------------------------------------
0144            783   _InitPinADC:
0144 AA82       784            mov     r2,dpl
0146            785   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:176: mask=1<<pinno;
0146 8560F0     786            mov     b,_InitPinADC_PARM_2
0149 05F0       787            inc     b
014B 7401       788            mov     a,#0x01
014D 8001       789            sjmp    L008012?
014F            790   L008010?:
014F 25E0       791            add     a,acc
0151            792   L008012?:
0151 D5F050     793            djnz    b,L008010?
0154 FB         794            mov     r3,a
0155            795   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:178: switch (portno)
0155 EA         796            mov     a,r2
0156 24FC       797            add     a,#0xff - 0x03
0158 4001       798            jc      L008007?
015A EA         799            mov     a,r2
015B 2A         800            add     a,r2
015C 2A         801            add     a,r2
015D 909DD0     802            mov     dptr,#L008014?
0160 73         803            jmp     @a+dptr
0161            804   L008014?:
0161 020100     805            ljmp    L008001?
0164 020100     806            ljmp    L008002?
0167 020100     807            ljmp    L008003?
016A 020100     808            ljmp    L008004?
016D            809   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:180: case 0:
016D            810   L008001?:
016D            811   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:181: P0MDIN &= (~mask); // Set pin as analog input
016D EB         812            mov     a,r3
016E F4         813            cpl     a
016F 52F1       814            anl     _P0MDIN,a
0171            815   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:182: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0171 EB         816            mov     a,r3
0172 42D4       817            orl     _P0SKIP,a
0174            818   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:183: break;
0174            819   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:184: case 1:
0174 22         820            ret
0175            821   L008002?:
0175            822   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:185: P1MDIN &= (~mask); // Set pin as analog input
0175 EB         823            mov     a,r3
0176 F4         824            cpl     a
0177 52F2       825            anl     _P1MDIN,a
0179            826   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:186: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0179 EB         827            mov     a,r3
017A 42D5       828            orl     _P1SKIP,a
017C            829   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:187: break;
017C            830   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:188: case 2:
017C 22         831            ret
017D            832   L008003?:
017D            833   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:189: P2MDIN &= (~mask); // Set pin as analog input
017D EB         834            mov     a,r3
017E F4         835            cpl     a
017F 52F3       836            anl     _P2MDIN,a
0181            837   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:190: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0181 EB         838            mov     a,r3
0182 42D6       839            orl     _P2SKIP,a
0184            840   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:191: break;
0184            841   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:192: case 3:
0184 22         842            ret
0185            843   L008004?:
0185            844   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:193: P3MDIN &= (~mask); // Set pin as analog input
0185 EB         845            mov     a,r3
0186 F4         846            cpl     a
0187 FA         847            mov     r2,a
0188 52F4       848            anl     _P3MDIN,a
018A            849   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:194: P3SKIP |= mask; // Skip Crossbar decoding for this pin
018A EB         850            mov     a,r3
018B 42DF       851            orl     _P3SKIP,a
018D            852   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:198: }
018D            853   L008007?:
018D 22         854            ret
018E            855   ;------------------------------------------------------------
018E            856   ;Allocation info for local variables in function 'ADC_at_Pin'
018E            857   ;------------------------------------------------------------
018E            858   ;pin                       Allocated to registers 
018E            859   ;------------------------------------------------------------
018E            860   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:201: unsigned int ADC_at_Pin(unsigned char pin)
018E            861   ;        -----------------------------------------
018E            862   ;         function ADC_at_Pin
018E            863   ;        -----------------------------------------
018E            864   _ADC_at_Pin:
018E 8582BB     865            mov     _AMX0P,dpl
0191            866   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:204: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
0191 75BA1F     867            mov     _AMX0N,#0x1F
0194            868   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:206: AD0BUSY=1;
0194 D2EC       869            setb    _AD0BUSY
0196            870   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:207: while (AD0BUSY); // Wait for dummy conversion to finish
0196            871   L009001?:
0196 20EC10     872            jb      _AD0BUSY,L009001?
0199            873   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:209: AD0BUSY = 1;
0199 D2EC       874            setb    _AD0BUSY
019B            875   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:210: while (AD0BUSY); // Wait for conversion to complete
019B            876   L009004?:
019B 20EC50     877            jb      _AD0BUSY,L009004?
019E            878   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:211: return (ADC0L+(ADC0H*0x100));
019E AABD       879            mov     r2,_ADC0L
01A0 7B00       880            mov     r3,#0x00
01A2 ADBE       881            mov     r5,_ADC0H
01A4 7C00       882            mov     r4,#0x00
01A6 EC         883            mov     a,r4
01A7 2A         884            add     a,r2
01A8 F582       885            mov     dpl,a
01AA ED         886            mov     a,r5
01AB 3B         887            addc    a,r3
01AC F583       888            mov     dph,a
01AE 22         889            ret
01AF            890   ;------------------------------------------------------------
01AF            891   ;Allocation info for local variables in function 'Volts_at_Pin'
01AF            892   ;------------------------------------------------------------
01AF            893   ;pin                       Allocated to registers r2 
01AF            894   ;------------------------------------------------------------
01AF            895   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:214: float Volts_at_Pin(unsigned char pin)
01AF            896   ;        -----------------------------------------
01AF            897   ;         function Volts_at_Pin
01AF            898   ;        -----------------------------------------
01AF            899   _Volts_at_Pin:
01AF            900   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:216: return ((ADC_at_Pin(pin)*3.30)/1024.0);
01AF 120100     901            lcall   _ADC_at_Pin
01B2 120100     902            lcall   ___uint2fs
01B5 AA82       903            mov     r2,dpl
01B7 AB83       904            mov     r3,dph
01B9 ACF0       905            mov     r4,b
01BB FD         906            mov     r5,a
01BC C002       907            push    ar2
01BE C003       908            push    ar3
01C0 C004       909            push    ar4
01C2 C005       910            push    ar5
01C4 903333     911            mov     dptr,#0x3333
01C7 75F053     912            mov     b,#0x53
01CA 7440       913            mov     a,#0x40
01CC 120100     914            lcall   ___fsmul
01CF AA82       915            mov     r2,dpl
01D1 AB83       916            mov     r3,dph
01D3 ACF0       917            mov     r4,b
01D5 FD         918            mov     r5,a
01D6 E581       919            mov     a,sp
01D8 24FC       920            add     a,#0xfc
01DA F581       921            mov     sp,a
01DC E4         922            clr     a
01DD C0E0       923            push    acc
01DF C0E0       924            push    acc
01E1 7480       925            mov     a,#0x80
01E3 C0E0       926            push    acc
01E5 7444       927            mov     a,#0x44
01E7 C0E0       928            push    acc
01E9 8A82       929            mov     dpl,r2
01EB 8B83       930            mov     dph,r3
01ED 8CF0       931            mov     b,r4
01EF ED         932            mov     a,r5
01F0 120100     933            lcall   ___fsdiv
01F3 AA82       934            mov     r2,dpl
01F5 AB83       935            mov     r3,dph
01F7 ACF0       936            mov     r4,b
01F9 FD         937            mov     r5,a
01FA E581       938            mov     a,sp
01FC 24FC       939            add     a,#0xfc
01FE F581       940            mov     sp,a
0200 8A82       941            mov     dpl,r2
0202 8B83       942            mov     dph,r3
0204 8CF0       943            mov     b,r4
0206 ED         944            mov     a,r5
0207 22         945            ret
0208            946   ;------------------------------------------------------------
0208            947   ;Allocation info for local variables in function 'readData'
0208            948   ;------------------------------------------------------------
0208            949   ;commandflag               Allocated to registers r2 r3 
0208            950   ;------------------------------------------------------------
0208            951   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:220: void readData (void) {
0208            952   ;        -----------------------------------------
0208            953   ;         function readData
0208            954   ;        -----------------------------------------
0208            955   _readData:
0208            956   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:221: int commandflag = 1;                                     //determines if there's a real command coming in or not
0208 7A01       957            mov     r2,#0x01
020A 7B00       958            mov     r3,#0x00
020C            959   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:223: if (COMMAND_PIN == 0) {                                  //0---
020C 309190     960            jnb     _P1_1,L011039?
020F 020100     961            ljmp    L011022?
0212            962   L011039?:
0212            963   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:224: waitms(CMDFRQ*1.5);
0212 900069     964            mov     dptr,#0x0069
0215 C002       965            push    ar2
0217 C003       966            push    ar3
0219 120100     967            lcall   _waitms
021C D003       968            pop     ar3
021E D002       969            pop     ar2
0220            970   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:225: if (COMMAND_PIN == 1) {                          //01--
0220 309110     971            jnb     _P1_1,L011019?
0223            972   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:226: waitms(CMDFRQ);
0223 900046     973            mov     dptr,#0x0046
0226 C002       974            push    ar2
0228 C003       975            push    ar3
022A 120100     976            lcall   _waitms
022D D003       977            pop     ar3
022F D002       978            pop     ar2
0231            979   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:227: if (COMMAND_PIN == 0) {                  //010-
0231 209150     980            jb      _P1_1,L011007?
0234            981   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:228: waitms(CMDFRQ);
0234 900046     982            mov     dptr,#0x0046
0237 120100     983            lcall   _waitms
023A            984   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:229: if (COMMAND_PIN == 0) {          //0100  
023A 209190     985            jb      _P1_1,L011002?
023D            986   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:230: currentcmd = 4;
023D 75C004     987            mov     _currentcmd,#0x04
0240            988   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:231: commandflag = 0;
0240 7A00       989            mov     r2,#0x00
0242 7B00       990            mov     r3,#0x00
0244 8001       991            sjmp    L011020?
0246            992   L011002?:
0246            993   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:234: currentcmd = 5;
0246 75C005     994            mov     _currentcmd,#0x05
0249            995   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:235: commandflag = 0;
0249 7A00       996            mov     r2,#0x00
024B 7B00       997            mov     r3,#0x00
024D 8001       998            sjmp    L011020?
024F            999   L011007?:
024F           1000   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:239: waitms(CMDFRQ);
024F 900046    1001            mov     dptr,#0x0046
0252 C002      1002            push    ar2
0254 C003      1003            push    ar3
0256 120100    1004            lcall   _waitms
0259 D003      1005            pop     ar3
025B D002      1006            pop     ar2
025D           1007   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:240: if (COMMAND_PIN == 0) {          //0110
025D 2091D0    1008            jb      _P1_1,L011020?
0260           1009   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:241: currentcmd = 6;
0260 75C006    1010            mov     _currentcmd,#0x06
0263           1011   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:242: commandflag = 0;
0263 7A00      1012            mov     r2,#0x00
0265 7B00      1013            mov     r3,#0x00
0267 8001      1014            sjmp    L011020?
0269           1015   L011019?:
0269           1016   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:247: waitms(CMDFRQ);
0269 900046    1017            mov     dptr,#0x0046
026C 120100    1018            lcall   _waitms
026F           1019   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:248: if (COMMAND_PIN == 1) {                  //001-
026F 309110    1020            jnb     _P1_1,L011016?
0272           1021   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:249: waitms(CMDFRQ);
0272 900046    1022            mov     dptr,#0x0046
0275 120100    1023            lcall   _waitms
0278           1024   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:250: if (COMMAND_PIN == 1) {          //0011
0278 309150    1025            jnb     _P1_1,L011010?
027B           1026   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:251: currentcmd = 3;
027B 75C003    1027            mov     _currentcmd,#0x03
027E           1028   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:252: commandflag = 0;
027E 7A00      1029            mov     r2,#0x00
0280 7B00      1030            mov     r3,#0x00
0282 8001      1031            sjmp    L011020?
0284           1032   L011010?:
0284           1033   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:255: currentcmd = 2;
0284 75C002    1034            mov     _currentcmd,#0x02
0287           1035   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:256: commandflag = 0;
0287 7A00      1036            mov     r2,#0x00
0289 7B00      1037            mov     r3,#0x00
028B 8001      1038            sjmp    L011020?
028D           1039   L011016?:
028D           1040   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:260: waitms(CMDFRQ);
028D 900046    1041            mov     dptr,#0x0046
0290 120100    1042            lcall   _waitms
0293           1043   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:261: if (COMMAND_PIN == 1) {          //0001  
0293 309190    1044            jnb     _P1_1,L011013?
0296           1045   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:262: currentcmd == 1;
0296 E5C0      1046            mov     a,_currentcmd
0298           1047   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:263: commandflag = 0;
0298 7A00      1048            mov     r2,#0x00
029A 7B00      1049            mov     r3,#0x00
029C 8001      1050            sjmp    L011020?
029E           1051   L011013?:
029E           1052   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:266: commandflag = 1;
029E 7A01      1053            mov     r2,#0x01
02A0 7B00      1054            mov     r3,#0x00
02A2           1055   L011020?:
02A2           1056   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:270: printf("current command is %d, commandflag = %d\r\n", currentcmd, commandflag);          
02A2 ACC0      1057            mov     r4,_currentcmd
02A4 E5C0      1058            mov     a,_currentcmd
02A6 33        1059            rlc     a
02A7 95E0      1060            subb    a,acc
02A9 FD        1061            mov     r5,a
02AA C002      1062            push    ar2
02AC C003      1063            push    ar3
02AE C002      1064            push    ar2
02B0 C003      1065            push    ar3
02B2 C004      1066            push    ar4
02B4 C005      1067            push    ar5
02B6 74D0      1068            mov     a,#__str_0
02B8 C0E0      1069            push    acc
02BA 74A2      1070            mov     a,#(__str_0 >> 8)
02BC C0E0      1071            push    acc
02BE 7480      1072            mov     a,#0x80
02C0 C0E0      1073            push    acc
02C2 120100    1074            lcall   _printf
02C5 E581      1075            mov     a,sp
02C7 24F9      1076            add     a,#0xf9
02C9 F581      1077            mov     sp,a
02CB D003      1078            pop     ar3
02CD D002      1079            pop     ar2
02CF           1080   L011022?:
02CF           1081   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:276: if (commandflag == 0) {                                  //only wait for signal to end if a command has been received. 
02CF EA        1082            mov     a,r2
02D0 4B        1083            orl     a,r3
02D1 7001      1084            jnz     L011028?
02D3           1085   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:277: while (COMMAND_PIN == 0) {}
02D3           1086   L011023?:
02D3 309190    1087            jnb     _P1_1,L011023?
02D6           1088   L011028?:
02D6 22        1089            ret
02D7           1090   ;------------------------------------------------------------
02D7           1091   ;Allocation info for local variables in function 'linetrack'
02D7           1092   ;------------------------------------------------------------
02D7           1093   ;forwardbackward           Allocated with name '_linetrack_forwardbackward_1_83'
02D7           1094   ;vleft                     Allocated with name '_linetrack_vleft_1_84'
02D7           1095   ;vright                    Allocated with name '_linetrack_vright_1_84'
02D7           1096   ;sloc0                     Allocated with name '_linetrack_sloc0_1_0'
02D7           1097   ;------------------------------------------------------------
02D7           1098   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:282: void linetrack (int forwardbackward) {
02D7           1099   ;        -----------------------------------------
02D7           1100   ;         function linetrack
02D7           1101   ;        -----------------------------------------
02D7           1102   _linetrack:
02D7 858290    1103            mov     _linetrack_forwardbackward_1_83,dpl
02DA 858391    1104            mov     (_linetrack_forwardbackward_1_83 + 1),dph
02DD           1105   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:286: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
02DD 75820B    1106            mov     dpl,#0x0B
02E0 120100    1107            lcall   _Volts_at_Pin
02E3 8582E0    1108            mov     _linetrack_vleft_1_84,dpl
02E6 8583E1    1109            mov     (_linetrack_vleft_1_84 + 1),dph
02E9 85F0E2    1110            mov     (_linetrack_vleft_1_84 + 2),b
02EC F5E3      1111            mov     (_linetrack_vleft_1_84 + 3),a
02EE           1112   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:287: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
02EE 75820C    1113            mov     dpl,#0x0C
02F1 120100    1114            lcall   _Volts_at_Pin
02F4 858230    1115            mov     _linetrack_vright_1_84,dpl
02F7 858331    1116            mov     (_linetrack_vright_1_84 + 1),dph
02FA 85F032    1117            mov     (_linetrack_vright_1_84 + 2),b
02FD F533      1118            mov     (_linetrack_vright_1_84 + 3),a
02FF           1119   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:289: pwm_Left0 = -1;
02FF 7500FF    1120            mov     _pwm_Left0,#0xFF
0302           1121   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:291: pwm_Left1 = vright*vright*75/(vright*vright+vleft*vleft);
0302 C030      1122            push    _linetrack_vright_1_84
0304 C031      1123            push    (_linetrack_vright_1_84 + 1)
0306 C032      1124            push    (_linetrack_vright_1_84 + 2)
0308 C033      1125            push    (_linetrack_vright_1_84 + 3)
030A 853082    1126            mov     dpl,_linetrack_vright_1_84
030D 853183    1127            mov     dph,(_linetrack_vright_1_84 + 1)
0310 8532F0    1128            mov     b,(_linetrack_vright_1_84 + 2)
0313 E533      1129            mov     a,(_linetrack_vright_1_84 + 3)
0315 120100    1130            lcall   ___fsmul
0318 AC82      1131            mov     r4,dpl
031A AD83      1132            mov     r5,dph
031C AEF0      1133            mov     r6,b
031E FF        1134            mov     r7,a
031F E581      1135            mov     a,sp
0321 24FC      1136            add     a,#0xfc
0323 F581      1137            mov     sp,a
0325 C004      1138            push    ar4
0327 C005      1139            push    ar5
0329 C006      1140            push    ar6
032B C007      1141            push    ar7
032D 900000    1142            mov     dptr,#0x0000
0330 75F096    1143            mov     b,#0x96
0333 7442      1144            mov     a,#0x42
0335 120100    1145            lcall   ___fsmul
0338 AC82      1146            mov     r4,dpl
033A AD83      1147            mov     r5,dph
033C AEF0      1148            mov     r6,b
033E FF        1149            mov     r7,a
033F E581      1150            mov     a,sp
0341 24FC      1151            add     a,#0xfc
0343 F581      1152            mov     sp,a
0345 C004      1153            push    ar4
0347 C005      1154            push    ar5
0349 C006      1155            push    ar6
034B C007      1156            push    ar7
034D C030      1157            push    _linetrack_vright_1_84
034F C031      1158            push    (_linetrack_vright_1_84 + 1)
0351 C032      1159            push    (_linetrack_vright_1_84 + 2)
0353 C033      1160            push    (_linetrack_vright_1_84 + 3)
0355 853082    1161            mov     dpl,_linetrack_vright_1_84
0358 853183    1162            mov     dph,(_linetrack_vright_1_84 + 1)
035B 8532F0    1163            mov     b,(_linetrack_vright_1_84 + 2)
035E E533      1164            mov     a,(_linetrack_vright_1_84 + 3)
0360 120100    1165            lcall   ___fsmul
0363 858280    1166            mov     _linetrack_sloc0_1_0,dpl
0366 858381    1167            mov     (_linetrack_sloc0_1_0 + 1),dph
0369 85F082    1168            mov     (_linetrack_sloc0_1_0 + 2),b
036C F583      1169            mov     (_linetrack_sloc0_1_0 + 3),a
036E E581      1170            mov     a,sp
0370 24FC      1171            add     a,#0xfc
0372 F581      1172            mov     sp,a
0374 C0E0      1173            push    _linetrack_vleft_1_84
0376 C0E1      1174            push    (_linetrack_vleft_1_84 + 1)
0378 C0E2      1175            push    (_linetrack_vleft_1_84 + 2)
037A C0E3      1176            push    (_linetrack_vleft_1_84 + 3)
037C 85E082    1177            mov     dpl,_linetrack_vleft_1_84
037F 85E183    1178            mov     dph,(_linetrack_vleft_1_84 + 1)
0382 85E2F0    1179            mov     b,(_linetrack_vleft_1_84 + 2)
0385 E5E3      1180            mov     a,(_linetrack_vleft_1_84 + 3)
0387 120100    1181            lcall   ___fsmul
038A AA82      1182            mov     r2,dpl
038C AB83      1183            mov     r3,dph
038E A8F0      1184            mov     r0,b
0390 F9        1185            mov     r1,a
0391 E581      1186            mov     a,sp
0393 24FC      1187            add     a,#0xfc
0395 F581      1188            mov     sp,a
0397 C002      1189            push    ar2
0399 C003      1190            push    ar3
039B C000      1191            push    ar0
039D C001      1192            push    ar1
039F 858082    1193            mov     dpl,_linetrack_sloc0_1_0
03A2 858183    1194            mov     dph,(_linetrack_sloc0_1_0 + 1)
03A5 8582F0    1195            mov     b,(_linetrack_sloc0_1_0 + 2)
03A8 E583      1196            mov     a,(_linetrack_sloc0_1_0 + 3)
03AA 120100    1197            lcall   ___fsadd
03AD AA82      1198            mov     r2,dpl
03AF AB83      1199            mov     r3,dph
03B1 A8F0      1200            mov     r0,b
03B3 F9        1201            mov     r1,a
03B4 E581      1202            mov     a,sp
03B6 24FC      1203            add     a,#0xfc
03B8 F581      1204            mov     sp,a
03BA D007      1205            pop     ar7
03BC D006      1206            pop     ar6
03BE D005      1207            pop     ar5
03C0 D004      1208            pop     ar4
03C2 C002      1209            push    ar2
03C4 C003      1210            push    ar3
03C6 C000      1211            push    ar0
03C8 C001      1212            push    ar1
03CA 8C82      1213            mov     dpl,r4
03CC 8D83      1214            mov     dph,r5
03CE 8EF0      1215            mov     b,r6
03D0 EF        1216            mov     a,r7
03D1 120100    1217            lcall   ___fsdiv
03D4 AA82      1218            mov     r2,dpl
03D6 AB83      1219            mov     r3,dph
03D8 ACF0      1220            mov     r4,b
03DA FD        1221            mov     r5,a
03DB E581      1222            mov     a,sp
03DD 24FC      1223            add     a,#0xfc
03DF F581      1224            mov     sp,a
03E1 8A82      1225            mov     dpl,r2
03E3 8B83      1226            mov     dph,r3
03E5 8CF0      1227            mov     b,r4
03E7 ED        1228            mov     a,r5
03E8 120100    1229            lcall   ___fs2schar
03EB 8582C0    1230            mov     _pwm_Left1,dpl
03EE           1231   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:292: pwm_Right1 = -1;
03EE 7540FF    1232            mov     _pwm_Right1,#0xFF
03F1           1233   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:294: pwm_Right0 = vleft*vleft*75/(vright*vright+vleft*vleft);
03F1 C0E0      1234            push    _linetrack_vleft_1_84
03F3 C0E1      1235            push    (_linetrack_vleft_1_84 + 1)
03F5 C0E2      1236            push    (_linetrack_vleft_1_84 + 2)
03F7 C0E3      1237            push    (_linetrack_vleft_1_84 + 3)
03F9 85E082    1238            mov     dpl,_linetrack_vleft_1_84
03FC 85E183    1239            mov     dph,(_linetrack_vleft_1_84 + 1)
03FF 85E2F0    1240            mov     b,(_linetrack_vleft_1_84 + 2)
0402 E5E3      1241            mov     a,(_linetrack_vleft_1_84 + 3)
0404 120100    1242            lcall   ___fsmul
0407 AA82      1243            mov     r2,dpl
0409 AB83      1244            mov     r3,dph
040B ACF0      1245            mov     r4,b
040D FD        1246            mov     r5,a
040E E581      1247            mov     a,sp
0410 24FC      1248            add     a,#0xfc
0412 F581      1249            mov     sp,a
0414 C002      1250            push    ar2
0416 C003      1251            push    ar3
0418 C004      1252            push    ar4
041A C005      1253            push    ar5
041C 900000    1254            mov     dptr,#0x0000
041F 75F096    1255            mov     b,#0x96
0422 7442      1256            mov     a,#0x42
0424 120100    1257            lcall   ___fsmul
0427 AA82      1258            mov     r2,dpl
0429 AB83      1259            mov     r3,dph
042B ACF0      1260            mov     r4,b
042D FD        1261            mov     r5,a
042E E581      1262            mov     a,sp
0430 24FC      1263            add     a,#0xfc
0432 F581      1264            mov     sp,a
0434 C002      1265            push    ar2
0436 C003      1266            push    ar3
0438 C004      1267            push    ar4
043A C005      1268            push    ar5
043C C030      1269            push    _linetrack_vright_1_84
043E C031      1270            push    (_linetrack_vright_1_84 + 1)
0440 C032      1271            push    (_linetrack_vright_1_84 + 2)
0442 C033      1272            push    (_linetrack_vright_1_84 + 3)
0444 853082    1273            mov     dpl,_linetrack_vright_1_84
0447 853183    1274            mov     dph,(_linetrack_vright_1_84 + 1)
044A 8532F0    1275            mov     b,(_linetrack_vright_1_84 + 2)
044D E533      1276            mov     a,(_linetrack_vright_1_84 + 3)
044F 120100    1277            lcall   ___fsmul
0452 858280    1278            mov     _linetrack_sloc0_1_0,dpl
0455 858381    1279            mov     (_linetrack_sloc0_1_0 + 1),dph
0458 85F082    1280            mov     (_linetrack_sloc0_1_0 + 2),b
045B F583      1281            mov     (_linetrack_sloc0_1_0 + 3),a
045D E581      1282            mov     a,sp
045F 24FC      1283            add     a,#0xfc
0461 F581      1284            mov     sp,a
0463 C0E0      1285            push    _linetrack_vleft_1_84
0465 C0E1      1286            push    (_linetrack_vleft_1_84 + 1)
0467 C0E2      1287            push    (_linetrack_vleft_1_84 + 2)
0469 C0E3      1288            push    (_linetrack_vleft_1_84 + 3)
046B 85E082    1289            mov     dpl,_linetrack_vleft_1_84
046E 85E183    1290            mov     dph,(_linetrack_vleft_1_84 + 1)
0471 85E2F0    1291            mov     b,(_linetrack_vleft_1_84 + 2)
0474 E5E3      1292            mov     a,(_linetrack_vleft_1_84 + 3)
0476 120100    1293            lcall   ___fsmul
0479 AE82      1294            mov     r6,dpl
047B AF83      1295            mov     r7,dph
047D A8F0      1296            mov     r0,b
047F F9        1297            mov     r1,a
0480 E581      1298            mov     a,sp
0482 24FC      1299            add     a,#0xfc
0484 F581      1300            mov     sp,a
0486 C006      1301            push    ar6
0488 C007      1302            push    ar7
048A C000      1303            push    ar0
048C C001      1304            push    ar1
048E 858082    1305            mov     dpl,_linetrack_sloc0_1_0
0491 858183    1306            mov     dph,(_linetrack_sloc0_1_0 + 1)
0494 8582F0    1307            mov     b,(_linetrack_sloc0_1_0 + 2)
0497 E583      1308            mov     a,(_linetrack_sloc0_1_0 + 3)
0499 120100    1309            lcall   ___fsadd
049C AE82      1310            mov     r6,dpl
049E AF83      1311            mov     r7,dph
04A0 A8F0      1312            mov     r0,b
04A2 F9        1313            mov     r1,a
04A3 E581      1314            mov     a,sp
04A5 24FC      1315            add     a,#0xfc
04A7 F581      1316            mov     sp,a
04A9 D005      1317            pop     ar5
04AB D004      1318            pop     ar4
04AD D003      1319            pop     ar3
04AF D002      1320            pop     ar2
04B1 C006      1321            push    ar6
04B3 C007      1322            push    ar7
04B5 C000      1323            push    ar0
04B7 C001      1324            push    ar1
04B9 8A82      1325            mov     dpl,r2
04BB 8B83      1326            mov     dph,r3
04BD 8CF0      1327            mov     b,r4
04BF ED        1328            mov     a,r5
04C0 120100    1329            lcall   ___fsdiv
04C3 AA82      1330            mov     r2,dpl
04C5 AB83      1331            mov     r3,dph
04C7 ACF0      1332            mov     r4,b
04C9 FD        1333            mov     r5,a
04CA E581      1334            mov     a,sp
04CC 24FC      1335            add     a,#0xfc
04CE F581      1336            mov     sp,a
04D0 8A82      1337            mov     dpl,r2
04D2 8B83      1338            mov     dph,r3
04D4 8CF0      1339            mov     b,r4
04D6 ED        1340            mov     a,r5
04D7 120100    1341            lcall   ___fs2schar
04DA 858280    1342            mov     _pwm_Right0,dpl
04DD           1343   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:296: if (forwardbackward) {
04DD E590      1344            mov     a,_linetrack_forwardbackward_1_83
04DF 4591      1345            orl     a,(_linetrack_forwardbackward_1_83 + 1)
04E1 7001      1346            jnz     L012024?
04E3 020100    1347            ljmp    L012014?
04E6           1348   L012024?:
04E6           1349   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:333: if (vleft > 1) {
04E6 E4        1350            clr     a
04E7 C0E0      1351            push    acc
04E9 C0E0      1352            push    acc
04EB 7480      1353            mov     a,#0x80
04ED C0E0      1354            push    acc
04EF 743F      1355            mov     a,#0x3F
04F1 C0E0      1356            push    acc
04F3 85E082    1357            mov     dpl,_linetrack_vleft_1_84
04F6 85E183    1358            mov     dph,(_linetrack_vleft_1_84 + 1)
04F9 85E2F0    1359            mov     b,(_linetrack_vleft_1_84 + 2)
04FC E5E3      1360            mov     a,(_linetrack_vleft_1_84 + 3)
04FE 120100    1361            lcall   ___fsgt
0501 AA82      1362            mov     r2,dpl
0503 E581      1363            mov     a,sp
0505 24FC      1364            add     a,#0xfc
0507 F581      1365            mov     sp,a
0509 EA        1366            mov     a,r2
050A 6001      1367            jz      L012011?
050C           1368   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:334: pwm_Left1 = -1;
050C 75C0FF    1369            mov     _pwm_Left1,#0xFF
050F           1370   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:335: pwm_Left0 = -1;
050F 7500FF    1371            mov     _pwm_Left0,#0xFF
0512           1372   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:336: pwm_Right1 = 25;
0512 754019    1373            mov     _pwm_Right1,#0x19
0515           1374   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:337: pwm_Right0 = -1;
0515 7580FF    1375            mov     _pwm_Right0,#0xFF
0518           1376   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:338: waitms(200);
0518 9000C8    1377            mov     dptr,#0x00C8
051B 120100    1378            lcall   _waitms
051E           1379   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:339: while (vright < 1);
051E           1380   L012001?:
051E E4        1381            clr     a
051F C0E0      1382            push    acc
0521 C0E0      1383            push    acc
0523 7480      1384            mov     a,#0x80
0525 C0E0      1385            push    acc
0527 743F      1386            mov     a,#0x3F
0529 C0E0      1387            push    acc
052B 853082    1388            mov     dpl,_linetrack_vright_1_84
052E 853183    1389            mov     dph,(_linetrack_vright_1_84 + 1)
0531 8532F0    1390            mov     b,(_linetrack_vright_1_84 + 2)
0534 E533      1391            mov     a,(_linetrack_vright_1_84 + 3)
0536 120100    1392            lcall   ___fslt
0539 AA82      1393            mov     r2,dpl
053B E581      1394            mov     a,sp
053D 24FC      1395            add     a,#0xfc
053F F581      1396            mov     sp,a
0541 EA        1397            mov     a,r2
0542 6001      1398            jz      L012014?
0544 8001      1399            sjmp    L012001?
0546           1400   L012011?:
0546           1401   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:341: else if (vright > 1) {
0546 E4        1402            clr     a
0547 C0E0      1403            push    acc
0549 C0E0      1404            push    acc
054B 7480      1405            mov     a,#0x80
054D C0E0      1406            push    acc
054F 743F      1407            mov     a,#0x3F
0551 C0E0      1408            push    acc
0553 853082    1409            mov     dpl,_linetrack_vright_1_84
0556 853183    1410            mov     dph,(_linetrack_vright_1_84 + 1)
0559 8532F0    1411            mov     b,(_linetrack_vright_1_84 + 2)
055C E533      1412            mov     a,(_linetrack_vright_1_84 + 3)
055E 120100    1413            lcall   ___fsgt
0561 AA82      1414            mov     r2,dpl
0563 E581      1415            mov     a,sp
0565 24FC      1416            add     a,#0xfc
0567 F581      1417            mov     sp,a
0569 EA        1418            mov     a,r2
056A 6001      1419            jz      L012008?
056C           1420   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:342: pwm_Left1 = -1;
056C 75C0FF    1421            mov     _pwm_Left1,#0xFF
056F           1422   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:343: pwm_Left0 = 25;
056F 750019    1423            mov     _pwm_Left0,#0x19
0572           1424   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:344: pwm_Right1 = -1;
0572 7540FF    1425            mov     _pwm_Right1,#0xFF
0575           1426   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:345: pwm_Right0 = -1;
0575 7580FF    1427            mov     _pwm_Right0,#0xFF
0578           1428   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:346: waitms(400);
0578 900190    1429            mov     dptr,#0x0190
057B 120100    1430            lcall   _waitms
057E           1431   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:347: while (vleft < 1);
057E           1432   L012004?:
057E E4        1433            clr     a
057F C0E0      1434            push    acc
0581 C0E0      1435            push    acc
0583 7480      1436            mov     a,#0x80
0585 C0E0      1437            push    acc
0587 743F      1438            mov     a,#0x3F
0589 C0E0      1439            push    acc
058B 85E082    1440            mov     dpl,_linetrack_vleft_1_84
058E 85E183    1441            mov     dph,(_linetrack_vleft_1_84 + 1)
0591 85E2F0    1442            mov     b,(_linetrack_vleft_1_84 + 2)
0594 E5E3      1443            mov     a,(_linetrack_vleft_1_84 + 3)
0596 120100    1444            lcall   ___fslt
0599 AA82      1445            mov     r2,dpl
059B E581      1446            mov     a,sp
059D 24FC      1447            add     a,#0xfc
059F F581      1448            mov     sp,a
05A1 EA        1449            mov     a,r2
05A2 6001      1450            jz      L012014?
05A4 8001      1451            sjmp    L012004?
05A6           1452   L012008?:
05A6           1453   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:350: pwm_Left1 = -1;
05A6 75C0FF    1454            mov     _pwm_Left1,#0xFF
05A9           1455   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:351: pwm_Left0 = 25;
05A9 750019    1456            mov     _pwm_Left0,#0x19
05AC           1457   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:352: pwm_Right1 = 25;
05AC 754019    1458            mov     _pwm_Right1,#0x19
05AF           1459   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:353: pwm_Right0 = -1;
05AF 7580FF    1460            mov     _pwm_Right0,#0xFF
05B2           1461   L012014?:
05B2           1462   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:357: printf("2.3 = %f, 2.4 = %f, LeftMotor = %4d, RightMotor = %4d, command: %d\r\n", vleft, vright, pwm_Left0, pwm_Right1, currentcmd);
05B2 AAC0      1463            mov     r2,_currentcmd
05B4 E5C0      1464            mov     a,_currentcmd
05B6 33        1465            rlc     a
05B7 95E0      1466            subb    a,acc
05B9 FB        1467            mov     r3,a
05BA AC40      1468            mov     r4,_pwm_Right1
05BC E540      1469            mov     a,_pwm_Right1
05BE 33        1470            rlc     a
05BF 95E0      1471            subb    a,acc
05C1 FD        1472            mov     r5,a
05C2 AE00      1473            mov     r6,_pwm_Left0
05C4 E500      1474            mov     a,_pwm_Left0
05C6 33        1475            rlc     a
05C7 95E0      1476            subb    a,acc
05C9 FF        1477            mov     r7,a
05CA C002      1478            push    ar2
05CC C003      1479            push    ar3
05CE C004      1480            push    ar4
05D0 C005      1481            push    ar5
05D2 C006      1482            push    ar6
05D4 C007      1483            push    ar7
05D6 C030      1484            push    _linetrack_vright_1_84
05D8 C031      1485            push    (_linetrack_vright_1_84 + 1)
05DA C032      1486            push    (_linetrack_vright_1_84 + 2)
05DC C033      1487            push    (_linetrack_vright_1_84 + 3)
05DE C0E0      1488            push    _linetrack_vleft_1_84
05E0 C0E1      1489            push    (_linetrack_vleft_1_84 + 1)
05E2 C0E2      1490            push    (_linetrack_vleft_1_84 + 2)
05E4 C0E3      1491            push    (_linetrack_vleft_1_84 + 3)
05E6 7450      1492            mov     a,#__str_1
05E8 C0E0      1493            push    acc
05EA 74A6      1494            mov     a,#(__str_1 >> 8)
05EC C0E0      1495            push    acc
05EE 7480      1496            mov     a,#0x80
05F0 C0E0      1497            push    acc
05F2 120100    1498            lcall   _printf
05F5 E581      1499            mov     a,sp
05F7 24EF      1500            add     a,#0xef
05F9 F581      1501            mov     sp,a
05FB 22        1502            ret
05FC           1503   ;------------------------------------------------------------
05FC           1504   ;Allocation info for local variables in function 'stopcar'
05FC           1505   ;------------------------------------------------------------
05FC           1506   ;------------------------------------------------------------
05FC           1507   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:361: void stopcar () {
05FC           1508   ;        -----------------------------------------
05FC           1509   ;         function stopcar
05FC           1510   ;        -----------------------------------------
05FC           1511   _stopcar:
05FC           1512   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:362: pwm_Left1 = -1;
05FC 75C0FF    1513            mov     _pwm_Left1,#0xFF
05FF           1514   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:363: pwm_Right1 = -1;
05FF 7540FF    1515            mov     _pwm_Right1,#0xFF
0602           1516   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:364: pwm_Left0 = -1;
0602 7500FF    1517            mov     _pwm_Left0,#0xFF
0605           1518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:365: pwm_Right0 = -1;
0605 7580FF    1519            mov     _pwm_Right0,#0xFF
0608 22        1520            ret
0609           1521   ;------------------------------------------------------------
0609           1522   ;Allocation info for local variables in function 'turncar'
0609           1523   ;------------------------------------------------------------
0609           1524   ;leftright                 Allocated to registers r2 r3 
0609           1525   ;vleft                     Allocated with name '_turncar_vleft_1_91'
0609           1526   ;vright                    Allocated with name '_turncar_vright_1_91'
0609           1527   ;------------------------------------------------------------
0609           1528   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:368: void turncar (int leftright) {
0609           1529   ;        -----------------------------------------
0609           1530   ;         function turncar
0609           1531   ;        -----------------------------------------
0609           1532   _turncar:
0609 AA82      1533            mov     r2,dpl
060B AB83      1534            mov     r3,dph
060D           1535   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:372: pwm_Left0 = -1;
060D 7500FF    1536            mov     _pwm_Left0,#0xFF
0610           1537   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:373: pwm_Left1 = -1;
0610 75C0FF    1538            mov     _pwm_Left1,#0xFF
0613           1539   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:374: pwm_Right0 = -1;
0613 7580FF    1540            mov     _pwm_Right0,#0xFF
0616           1541   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:375: pwm_Right1 = -1;
0616 7540FF    1542            mov     _pwm_Right1,#0xFF
0619           1543   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:378: if (leftright == 0) {
0619 EA        1544            mov     a,r2
061A 4B        1545            orl     a,r3
061B 6001      1546            jz      L014022?
061D 020100    1547            ljmp    L014012?
0620           1548   L014022?:
0620           1549   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:380: pwm_Right0 = 50;
0620 758032    1550            mov     _pwm_Right0,#0x32
0623           1551   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:382: waitms(1000);
0623 9003E8    1552            mov     dptr,#0x03E8
0626 120100    1553            lcall   _waitms
0629           1554   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:384: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0629 75820B    1555            mov     dpl,#0x0B
062C 120100    1556            lcall   _Volts_at_Pin
062F 8582D0    1557            mov     _turncar_vleft_1_91,dpl
0632 8583D1    1558            mov     (_turncar_vleft_1_91 + 1),dph
0635 85F0D2    1559            mov     (_turncar_vleft_1_91 + 2),b
0638 F5D3      1560            mov     (_turncar_vleft_1_91 + 3),a
063A           1561   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:385: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
063A 75820C    1562            mov     dpl,#0x0C
063D 120100    1563            lcall   _Volts_at_Pin
0640 858220    1564            mov     _turncar_vright_1_91,dpl
0643 858321    1565            mov     (_turncar_vright_1_91 + 1),dph
0646 85F022    1566            mov     (_turncar_vright_1_91 + 2),b
0649 F523      1567            mov     (_turncar_vright_1_91 + 3),a
064B           1568   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:387: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
064B           1569   L014002?:
064B C020      1570            push    _turncar_vright_1_91
064D C021      1571            push    (_turncar_vright_1_91 + 1)
064F C022      1572            push    (_turncar_vright_1_91 + 2)
0651 C023      1573            push    (_turncar_vright_1_91 + 3)
0653 85D082    1574            mov     dpl,_turncar_vleft_1_91
0656 85D183    1575            mov     dph,(_turncar_vleft_1_91 + 1)
0659 85D2F0    1576            mov     b,(_turncar_vleft_1_91 + 2)
065C E5D3      1577            mov     a,(_turncar_vleft_1_91 + 3)
065E 120100    1578            lcall   ___fssub
0661 AC82      1579            mov     r4,dpl
0663 AD83      1580            mov     r5,dph
0665 AEF0      1581            mov     r6,b
0667 FF        1582            mov     r7,a
0668 E581      1583            mov     a,sp
066A 24FC      1584            add     a,#0xfc
066C F581      1585            mov     sp,a
066E 74CD      1586            mov     a,#0xCD
0670 C0E0      1587            push    acc
0672 74CC      1588            mov     a,#0xCC
0674 C0E0      1589            push    acc
0676 744C      1590            mov     a,#0x4C
0678 C0E0      1591            push    acc
067A 743E      1592            mov     a,#0x3E
067C C0E0      1593            push    acc
067E 8C82      1594            mov     dpl,r4
0680 8D83      1595            mov     dph,r5
0682 8EF0      1596            mov     b,r6
0684 EF        1597            mov     a,r7
0685 120100    1598            lcall   ___fsgt
0688 AC82      1599            mov     r4,dpl
068A E581      1600            mov     a,sp
068C 24FC      1601            add     a,#0xfc
068E F581      1602            mov     sp,a
0690 EC        1603            mov     a,r4
0691 7001      1604            jnz     L014003?
0693 C020      1605            push    _turncar_vright_1_91
0695 C021      1606            push    (_turncar_vright_1_91 + 1)
0697 C022      1607            push    (_turncar_vright_1_91 + 2)
0699 C023      1608            push    (_turncar_vright_1_91 + 3)
069B 85D082    1609            mov     dpl,_turncar_vleft_1_91
069E 85D183    1610            mov     dph,(_turncar_vleft_1_91 + 1)
06A1 85D2F0    1611            mov     b,(_turncar_vleft_1_91 + 2)
06A4 E5D3      1612            mov     a,(_turncar_vleft_1_91 + 3)
06A6 120100    1613            lcall   ___fssub
06A9 AC82      1614            mov     r4,dpl
06AB AD83      1615            mov     r5,dph
06AD AEF0      1616            mov     r6,b
06AF FF        1617            mov     r7,a
06B0 E581      1618            mov     a,sp
06B2 24FC      1619            add     a,#0xfc
06B4 F581      1620            mov     sp,a
06B6 74CD      1621            mov     a,#0xCD
06B8 C0E0      1622            push    acc
06BA 74CC      1623            mov     a,#0xCC
06BC C0E0      1624            push    acc
06BE 744C      1625            mov     a,#0x4C
06C0 C0E0      1626            push    acc
06C2 74BE      1627            mov     a,#0xBE
06C4 C0E0      1628            push    acc
06C6 8C82      1629            mov     dpl,r4
06C8 8D83      1630            mov     dph,r5
06CA 8EF0      1631            mov     b,r6
06CC EF        1632            mov     a,r7
06CD 120100    1633            lcall   ___fslt
06D0 AC82      1634            mov     r4,dpl
06D2 E581      1635            mov     a,sp
06D4 24FC      1636            add     a,#0xfc
06D6 F581      1637            mov     sp,a
06D8 EC        1638            mov     a,r4
06D9 6001      1639            jz      L014004?
06DB           1640   L014003?:
06DB           1641   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:389: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
06DB 75820B    1642            mov     dpl,#0x0B
06DE 120100    1643            lcall   _Volts_at_Pin
06E1 8582D0    1644            mov     _turncar_vleft_1_91,dpl
06E4 8583D1    1645            mov     (_turncar_vleft_1_91 + 1),dph
06E7 85F0D2    1646            mov     (_turncar_vleft_1_91 + 2),b
06EA F5D3      1647            mov     (_turncar_vleft_1_91 + 3),a
06EC           1648   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:390: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
06EC 75820C    1649            mov     dpl,#0x0C
06EF 120100    1650            lcall   _Volts_at_Pin
06F2 858220    1651            mov     _turncar_vright_1_91,dpl
06F5 858321    1652            mov     (_turncar_vright_1_91 + 1),dph
06F8 85F022    1653            mov     (_turncar_vright_1_91 + 2),b
06FB F523      1654            mov     (_turncar_vright_1_91 + 3),a
06FD 020100    1655            ljmp    L014002?
0700           1656   L014004?:
0700           1657   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:394: pwm_Right0 = -1;                 
0700 7580FF    1658            mov     _pwm_Right0,#0xFF
0703 22        1659            ret
0704           1660   L014012?:
0704           1661   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:397: else if (leftright == 1) {
0704 BA0110    1662            cjne    r2,#0x01,L014025?
0707 BB0010    1663            cjne    r3,#0x00,L014025?
070A 8001      1664            sjmp    L014026?
070C           1665   L014025?:
070C 22        1666            ret
070D           1667   L014026?:
070D           1668   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:399: pwm_Left1 = 50;
070D 75C032    1669            mov     _pwm_Left1,#0x32
0710           1670   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:401: waitms(1000);
0710 9003E8    1671            mov     dptr,#0x03E8
0713 120100    1672            lcall   _waitms
0716           1673   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:403: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0716 75820B    1674            mov     dpl,#0x0B
0719 120100    1675            lcall   _Volts_at_Pin
071C 8582D0    1676            mov     _turncar_vleft_1_91,dpl
071F 8583D1    1677            mov     (_turncar_vleft_1_91 + 1),dph
0722 85F0D2    1678            mov     (_turncar_vleft_1_91 + 2),b
0725 F5D3      1679            mov     (_turncar_vleft_1_91 + 3),a
0727           1680   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:404: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0727 75820C    1681            mov     dpl,#0x0C
072A 120100    1682            lcall   _Volts_at_Pin
072D 858220    1683            mov     _turncar_vright_1_91,dpl
0730 858321    1684            mov     (_turncar_vright_1_91 + 1),dph
0733 85F022    1685            mov     (_turncar_vright_1_91 + 2),b
0736 F523      1686            mov     (_turncar_vright_1_91 + 3),a
0738           1687   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:406: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0738           1688   L014006?:
0738 C020      1689            push    _turncar_vright_1_91
073A C021      1690            push    (_turncar_vright_1_91 + 1)
073C C022      1691            push    (_turncar_vright_1_91 + 2)
073E C023      1692            push    (_turncar_vright_1_91 + 3)
0740 85D082    1693            mov     dpl,_turncar_vleft_1_91
0743 85D183    1694            mov     dph,(_turncar_vleft_1_91 + 1)
0746 85D2F0    1695            mov     b,(_turncar_vleft_1_91 + 2)
0749 E5D3      1696            mov     a,(_turncar_vleft_1_91 + 3)
074B 120100    1697            lcall   ___fssub
074E AA82      1698            mov     r2,dpl
0750 AB83      1699            mov     r3,dph
0752 ACF0      1700            mov     r4,b
0754 FD        1701            mov     r5,a
0755 E581      1702            mov     a,sp
0757 24FC      1703            add     a,#0xfc
0759 F581      1704            mov     sp,a
075B 74CD      1705            mov     a,#0xCD
075D C0E0      1706            push    acc
075F 74CC      1707            mov     a,#0xCC
0761 C0E0      1708            push    acc
0763 744C      1709            mov     a,#0x4C
0765 C0E0      1710            push    acc
0767 743E      1711            mov     a,#0x3E
0769 C0E0      1712            push    acc
076B 8A82      1713            mov     dpl,r2
076D 8B83      1714            mov     dph,r3
076F 8CF0      1715            mov     b,r4
0771 ED        1716            mov     a,r5
0772 120100    1717            lcall   ___fsgt
0775 AA82      1718            mov     r2,dpl
0777 E581      1719            mov     a,sp
0779 24FC      1720            add     a,#0xfc
077B F581      1721            mov     sp,a
077D EA        1722            mov     a,r2
077E 7001      1723            jnz     L014007?
0780 C020      1724            push    _turncar_vright_1_91
0782 C021      1725            push    (_turncar_vright_1_91 + 1)
0784 C022      1726            push    (_turncar_vright_1_91 + 2)
0786 C023      1727            push    (_turncar_vright_1_91 + 3)
0788 85D082    1728            mov     dpl,_turncar_vleft_1_91
078B 85D183    1729            mov     dph,(_turncar_vleft_1_91 + 1)
078E 85D2F0    1730            mov     b,(_turncar_vleft_1_91 + 2)
0791 E5D3      1731            mov     a,(_turncar_vleft_1_91 + 3)
0793 120100    1732            lcall   ___fssub
0796 AA82      1733            mov     r2,dpl
0798 AB83      1734            mov     r3,dph
079A ACF0      1735            mov     r4,b
079C FD        1736            mov     r5,a
079D E581      1737            mov     a,sp
079F 24FC      1738            add     a,#0xfc
07A1 F581      1739            mov     sp,a
07A3 74CD      1740            mov     a,#0xCD
07A5 C0E0      1741            push    acc
07A7 74CC      1742            mov     a,#0xCC
07A9 C0E0      1743            push    acc
07AB 744C      1744            mov     a,#0x4C
07AD C0E0      1745            push    acc
07AF 74BE      1746            mov     a,#0xBE
07B1 C0E0      1747            push    acc
07B3 8A82      1748            mov     dpl,r2
07B5 8B83      1749            mov     dph,r3
07B7 8CF0      1750            mov     b,r4
07B9 ED        1751            mov     a,r5
07BA 120100    1752            lcall   ___fslt
07BD AA82      1753            mov     r2,dpl
07BF E581      1754            mov     a,sp
07C1 24FC      1755            add     a,#0xfc
07C3 F581      1756            mov     sp,a
07C5 EA        1757            mov     a,r2
07C6 6001      1758            jz      L014008?
07C8           1759   L014007?:
07C8           1760   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:408: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
07C8 75820B    1761            mov     dpl,#0x0B
07CB 120100    1762            lcall   _Volts_at_Pin
07CE 8582D0    1763            mov     _turncar_vleft_1_91,dpl
07D1 8583D1    1764            mov     (_turncar_vleft_1_91 + 1),dph
07D4 85F0D2    1765            mov     (_turncar_vleft_1_91 + 2),b
07D7 F5D3      1766            mov     (_turncar_vleft_1_91 + 3),a
07D9           1767   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:409: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
07D9 75820C    1768            mov     dpl,#0x0C
07DC 120100    1769            lcall   _Volts_at_Pin
07DF 858220    1770            mov     _turncar_vright_1_91,dpl
07E2 858321    1771            mov     (_turncar_vright_1_91 + 1),dph
07E5 85F022    1772            mov     (_turncar_vright_1_91 + 2),b
07E8 F523      1773            mov     (_turncar_vright_1_91 + 3),a
07EA 020100    1774            ljmp    L014006?
07ED           1775   L014008?:
07ED           1776   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:413: pwm_Left1 = -1; 
07ED 75C0FF    1777            mov     _pwm_Left1,#0xFF
07F0 22        1778            ret
07F1           1779   ;------------------------------------------------------------
07F1           1780   ;Allocation info for local variables in function 'uturn'
07F1           1781   ;------------------------------------------------------------
07F1           1782   ;vleft                     Allocated with name '_uturn_vleft_1_96'
07F1           1783   ;vright                    Allocated with name '_uturn_vright_1_96'
07F1           1784   ;------------------------------------------------------------
07F1           1785   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:417: void uturn () {
07F1           1786   ;        -----------------------------------------
07F1           1787   ;         function uturn
07F1           1788   ;        -----------------------------------------
07F1           1789   _uturn:
07F1           1790   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:421: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
07F1 75820B    1791            mov     dpl,#0x0B
07F4 120100    1792            lcall   _Volts_at_Pin
07F7 858270    1793            mov     _uturn_vleft_1_96,dpl
07FA 858371    1794            mov     (_uturn_vleft_1_96 + 1),dph
07FD 85F072    1795            mov     (_uturn_vleft_1_96 + 2),b
0800 F573      1796            mov     (_uturn_vleft_1_96 + 3),a
0802           1797   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:422: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0802 75820C    1798            mov     dpl,#0x0C
0805 120100    1799            lcall   _Volts_at_Pin
0808 8582C0    1800            mov     _uturn_vright_1_96,dpl
080B 8583C1    1801            mov     (_uturn_vright_1_96 + 1),dph
080E 85F0C2    1802            mov     (_uturn_vright_1_96 + 2),b
0811 F5C3      1803            mov     (_uturn_vright_1_96 + 3),a
0813           1804   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:424: pwm_Left0 = -1;
0813 7500FF    1805            mov     _pwm_Left0,#0xFF
0816           1806   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:425: pwm_Left1 = 50;
0816 75C032    1807            mov     _pwm_Left1,#0x32
0819           1808   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:426: pwm_Right0 = -1;
0819 7580FF    1809            mov     _pwm_Right0,#0xFF
081C           1810   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:427: pwm_Right1 = 50;
081C 754032    1811            mov     _pwm_Right1,#0x32
081F           1812   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:429: waitms(4000);
081F 900FA0    1813            mov     dptr,#0x0FA0
0822 120100    1814            lcall   _waitms
0825           1815   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:431: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0825           1816   L015002?:
0825 C0C0      1817            push    _uturn_vright_1_96
0827 C0C1      1818            push    (_uturn_vright_1_96 + 1)
0829 C0C2      1819            push    (_uturn_vright_1_96 + 2)
082B C0C3      1820            push    (_uturn_vright_1_96 + 3)
082D 857082    1821            mov     dpl,_uturn_vleft_1_96
0830 857183    1822            mov     dph,(_uturn_vleft_1_96 + 1)
0833 8572F0    1823            mov     b,(_uturn_vleft_1_96 + 2)
0836 E573      1824            mov     a,(_uturn_vleft_1_96 + 3)
0838 120100    1825            lcall   ___fssub
083B AA82      1826            mov     r2,dpl
083D AB83      1827            mov     r3,dph
083F ACF0      1828            mov     r4,b
0841 FD        1829            mov     r5,a
0842 E581      1830            mov     a,sp
0844 24FC      1831            add     a,#0xfc
0846 F581      1832            mov     sp,a
0848 74CD      1833            mov     a,#0xCD
084A C0E0      1834            push    acc
084C 74CC      1835            mov     a,#0xCC
084E C0E0      1836            push    acc
0850 744C      1837            mov     a,#0x4C
0852 C0E0      1838            push    acc
0854 743E      1839            mov     a,#0x3E
0856 C0E0      1840            push    acc
0858 8A82      1841            mov     dpl,r2
085A 8B83      1842            mov     dph,r3
085C 8CF0      1843            mov     b,r4
085E ED        1844            mov     a,r5
085F 120100    1845            lcall   ___fsgt
0862 AA82      1846            mov     r2,dpl
0864 E581      1847            mov     a,sp
0866 24FC      1848            add     a,#0xfc
0868 F581      1849            mov     sp,a
086A EA        1850            mov     a,r2
086B 7001      1851            jnz     L015003?
086D C0C0      1852            push    _uturn_vright_1_96
086F C0C1      1853            push    (_uturn_vright_1_96 + 1)
0871 C0C2      1854            push    (_uturn_vright_1_96 + 2)
0873 C0C3      1855            push    (_uturn_vright_1_96 + 3)
0875 857082    1856            mov     dpl,_uturn_vleft_1_96
0878 857183    1857            mov     dph,(_uturn_vleft_1_96 + 1)
087B 8572F0    1858            mov     b,(_uturn_vleft_1_96 + 2)
087E E573      1859            mov     a,(_uturn_vleft_1_96 + 3)
0880 120100    1860            lcall   ___fssub
0883 AA82      1861            mov     r2,dpl
0885 AB83      1862            mov     r3,dph
0887 ACF0      1863            mov     r4,b
0889 FD        1864            mov     r5,a
088A E581      1865            mov     a,sp
088C 24FC      1866            add     a,#0xfc
088E F581      1867            mov     sp,a
0890 74CD      1868            mov     a,#0xCD
0892 C0E0      1869            push    acc
0894 74CC      1870            mov     a,#0xCC
0896 C0E0      1871            push    acc
0898 744C      1872            mov     a,#0x4C
089A C0E0      1873            push    acc
089C 74BE      1874            mov     a,#0xBE
089E C0E0      1875            push    acc
08A0 8A82      1876            mov     dpl,r2
08A2 8B83      1877            mov     dph,r3
08A4 8CF0      1878            mov     b,r4
08A6 ED        1879            mov     a,r5
08A7 120100    1880            lcall   ___fslt
08AA AA82      1881            mov     r2,dpl
08AC E581      1882            mov     a,sp
08AE 24FC      1883            add     a,#0xfc
08B0 F581      1884            mov     sp,a
08B2 EA        1885            mov     a,r2
08B3 6001      1886            jz      L015005?
08B5           1887   L015003?:
08B5           1888   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:433: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
08B5 75820B    1889            mov     dpl,#0x0B
08B8 120100    1890            lcall   _Volts_at_Pin
08BB 858270    1891            mov     _uturn_vleft_1_96,dpl
08BE 858371    1892            mov     (_uturn_vleft_1_96 + 1),dph
08C1 85F072    1893            mov     (_uturn_vleft_1_96 + 2),b
08C4 F573      1894            mov     (_uturn_vleft_1_96 + 3),a
08C6           1895   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:434: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
08C6 75820C    1896            mov     dpl,#0x0C
08C9 120100    1897            lcall   _Volts_at_Pin
08CC 8582C0    1898            mov     _uturn_vright_1_96,dpl
08CF 8583C1    1899            mov     (_uturn_vright_1_96 + 1),dph
08D2 85F0C2    1900            mov     (_uturn_vright_1_96 + 2),b
08D5 F5C3      1901            mov     (_uturn_vright_1_96 + 3),a
08D7 020100    1902            ljmp    L015002?
08DA           1903   L015005?:
08DA 22        1904            ret
08DB           1905   ;------------------------------------------------------------
08DB           1906   ;Allocation info for local variables in function 'main'
08DB           1907   ;------------------------------------------------------------
08DB           1908   ;------------------------------------------------------------
08DB           1909   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:438: void main (void)
08DB           1910   ;        -----------------------------------------
08DB           1911   ;         function main
08DB           1912   ;        -----------------------------------------
08DB           1913   _main:
08DB           1914   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:441: MOTOR_LEFT0 =0;
08DB C295      1915            clr     _P1_5
08DD           1916   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:442: MOTOR_LEFT1 =0;
08DD C296      1917            clr     _P1_6
08DF           1918   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:443: MOTOR_RIGHT0 =0;
08DF C2A0      1919            clr     _P2_0
08E1           1920   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:444: MOTOR_RIGHT1 =0;
08E1 C2A1      1921            clr     _P2_1
08E3           1922   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:446: currentstate = 1;        //initialize the car to be stopped
08E3 758001    1923            mov     _currentstate,#0x01
08E6           1924   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:447: currentcmd = 0;          //initialize the command to be null
08E6 75C000    1925            mov     _currentcmd,#0x00
08E9           1926   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:450: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
08E9 7410      1927            mov     a,#__str_2
08EB C0E0      1928            push    acc
08ED 74AA      1929            mov     a,#(__str_2 >> 8)
08EF C0E0      1930            push    acc
08F1 7480      1931            mov     a,#0x80
08F3 C0E0      1932            push    acc
08F5 120100    1933            lcall   _printf
08F8 1581      1934            dec     sp
08FA 1581      1935            dec     sp
08FC 1581      1936            dec     sp
08FE           1937   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:459: InitPinADC(2, 3); // Configure P2.3 as analog input
08FE 756003    1938            mov     _InitPinADC_PARM_2,#0x03
0901 758202    1939            mov     dpl,#0x02
0904 120100    1940            lcall   _InitPinADC
0907           1941   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:460: InitPinADC(2, 4); // Configure P2.4 as analog input
0907 756004    1942            mov     _InitPinADC_PARM_2,#0x04
090A 758202    1943            mov     dpl,#0x02
090D 120100    1944            lcall   _InitPinADC
0910           1945   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:461: InitPinADC(1, 0);
0910 756000    1946            mov     _InitPinADC_PARM_2,#0x00
0913 758201    1947            mov     dpl,#0x01
0916 120100    1948            lcall   _InitPinADC
0919           1949   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:462: InitADC();
0919 120100    1950            lcall   _InitADC
091C           1951   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:464: while(1)
091C           1952   L016026?:
091C           1953   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:466: readData(); //check for incoming commands
091C 120100    1954            lcall   _readData
091F           1955   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:478: switch (currentstate) {
091F AA80      1956            mov     r2,_currentstate
0921 BA0190    1957            cjne    r2,#0x01,L016042?
0924 8001      1958            sjmp    L016001?
0926           1959   L016042?:
0926 BA0210    1960            cjne    r2,#0x02,L016043?
0929 8001      1961            sjmp    L016002?
092B           1962   L016043?:
092B           1963   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:479: case 1:
092B BA0390    1964            cjne    r2,#0x03,L016004?
092E 8001      1965            sjmp    L016003?
0930           1966   L016001?:
0930           1967   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:480: linetrack(0);    //forwards
0930 900000    1968            mov     dptr,#0x0000
0933 120100    1969            lcall   _linetrack
0936           1970   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:481: break;
0936           1971   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:482: case 2:
0936 8001      1972            sjmp    L016004?
0938           1973   L016002?:
0938           1974   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:483: linetrack(1);    //backwards
0938 900001    1975            mov     dptr,#0x0001
093B 120100    1976            lcall   _linetrack
093E           1977   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:484: break;
093E           1978   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:485: case 3:
093E 8001      1979            sjmp    L016004?
0940           1980   L016003?:
0940           1981   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:486: stopcar();               //stop car
0940 120100    1982            lcall   _stopcar
0943           1983   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:488: }
0943           1984   L016004?:
0943           1985   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:490: switch (currentcmd) {
0943 E5C0      1986            mov     a,_currentcmd
0945 FA        1987            mov     r2,a
0946 30E710    1988            jnb     acc.7,L016045?
0949 020100    1989            ljmp    L016023?
094C           1990   L016045?:
094C C3        1991            clr     c
094D 7486      1992            mov     a,#(0x06 ^ 0x80)
094F 8AF0      1993            mov     b,r2
0951 63F080    1994            xrl     b,#0x80
0954 95F0      1995            subb    a,b
0956 5001      1996            jnc     L016046?
0958 020100    1997            ljmp    L016023?
095B           1998   L016046?:
095B EA        1999            mov     a,r2
095C 2A        2000            add     a,r2
095D 2A        2001            add     a,r2
095E 90ACD0    2002            mov     dptr,#L016047?
0961 73        2003            jmp     @a+dptr
0962           2004   L016047?:
0962 020100    2005            ljmp    L016005?
0965 020100    2006            ljmp    L016011?
0968 020100    2007            ljmp    L016015?
096B 020100    2008            ljmp    L016019?
096E 020100    2009            ljmp    L016020?
0971 020100    2010            ljmp    L016021?
0974 020100    2011            ljmp    L016022?
0977           2012   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:492: case 0 :
0977           2013   L016005?:
0977           2014   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:494: if (currentstate == 1) {
0977 7401      2015            mov     a,#0x01
0979 B58050    2016            cjne    a,_currentstate,L016026?
097C           2017   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:495: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 && Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
097C 75820B    2018            mov     dpl,#0x0B
097F 120100    2019            lcall   _Volts_at_Pin
0982 AA82      2020            mov     r2,dpl
0984 AB83      2021            mov     r3,dph
0986 ACF0      2022            mov     r4,b
0988 FD        2023            mov     r5,a
0989 E4        2024            clr     a
098A C0E0      2025            push    acc
098C C0E0      2026            push    acc
098E 7480      2027            mov     a,#0x80
0990 C0E0      2028            push    acc
0992 743F      2029            mov     a,#0x3F
0994 C0E0      2030            push    acc
0996 8A82      2031            mov     dpl,r2
0998 8B83      2032            mov     dph,r3
099A 8CF0      2033            mov     b,r4
099C ED        2034            mov     a,r5
099D 120100    2035            lcall   ___fsgt
09A0 AA82      2036            mov     r2,dpl
09A2 E581      2037            mov     a,sp
09A4 24FC      2038            add     a,#0xfc
09A6 F581      2039            mov     sp,a
09A8 EA        2040            mov     a,r2
09A9 7001      2041            jnz     L016050?
09AB 020100    2042            ljmp    L016026?
09AE           2043   L016050?:
09AE 75820C    2044            mov     dpl,#0x0C
09B1 120100    2045            lcall   _Volts_at_Pin
09B4 AA82      2046            mov     r2,dpl
09B6 AB83      2047            mov     r3,dph
09B8 ACF0      2048            mov     r4,b
09BA FD        2049            mov     r5,a
09BB E4        2050            clr     a
09BC C0E0      2051            push    acc
09BE C0E0      2052            push    acc
09C0 7480      2053            mov     a,#0x80
09C2 C0E0      2054            push    acc
09C4 743F      2055            mov     a,#0x3F
09C6 C0E0      2056            push    acc
09C8 8A82      2057            mov     dpl,r2
09CA 8B83      2058            mov     dph,r3
09CC 8CF0      2059            mov     b,r4
09CE ED        2060            mov     a,r5
09CF 120100    2061            lcall   ___fsgt
09D2 AA82      2062            mov     r2,dpl
09D4 E581      2063            mov     a,sp
09D6 24FC      2064            add     a,#0xfc
09D8 F581      2065            mov     sp,a
09DA EA        2066            mov     a,r2
09DB 7001      2067            jnz     L016051?
09DD 020100    2068            ljmp    L016026?
09E0           2069   L016051?:
09E0           2070   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:497: pwm_Left1 = 35;
09E0 75C023    2071            mov     _pwm_Left1,#0x23
09E3           2072   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:498: pwm_Left0 = -1;
09E3 7500FF    2073            mov     _pwm_Left0,#0xFF
09E6           2074   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:499: pwm_Right0 = 35;
09E6 758023    2075            mov     _pwm_Right0,#0x23
09E9           2076   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:500: pwm_Right1 = -1;                                                 
09E9 7540FF    2077            mov     _pwm_Right1,#0xFF
09EC           2078   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:501: waitms(1500);
09EC 9005DC    2079            mov     dptr,#0x05DC
09EF 120100    2080            lcall   _waitms
09F2           2081   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:504: break;
09F2 020100    2082            ljmp    L016026?
09F5           2083   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:505: case 1 :
09F5           2084   L016011?:
09F5           2085   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:507: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 && Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
09F5 75820B    2086            mov     dpl,#0x0B
09F8 120100    2087            lcall   _Volts_at_Pin
09FB AA82      2088            mov     r2,dpl
09FD AB83      2089            mov     r3,dph
09FF ACF0      2090            mov     r4,b
0A01 FD        2091            mov     r5,a
0A02 E4        2092            clr     a
0A03 C0E0      2093            push    acc
0A05 C0E0      2094            push    acc
0A07 7480      2095            mov     a,#0x80
0A09 C0E0      2096            push    acc
0A0B 743F      2097            mov     a,#0x3F
0A0D C0E0      2098            push    acc
0A0F 8A82      2099            mov     dpl,r2
0A11 8B83      2100            mov     dph,r3
0A13 8CF0      2101            mov     b,r4
0A15 ED        2102            mov     a,r5
0A16 120100    2103            lcall   ___fsgt
0A19 AA82      2104            mov     r2,dpl
0A1B E581      2105            mov     a,sp
0A1D 24FC      2106            add     a,#0xfc
0A1F F581      2107            mov     sp,a
0A21 EA        2108            mov     a,r2
0A22 7001      2109            jnz     L016052?
0A24 020100    2110            ljmp    L016026?
0A27           2111   L016052?:
0A27 75820C    2112            mov     dpl,#0x0C
0A2A 120100    2113            lcall   _Volts_at_Pin
0A2D AA82      2114            mov     r2,dpl
0A2F AB83      2115            mov     r3,dph
0A31 ACF0      2116            mov     r4,b
0A33 FD        2117            mov     r5,a
0A34 E4        2118            clr     a
0A35 C0E0      2119            push    acc
0A37 C0E0      2120            push    acc
0A39 7480      2121            mov     a,#0x80
0A3B C0E0      2122            push    acc
0A3D 743F      2123            mov     a,#0x3F
0A3F C0E0      2124            push    acc
0A41 8A82      2125            mov     dpl,r2
0A43 8B83      2126            mov     dph,r3
0A45 8CF0      2127            mov     b,r4
0A47 ED        2128            mov     a,r5
0A48 120100    2129            lcall   ___fsgt
0A4B AA82      2130            mov     r2,dpl
0A4D E581      2131            mov     a,sp
0A4F 24FC      2132            add     a,#0xfc
0A51 F581      2133            mov     sp,a
0A53 EA        2134            mov     a,r2
0A54 7001      2135            jnz     L016053?
0A56 020100    2136            ljmp    L016026?
0A59           2137   L016053?:
0A59           2138   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:509: pwm_Left1 = 35;
0A59 75C023    2139            mov     _pwm_Left1,#0x23
0A5C           2140   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:510: pwm_Left0 = -1;
0A5C 7500FF    2141            mov     _pwm_Left0,#0xFF
0A5F           2142   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:511: pwm_Right0 = 35;
0A5F 758023    2143            mov     _pwm_Right0,#0x23
0A62           2144   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:512: pwm_Right1 = -1;                                                 
0A62 7540FF    2145            mov     _pwm_Right1,#0xFF
0A65           2146   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:513: waitms(1500);
0A65 9005DC    2147            mov     dptr,#0x05DC
0A68 120100    2148            lcall   _waitms
0A6B           2149   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:515: turncar(0); //0 = left
0A6B 900000    2150            mov     dptr,#0x0000
0A6E 120100    2151            lcall   _turncar
0A71           2152   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:516: currentcmd = 0;
0A71 75C000    2153            mov     _currentcmd,#0x00
0A74           2154   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:519: break;
0A74 020100    2155            ljmp    L016026?
0A77           2156   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:522: case 2 :
0A77           2157   L016015?:
0A77           2158   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:524: if (Volts_at_Pin(LQFP32_MUX_P2_4) > 1 || Volts_at_Pin(LQFP32_MUX_P2_3) > 1) {
0A77 75820C    2159            mov     dpl,#0x0C
0A7A 120100    2160            lcall   _Volts_at_Pin
0A7D AA82      2161            mov     r2,dpl
0A7F AB83      2162            mov     r3,dph
0A81 ACF0      2163            mov     r4,b
0A83 FD        2164            mov     r5,a
0A84 E4        2165            clr     a
0A85 C0E0      2166            push    acc
0A87 C0E0      2167            push    acc
0A89 7480      2168            mov     a,#0x80
0A8B C0E0      2169            push    acc
0A8D 743F      2170            mov     a,#0x3F
0A8F C0E0      2171            push    acc
0A91 8A82      2172            mov     dpl,r2
0A93 8B83      2173            mov     dph,r3
0A95 8CF0      2174            mov     b,r4
0A97 ED        2175            mov     a,r5
0A98 120100    2176            lcall   ___fsgt
0A9B AA82      2177            mov     r2,dpl
0A9D E581      2178            mov     a,sp
0A9F 24FC      2179            add     a,#0xfc
0AA1 F581      2180            mov     sp,a
0AA3 EA        2181            mov     a,r2
0AA4 7001      2182            jnz     L016016?
0AA6 75820B    2183            mov     dpl,#0x0B
0AA9 120100    2184            lcall   _Volts_at_Pin
0AAC AA82      2185            mov     r2,dpl
0AAE AB83      2186            mov     r3,dph
0AB0 ACF0      2187            mov     r4,b
0AB2 FD        2188            mov     r5,a
0AB3 E4        2189            clr     a
0AB4 C0E0      2190            push    acc
0AB6 C0E0      2191            push    acc
0AB8 7480      2192            mov     a,#0x80
0ABA C0E0      2193            push    acc
0ABC 743F      2194            mov     a,#0x3F
0ABE C0E0      2195            push    acc
0AC0 8A82      2196            mov     dpl,r2
0AC2 8B83      2197            mov     dph,r3
0AC4 8CF0      2198            mov     b,r4
0AC6 ED        2199            mov     a,r5
0AC7 120100    2200            lcall   ___fsgt
0ACA AA82      2201            mov     r2,dpl
0ACC E581      2202            mov     a,sp
0ACE 24FC      2203            add     a,#0xfc
0AD0 F581      2204            mov     sp,a
0AD2 EA        2205            mov     a,r2
0AD3 7001      2206            jnz     L016055?
0AD5 020100    2207            ljmp    L016026?
0AD8           2208   L016055?:
0AD8           2209   L016016?:
0AD8           2210   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:525: printf("\n\r reached intersection :D");
0AD8 7450      2211            mov     a,#__str_3
0ADA C0E0      2212            push    acc
0ADC 74B0      2213            mov     a,#(__str_3 >> 8)
0ADE C0E0      2214            push    acc
0AE0 7480      2215            mov     a,#0x80
0AE2 C0E0      2216            push    acc
0AE4 120100    2217            lcall   _printf
0AE7 1581      2218            dec     sp
0AE9 1581      2219            dec     sp
0AEB 1581      2220            dec     sp
0AED           2221   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:526: pwm_Left1 = 35;
0AED 75C023    2222            mov     _pwm_Left1,#0x23
0AF0           2223   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:527: pwm_Left0 = -1;
0AF0 7500FF    2224            mov     _pwm_Left0,#0xFF
0AF3           2225   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:528: pwm_Right0 = 35;
0AF3 758023    2226            mov     _pwm_Right0,#0x23
0AF6           2227   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:529: pwm_Right1 = -1;
0AF6 7540FF    2228            mov     _pwm_Right1,#0xFF
0AF9           2229   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:530: waitms(1500);
0AF9 9005DC    2230            mov     dptr,#0x05DC
0AFC 120100    2231            lcall   _waitms
0AFF           2232   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:532: turncar(1); //1 = right
0AFF 900001    2233            mov     dptr,#0x0001
0B02 120100    2234            lcall   _turncar
0B05           2235   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:533: currentcmd = 0;
0B05 75C000    2236            mov     _currentcmd,#0x00
0B08           2237   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:535: break;
0B08 020100    2238            ljmp    L016026?
0B0B           2239   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:538: case 3 :
0B0B           2240   L016019?:
0B0B           2241   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:539: currentstate = 1;
0B0B 758001    2242            mov     _currentstate,#0x01
0B0E           2243   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:540: currentcmd = 0;
0B0E 75C000    2244            mov     _currentcmd,#0x00
0B11           2245   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:541: break;
0B11 020100    2246            ljmp    L016026?
0B14           2247   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:544: case 4 :
0B14           2248   L016020?:
0B14           2249   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:545: currentstate = 2;
0B14 758002    2250            mov     _currentstate,#0x02
0B17           2251   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:546: currentcmd = 0;
0B17 75C000    2252            mov     _currentcmd,#0x00
0B1A           2253   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:547: break;
0B1A 020100    2254            ljmp    L016026?
0B1D           2255   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:550: case 5 :
0B1D           2256   L016021?:
0B1D           2257   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:551: currentstate = 3;
0B1D 758003    2258            mov     _currentstate,#0x03
0B20           2259   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:552: currentcmd = 0;
0B20 75C000    2260            mov     _currentcmd,#0x00
0B23           2261   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:553: break;
0B23 020100    2262            ljmp    L016026?
0B26           2263   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:556: case 6 :
0B26           2264   L016022?:
0B26           2265   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:557: uturn();  //uturn
0B26 120100    2266            lcall   _uturn
0B29           2267   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:558: currentcmd = 0;
0B29 75C000    2268            mov     _currentcmd,#0x00
0B2C           2269   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:559: break;
0B2C 020100    2270            ljmp    L016026?
0B2F           2271   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:560: default: 
0B2F           2272   L016023?:
0B2F           2273   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:561: currentstate = 1;
0B2F 758001    2274            mov     _currentstate,#0x01
0B32           2275   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:562: }
0B32 020100    2276            ljmp    L016026?
0B35           2277            rseg R_CSEG
0B35           2278   
0000           2279            rseg R_XINIT
0000           2280   
0000           2281            rseg R_CONST
0000           2282   __str_0:
0000 63757272  2283            db 'current command is %d, commandflag = %d'
     656E7420
     636F6D6D
     616E6420
     69732025
     642C2063
     6F6D6D61
     6E64666C
     6167203D
     202564
0027 0D        2284            db 0x0D
0028 0A        2285            db 0x0A
0029 00        2286            db 0x00
002A           2287   __str_1:
002A 322E3320  2288            db '2.3 = %f, 2.4 = %f, LeftMotor = %4d, RightMotor = %4d, comma'
     3D202566
     2C20322E
     34203D20
     25662C20
     4C656674
     4D6F746F
     72203D20
     2534642C
     20526967
     68744D6F
     746F7220
     3D202534
     642C2063
     6F6D6D61
0066 6E643A20  2289            db 'nd: %d'
     2564
006C 0D        2290            db 0x0D
006D 0A        2291            db 0x0A
006E 00        2292            db 0x00
006F           2293   __str_2:
006F 1B        2294            db 0x1B
0070 5B324A    2295            db '[2J'
0073 00        2296            db 0x00
0074           2297   __str_3:
0074 0A        2298            db 0x0A
0075 0D        2299            db 0x0D
0076 20726561  2300            db ' reached intersection :D'
     63686564
     20696E74
     65727365
     6374696F
     6E203A44
008E 00        2301            db 0x00
008F           2302   
002E           2303            CSEG
002E           2304   
002E           2305   end
