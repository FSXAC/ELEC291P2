0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Mar 31 13:03:32 2017
0000              5   ;--------------------------------------------------------
                  5   $name motors
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _uturn
0000             30            public _turncar
0000             31            public _stopcar
0000             32            public _linetrack
0000             33            public _readData
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _forward_backward
0000             39            public _Timer2_ISR
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _currentstate
0000             44            public _currentcmd
0000             45            public _direction
0000             46            public _pwm_Right1
0000             47            public _pwm_Right0
0000             48            public _pwm_Left1
0000             49            public _pwm_Left0
0000             50            public _pwm_both
0000             51            public _mode
0000             52            public _pwm_count
0000             53   ;--------------------------------------------------------
0000             54   ; Special Function Registers
0000             55   ;--------------------------------------------------------
0000             56   _P0             DATA 0x80
0000             57   _SP             DATA 0x81
0000             58   _DPL            DATA 0x82
0000             59   _DPH            DATA 0x83
0000             60   _EMI0TC         DATA 0x84
0000             61   _EMI0CF         DATA 0x85
0000             62   _OSCLCN         DATA 0x86
0000             63   _PCON           DATA 0x87
0000             64   _TCON           DATA 0x88
0000             65   _TMOD           DATA 0x89
0000             66   _TL0            DATA 0x8a
0000             67   _TL1            DATA 0x8b
0000             68   _TH0            DATA 0x8c
0000             69   _TH1            DATA 0x8d
0000             70   _CKCON          DATA 0x8e
0000             71   _PSCTL          DATA 0x8f
0000             72   _P1             DATA 0x90
0000             73   _TMR3CN         DATA 0x91
0000             74   _TMR4CN         DATA 0x91
0000             75   _TMR3RLL        DATA 0x92
0000             76   _TMR4RLL        DATA 0x92
0000             77   _TMR3RLH        DATA 0x93
0000             78   _TMR4RLH        DATA 0x93
0000             79   _TMR3L          DATA 0x94
0000             80   _TMR4L          DATA 0x94
0000             81   _TMR3H          DATA 0x95
0000             82   _TMR4H          DATA 0x95
0000             83   _USB0ADR        DATA 0x96
0000             84   _USB0DAT        DATA 0x97
0000             85   _SCON           DATA 0x98
0000             86   _SCON0          DATA 0x98
0000             87   _SBUF           DATA 0x99
0000             88   _SBUF0          DATA 0x99
0000             89   _CPT1CN         DATA 0x9a
0000             90   _CPT0CN         DATA 0x9b
0000             91   _CPT1MD         DATA 0x9c
0000             92   _CPT0MD         DATA 0x9d
0000             93   _CPT1MX         DATA 0x9e
0000             94   _CPT0MX         DATA 0x9f
0000             95   _P2             DATA 0xa0
0000             96   _SPI0CFG        DATA 0xa1
0000             97   _SPI0CKR        DATA 0xa2
0000             98   _SPI0DAT        DATA 0xa3
0000             99   _P0MDOUT        DATA 0xa4
0000            100   _P1MDOUT        DATA 0xa5
0000            101   _P2MDOUT        DATA 0xa6
0000            102   _P3MDOUT        DATA 0xa7
0000            103   _IE             DATA 0xa8
0000            104   _CLKSEL         DATA 0xa9
0000            105   _EMI0CN         DATA 0xaa
0000            106   __XPAGE         DATA 0xaa
0000            107   _SBCON1         DATA 0xac
0000            108   _P4MDOUT        DATA 0xae
0000            109   _PFE0CN         DATA 0xaf
0000            110   _P3             DATA 0xb0
0000            111   _OSCXCN         DATA 0xb1
0000            112   _OSCICN         DATA 0xb2
0000            113   _OSCICL         DATA 0xb3
0000            114   _SBRLL1         DATA 0xb4
0000            115   _SBRLH1         DATA 0xb5
0000            116   _FLSCL          DATA 0xb6
0000            117   _FLKEY          DATA 0xb7
0000            118   _IP             DATA 0xb8
0000            119   _CLKMUL         DATA 0xb9
0000            120   _SMBTC          DATA 0xb9
0000            121   _AMX0N          DATA 0xba
0000            122   _AMX0P          DATA 0xbb
0000            123   _ADC0CF         DATA 0xbc
0000            124   _ADC0L          DATA 0xbd
0000            125   _ADC0H          DATA 0xbe
0000            126   _SFRPAGE        DATA 0xbf
0000            127   _SMB0CN         DATA 0xc0
0000            128   _SMB1CN         DATA 0xc0
0000            129   _SMB0CF         DATA 0xc1
0000            130   _SMB1CF         DATA 0xc1
0000            131   _SMB0DAT        DATA 0xc2
0000            132   _SMB1DAT        DATA 0xc2
0000            133   _ADC0GTL        DATA 0xc3
0000            134   _ADC0GTH        DATA 0xc4
0000            135   _ADC0LTL        DATA 0xc5
0000            136   _ADC0LTH        DATA 0xc6
0000            137   _P4             DATA 0xc7
0000            138   _TMR2CN         DATA 0xc8
0000            139   _TMR5CN         DATA 0xc8
0000            140   _REG01CN        DATA 0xc9
0000            141   _TMR2RLL        DATA 0xca
0000            142   _TMR5RLL        DATA 0xca
0000            143   _TMR2RLH        DATA 0xcb
0000            144   _TMR5RLH        DATA 0xcb
0000            145   _TMR2L          DATA 0xcc
0000            146   _TMR5L          DATA 0xcc
0000            147   _TMR2H          DATA 0xcd
0000            148   _TMR5H          DATA 0xcd
0000            149   _SMB0ADM        DATA 0xce
0000            150   _SMB1ADM        DATA 0xce
0000            151   _SMB0ADR        DATA 0xcf
0000            152   _SMB1ADR        DATA 0xcf
0000            153   _PSW            DATA 0xd0
0000            154   _REF0CN         DATA 0xd1
0000            155   _SCON1          DATA 0xd2
0000            156   _SBUF1          DATA 0xd3
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2SKIP         DATA 0xd6
0000            160   _USB0XCN        DATA 0xd7
0000            161   _PCA0CN         DATA 0xd8
0000            162   _PCA0MD         DATA 0xd9
0000            163   _PCA0CPM0       DATA 0xda
0000            164   _PCA0CPM1       DATA 0xdb
0000            165   _PCA0CPM2       DATA 0xdc
0000            166   _PCA0CPM3       DATA 0xdd
0000            167   _PCA0CPM4       DATA 0xde
0000            168   _P3SKIP         DATA 0xdf
0000            169   _ACC            DATA 0xe0
0000            170   _XBR0           DATA 0xe1
0000            171   _XBR1           DATA 0xe2
0000            172   _XBR2           DATA 0xe3
0000            173   _IT01CF         DATA 0xe4
0000            174   _CKCON1         DATA 0xe4
0000            175   _SMOD1          DATA 0xe5
0000            176   _EIE1           DATA 0xe6
0000            177   _EIE2           DATA 0xe7
0000            178   _ADC0CN         DATA 0xe8
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPH1       DATA 0xea
0000            181   _PCA0CPL2       DATA 0xeb
0000            182   _PCA0CPH2       DATA 0xec
0000            183   _PCA0CPL3       DATA 0xed
0000            184   _PCA0CPH3       DATA 0xee
0000            185   _RSTSRC         DATA 0xef
0000            186   _B              DATA 0xf0
0000            187   _P0MDIN         DATA 0xf1
0000            188   _P1MDIN         DATA 0xf2
0000            189   _P2MDIN         DATA 0xf3
0000            190   _P3MDIN         DATA 0xf4
0000            191   _P4MDIN         DATA 0xf5
0000            192   _EIP1           DATA 0xf6
0000            193   _EIP2           DATA 0xf7
0000            194   _SPI0CN         DATA 0xf8
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0H          DATA 0xfa
0000            197   _PCA0CPL0       DATA 0xfb
0000            198   _PCA0CPH0       DATA 0xfc
0000            199   _PCA0CPL4       DATA 0xfd
0000            200   _PCA0CPH4       DATA 0xfe
0000            201   _VDM0CN         DATA 0xff
0000            202   _DPTR           DATA 0x8382
0000            203   _TMR2RL         DATA 0xcbca
0000            204   _TMR3RL         DATA 0x9392
0000            205   _TMR4RL         DATA 0x9392
0000            206   _TMR5RL         DATA 0xcbca
0000            207   _TMR2           DATA 0xcdcc
0000            208   _TMR3           DATA 0x9594
0000            209   _TMR4           DATA 0x9594
0000            210   _TMR5           DATA 0xcdcc
0000            211   _SBRL1          DATA 0xb5b4
0000            212   _ADC0           DATA 0xbebd
0000            213   _ADC0GT         DATA 0xc4c3
0000            214   _ADC0LT         DATA 0xc6c5
0000            215   _PCA0           DATA 0xfaf9
0000            216   _PCA0CP1        DATA 0xeae9
0000            217   _PCA0CP2        DATA 0xeceb
0000            218   _PCA0CP3        DATA 0xeeed
0000            219   _PCA0CP0        DATA 0xfcfb
0000            220   _PCA0CP4        DATA 0xfefd
0000            221   ;--------------------------------------------------------
0000            222   ; special function bits
0000            223   ;--------------------------------------------------------
0000            224   _P0_0           BIT 0x80
0000            225   _P0_1           BIT 0x81
0000            226   _P0_2           BIT 0x82
0000            227   _P0_3           BIT 0x83
0000            228   _P0_4           BIT 0x84
0000            229   _P0_5           BIT 0x85
0000            230   _P0_6           BIT 0x86
0000            231   _P0_7           BIT 0x87
0000            232   _TF1            BIT 0x8f
0000            233   _TR1            BIT 0x8e
0000            234   _TF0            BIT 0x8d
0000            235   _TR0            BIT 0x8c
0000            236   _IE1            BIT 0x8b
0000            237   _IT1            BIT 0x8a
0000            238   _IE0            BIT 0x89
0000            239   _IT0            BIT 0x88
0000            240   _P1_0           BIT 0x90
0000            241   _P1_1           BIT 0x91
0000            242   _P1_2           BIT 0x92
0000            243   _P1_3           BIT 0x93
0000            244   _P1_4           BIT 0x94
0000            245   _P1_5           BIT 0x95
0000            246   _P1_6           BIT 0x96
0000            247   _P1_7           BIT 0x97
0000            248   _S0MODE         BIT 0x9f
0000            249   _SCON0_6        BIT 0x9e
0000            250   _MCE0           BIT 0x9d
0000            251   _REN0           BIT 0x9c
0000            252   _TB80           BIT 0x9b
0000            253   _RB80           BIT 0x9a
0000            254   _TI0            BIT 0x99
0000            255   _RI0            BIT 0x98
0000            256   _SCON_6         BIT 0x9e
0000            257   _MCE            BIT 0x9d
0000            258   _REN            BIT 0x9c
0000            259   _TB8            BIT 0x9b
0000            260   _RB8            BIT 0x9a
0000            261   _TI             BIT 0x99
0000            262   _RI             BIT 0x98
0000            263   _P2_0           BIT 0xa0
0000            264   _P2_1           BIT 0xa1
0000            265   _P2_2           BIT 0xa2
0000            266   _P2_3           BIT 0xa3
0000            267   _P2_4           BIT 0xa4
0000            268   _P2_5           BIT 0xa5
0000            269   _P2_6           BIT 0xa6
0000            270   _P2_7           BIT 0xa7
0000            271   _EA             BIT 0xaf
0000            272   _ESPI0          BIT 0xae
0000            273   _ET2            BIT 0xad
0000            274   _ES0            BIT 0xac
0000            275   _ET1            BIT 0xab
0000            276   _EX1            BIT 0xaa
0000            277   _ET0            BIT 0xa9
0000            278   _EX0            BIT 0xa8
0000            279   _P3_0           BIT 0xb0
0000            280   _P3_1           BIT 0xb1
0000            281   _P3_2           BIT 0xb2
0000            282   _P3_3           BIT 0xb3
0000            283   _P3_4           BIT 0xb4
0000            284   _P3_5           BIT 0xb5
0000            285   _P3_6           BIT 0xb6
0000            286   _P3_7           BIT 0xb7
0000            287   _IP_7           BIT 0xbf
0000            288   _PSPI0          BIT 0xbe
0000            289   _PT2            BIT 0xbd
0000            290   _PS0            BIT 0xbc
0000            291   _PT1            BIT 0xbb
0000            292   _PX1            BIT 0xba
0000            293   _PT0            BIT 0xb9
0000            294   _PX0            BIT 0xb8
0000            295   _MASTER0        BIT 0xc7
0000            296   _TXMODE0        BIT 0xc6
0000            297   _STA0           BIT 0xc5
0000            298   _STO0           BIT 0xc4
0000            299   _ACKRQ0         BIT 0xc3
0000            300   _ARBLOST0       BIT 0xc2
0000            301   _ACK0           BIT 0xc1
0000            302   _SI0            BIT 0xc0
0000            303   _MASTER1        BIT 0xc7
0000            304   _TXMODE1        BIT 0xc6
0000            305   _STA1           BIT 0xc5
0000            306   _STO1           BIT 0xc4
0000            307   _ACKRQ1         BIT 0xc3
0000            308   _ARBLOST1       BIT 0xc2
0000            309   _ACK1           BIT 0xc1
0000            310   _SI1            BIT 0xc0
0000            311   _TF2            BIT 0xcf
0000            312   _TF2H           BIT 0xcf
0000            313   _TF2L           BIT 0xce
0000            314   _TF2LEN         BIT 0xcd
0000            315   _TF2CEN         BIT 0xcc
0000            316   _T2SPLIT        BIT 0xcb
0000            317   _TR2            BIT 0xca
0000            318   _T2CSS          BIT 0xc9
0000            319   _T2XCLK         BIT 0xc8
0000            320   _TF5H           BIT 0xcf
0000            321   _TF5L           BIT 0xce
0000            322   _TF5LEN         BIT 0xcd
0000            323   _TMR5CN_4       BIT 0xcc
0000            324   _T5SPLIT        BIT 0xcb
0000            325   _TR5            BIT 0xca
0000            326   _TMR5CN_1       BIT 0xc9
0000            327   _T5XCLK         BIT 0xc8
0000            328   _CY             BIT 0xd7
0000            329   _AC             BIT 0xd6
0000            330   _F0             BIT 0xd5
0000            331   _RS1            BIT 0xd4
0000            332   _RS0            BIT 0xd3
0000            333   _OV             BIT 0xd2
0000            334   _F1             BIT 0xd1
0000            335   _PARITY         BIT 0xd0
0000            336   _CF             BIT 0xdf
0000            337   _CR             BIT 0xde
0000            338   _PCA0CN_5       BIT 0xde
0000            339   _CCF4           BIT 0xdc
0000            340   _CCF3           BIT 0xdb
0000            341   _CCF2           BIT 0xda
0000            342   _CCF1           BIT 0xd9
0000            343   _CCF0           BIT 0xd8
0000            344   _ACC_7          BIT 0xe7
0000            345   _ACC_6          BIT 0xe6
0000            346   _ACC_5          BIT 0xe5
0000            347   _ACC_4          BIT 0xe4
0000            348   _ACC_3          BIT 0xe3
0000            349   _ACC_2          BIT 0xe2
0000            350   _ACC_1          BIT 0xe1
0000            351   _ACC_0          BIT 0xe0
0000            352   _AD0EN          BIT 0xef
0000            353   _AD0TM          BIT 0xee
0000            354   _AD0INT         BIT 0xed
0000            355   _AD0BUSY        BIT 0xec
0000            356   _AD0WINT        BIT 0xeb
0000            357   _AD0CM2         BIT 0xea
0000            358   _AD0CM1         BIT 0xe9
0000            359   _AD0CM0         BIT 0xe8
0000            360   _B_7            BIT 0xf7
0000            361   _B_6            BIT 0xf6
0000            362   _B_5            BIT 0xf5
0000            363   _B_4            BIT 0xf4
0000            364   _B_3            BIT 0xf3
0000            365   _B_2            BIT 0xf2
0000            366   _B_1            BIT 0xf1
0000            367   _B_0            BIT 0xf0
0000            368   _SPIF           BIT 0xff
0000            369   _WCOL           BIT 0xfe
0000            370   _MODF           BIT 0xfd
0000            371   _RXOVRN         BIT 0xfc
0000            372   _NSSMD1         BIT 0xfb
0000            373   _NSSMD0         BIT 0xfa
0000            374   _TXBMT          BIT 0xf9
0000            375   _SPIEN          BIT 0xf8
0000            376   ;--------------------------------------------------------
0000            377   ; overlayable register banks
0000            378   ;--------------------------------------------------------
0000            379            rbank0 segment data overlay
0000            380   ;--------------------------------------------------------
0000            381   ; internal ram data
0000            382   ;--------------------------------------------------------
0000            383            rseg R_DSEG
0000            384   _pwm_count:
0000            385            ds 1
0001            386   _mode:
0001            387            ds 1
0002            388   _pwm_both:
0002            389            ds 1
0003            390   _pwm_Left0:
0003            391            ds 1
0004            392   _pwm_Left1:
0004            393            ds 1
0005            394   _pwm_Right0:
0005            395            ds 1
0006            396   _pwm_Right1:
0006            397            ds 1
0007            398   _direction:
0007            399            ds 1
0008            400   _currentcmd:
0008            401            ds 1
0009            402   _currentstate:
0009            403            ds 1
000A            404   _linetrack_forwardbackward_1_81:
000A            405            ds 2
000C            406   _linetrack_vleft_1_82:
000C            407            ds 4
0010            408   _linetrack_vright_1_82:
0010            409            ds 4
0014            410   _linetrack_sloc0_1_0:
0014            411            ds 4
0018            412   _turncar_vleft_1_86:
0018            413            ds 4
001C            414   _turncar_vright_1_86:
001C            415            ds 4
0020            416   _uturn_vleft_1_91:
0020            417            ds 4
0024            418   _uturn_vright_1_91:
0024            419            ds 4
0028            420   ;--------------------------------------------------------
0028            421   ; overlayable items in internal ram 
0028            422   ;--------------------------------------------------------
0000            423            rseg    R_OSEG
0000            424            rseg    R_OSEG
0000            425            rseg    R_OSEG
0000            426   _InitPinADC_PARM_2:
0000            427            ds 1
0001            428            rseg    R_OSEG
0001            429   ;--------------------------------------------------------
0001            430   ; indirectly addressable internal ram data
0001            431   ;--------------------------------------------------------
0000            432            rseg R_ISEG
0000            433   ;--------------------------------------------------------
0000            434   ; absolute internal ram data
0000            435   ;--------------------------------------------------------
0000            436            DSEG
0000            437   ;--------------------------------------------------------
0000            438   ; bit data
0000            439   ;--------------------------------------------------------
0000            440            rseg R_BSEG
0000            441   _Timer2_ISR_sloc0_1_0:
0000            442            DBIT    1
0001            443   ;--------------------------------------------------------
0001            444   ; paged external ram data
0001            445   ;--------------------------------------------------------
0000            446            rseg R_PSEG
0000            447   ;--------------------------------------------------------
0000            448   ; external ram data
0000            449   ;--------------------------------------------------------
0000            450            rseg R_XSEG
0000            451   ;--------------------------------------------------------
0000            452   ; absolute external ram data
0000            453   ;--------------------------------------------------------
0000            454            XSEG
0000            455   ;--------------------------------------------------------
0000            456   ; external initialized ram data
0000            457   ;--------------------------------------------------------
0000            458            rseg R_IXSEG
0000            459            rseg R_HOME
0000            460            rseg R_GSINIT
0000            461            rseg R_CSEG
0000            462   ;--------------------------------------------------------
0000            463   ; Reset entry point and interrupt vectors
0000            464   ;--------------------------------------------------------
0000            465            CSEG at 0x0000
0000 020100     466            ljmp    _crt0
002B            467            CSEG at 0x002b
002B 020100     468            ljmp    _Timer2_ISR
002E            469   ;--------------------------------------------------------
002E            470   ; global & static initialisations
002E            471   ;--------------------------------------------------------
0000            472            rseg R_HOME
0000            473            rseg R_GSINIT
0000            474            rseg R_GSINIT
0000            475   ;--------------------------------------------------------
0000            476   ; data variables initialization
0000            477   ;--------------------------------------------------------
0000            478            rseg R_DINIT
0000            479   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:20: volatile  char pwm_count=0;
0000 75C000     480            mov     _pwm_count,#0x00
0003            481   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:21: volatile  char mode = 0;
0003 758000     482            mov     _mode,#0x00
0006            483   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:22: volatile  char pwm_both =0;
0006 754000     484            mov     _pwm_both,#0x00
0009            485   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:23: volatile  char pwm_Left0 = 0; //p1.5
0009 750000     486            mov     _pwm_Left0,#0x00
000C            487   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:24: volatile  char pwm_Left1 = 0; //p1.6
000C 75C000     488            mov     _pwm_Left1,#0x00
000F            489   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:25: volatile  char pwm_Right0 = 0; //p2.0
000F 758000     490            mov     _pwm_Right0,#0x00
0012            491   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:26: volatile  char pwm_Right1 = 0; //p2.1
0012 754000     492            mov     _pwm_Right1,#0x00
0015            493   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:27: volatile  char direction = 0; // 1 for back 0 for forward
0015 750000     494            mov     _direction,#0x00
0018            495   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:29: volatile  char currentcmd = 0;
0018 75C000     496            mov     _currentcmd,#0x00
001B            497   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:30: volatile  char currentstate = 1;
001B 758001     498            mov     _currentstate,#0x01
001E            499            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            500   ;--------------------------------------------------------
001E            501   ; code
001E            502   ;--------------------------------------------------------
0000            503            rseg R_CSEG
0000            504   ;------------------------------------------------------------
0000            505   ;Allocation info for local variables in function '_c51_external_startup'
0000            506   ;------------------------------------------------------------
0000            507   ;------------------------------------------------------------
0000            508   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:34: char _c51_external_startup (void)
0000            509   ;        -----------------------------------------
0000            510   ;         function _c51_external_startup
0000            511   ;        -----------------------------------------
0000            512   __c51_external_startup:
0000            513            using   0
0000            514   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:36: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     515            anl     _PCA0MD,#0xBF
0003            516   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:37: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     517            mov     _VDM0CN,#0x80
0006            518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:38: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     519            mov     _RSTSRC,#0x06
0009            520   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:46: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     521            orl     _CLKSEL,#0x03
000C            522   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:50: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     523            orl     _OSCICN,#0x03
000F            524   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:53: SCON0 = 0x10;
000F 759810     525            mov     _SCON0,#0x10
0012            526   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:55: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     527            mov     _TH1,#0x30
0015            528   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:56: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     529            anl     _CKCON,#0xF4
0018            530   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:57: CKCON |=  0x08;
0018 438E08     531            orl     _CKCON,#0x08
001B            532   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:70: TL1 = TH1;      // Init Timer1
001B 858D8B     533            mov     _TL1,_TH1
001E            534   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:71: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     535            anl     _TMOD,#0x0F
0021            536   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:72: TMOD |=  0x20;
0021 438920     537            orl     _TMOD,#0x20
0024            538   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:73: TR1 = 1; // START Timer1
0024 D28E       539            setb    _TR1
0026            540   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:74: TI = 1;  // Indicate TX0 ready
0026 D299       541            setb    _TI
0028            542   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:77: P2MDOUT|=0b_0000_0011;
0028 43A603     543            orl     _P2MDOUT,#0x03
002B            544   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:78: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     545            orl     _P0MDOUT,#0x10
002E            546   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:79: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     547            mov     _XBR0,#0x01
0031            548   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:80: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     549            mov     _XBR1,#0x40
0034            550   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:83: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     551            mov     _TMR2CN,#0x00
0037            552   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:84: CKCON|=0b_0001_0000;
0037 438E10     553            orl     _CKCON,#0x10
003A            554   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:85: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     555            mov     _TMR2RL,#0x78
003D 75CBEC     556            mov     (_TMR2RL >> 8),#0xEC
0040            557   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:86: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     558            mov     _TMR2,#0xFF
0043 75CDFF     559            mov     (_TMR2 >> 8),#0xFF
0046            560   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:87: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       561            setb    _ET2
0048            562   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:88: TR2=1;         // Start Timer2
0048 D2CA       563            setb    _TR2
004A            564   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:90: EA=1; // Enable interrupts
004A D2AF       565            setb    _EA
004C            566   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:92: return 0;
004C 758200     567            mov     dpl,#0x00
004F 22         568            ret
0050            569   ;------------------------------------------------------------
0050            570   ;Allocation info for local variables in function 'Timer3us'
0050            571   ;------------------------------------------------------------
0050            572   ;us                        Allocated to registers r2 
0050            573   ;i                         Allocated to registers r3 
0050            574   ;------------------------------------------------------------
0050            575   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:96: void Timer3us(unsigned char us)
0050            576   ;        -----------------------------------------
0050            577   ;         function Timer3us
0050            578   ;        -----------------------------------------
0050            579   _Timer3us:
0050 AA82       580            mov     r2,dpl
0052            581   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:101: CKCON|=0b_0100_0000;
0052 438E40     582            orl     _CKCON,#0x40
0055            583   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:103: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0055 7592D0     584            mov     _TMR3RL,#0xD0
0058 7593FF     585            mov     (_TMR3RL >> 8),#0xFF
005B            586   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:104: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005B 859294     587            mov     _TMR3,_TMR3RL
005E 859395     588            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0061            589   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:106: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0061 759104     590            mov     _TMR3CN,#0x04
0064            591   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0064 7B00       592            mov     r3,#0x00
0066            593   L003004?:
0066 C3         594            clr     c
0067 EB         595            mov     a,r3
0068 9A         596            subb    a,r2
0069 5001       597            jnc     L003007?
006B            598   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: while (!(TMR3CN & 0x80));  // Wait for overflow
006B            599   L003001?:
006B E591       600            mov     a,_TMR3CN
006D 30E750     601            jnb     acc.7,L003001?
0070            602   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:110: TMR3CN &= ~(0x80);         // Clear overflow indicator
0070 53917F     603            anl     _TMR3CN,#0x7F
0073            604   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0073 0B         605            inc     r3
0074 8001       606            sjmp    L003004?
0076            607   L003007?:
0076            608   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:112: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0076 759100     609            mov     _TMR3CN,#0x00
0079 22         610            ret
007A            611   ;------------------------------------------------------------
007A            612   ;Allocation info for local variables in function 'waitms'
007A            613   ;------------------------------------------------------------
007A            614   ;ms                        Allocated to registers r2 r3 
007A            615   ;j                         Allocated to registers r2 r3 
007A            616   ;------------------------------------------------------------
007A            617   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:115: void waitms (unsigned int ms)
007A            618   ;        -----------------------------------------
007A            619   ;         function waitms
007A            620   ;        -----------------------------------------
007A            621   _waitms:
007A AA82       622            mov     r2,dpl
007C AB83       623            mov     r3,dph
007E            624   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:118: for(j=ms; j!=0; j--)
007E            625   L004001?:
007E BA0050     626            cjne    r2,#0x00,L004010?
0081 BB0050     627            cjne    r3,#0x00,L004010?
0084 22         628            ret
0085            629   L004010?:
0085            630   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: Timer3us(249);
0085 7582F9     631            mov     dpl,#0xF9
0088 C002       632            push    ar2
008A C003       633            push    ar3
008C 120100     634            lcall   _Timer3us
008F            635   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:121: Timer3us(249);
008F 7582F9     636            mov     dpl,#0xF9
0092 120100     637            lcall   _Timer3us
0095            638   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:122: Timer3us(249);
0095 7582F9     639            mov     dpl,#0xF9
0098 120100     640            lcall   _Timer3us
009B            641   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:123: Timer3us(250);
009B 7582FA     642            mov     dpl,#0xFA
009E 120100     643            lcall   _Timer3us
00A1 D003       644            pop     ar3
00A3 D002       645            pop     ar2
00A5            646   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:118: for(j=ms; j!=0; j--)
00A5 1A         647            dec     r2
00A6 BAFF90     648            cjne    r2,#0xff,L004011?
00A9 1B         649            dec     r3
00AA            650   L004011?:
00AA 8001       651            sjmp    L004001?
00AC            652   ;------------------------------------------------------------
00AC            653   ;Allocation info for local variables in function 'Timer2_ISR'
00AC            654   ;------------------------------------------------------------
00AC            655   ;------------------------------------------------------------
00AC            656   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:128: void Timer2_ISR (void) interrupt 5
00AC            657   ;        -----------------------------------------
00AC            658   ;         function Timer2_ISR
00AC            659   ;        -----------------------------------------
00AC            660   _Timer2_ISR:
00AC C0E0       661            push    acc
00AE C0F0       662            push    b
00B0 C0D0       663            push    psw
00B2 75D000     664            mov     psw,#0x00
00B5            665   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:130: TF2H = 0; // Clear Timer2 interrupt flag
00B5 C2CF       666            clr     _TF2H
00B7            667   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:132: pwm_count++;
00B7 05C0       668            inc     _pwm_count
00B9            669   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:133: if(pwm_count>100) pwm_count=0;
00B9 C3         670            clr     c
00BA 74E4       671            mov     a,#(0x64 ^ 0x80)
00BC 85C0F0     672            mov     b,_pwm_count
00BF 63F080     673            xrl     b,#0x80
00C2 95F0       674            subb    a,b
00C4 5001       675            jnc     L005002?
00C6 75C000     676            mov     _pwm_count,#0x00
00C9            677   L005002?:
00C9            678   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:136: MOTOR_LEFT0 = pwm_count > pwm_Left0 ? 0 : 1; //p1.5
00C9 C3         679            clr     c
00CA E500       680            mov     a,_pwm_Left0
00CC 6480       681            xrl     a,#0x80
00CE 85C0F0     682            mov     b,_pwm_count
00D1 63F080     683            xrl     b,#0x80
00D4 95F0       684            subb    a,b
00D6 9210       685            mov  _Timer2_ISR_sloc0_1_0,c
00D8 B3         686            cpl     c
00D9 9295       687            mov     _P1_5,c
00DB            688   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:137: MOTOR_LEFT1 = pwm_count > pwm_Left1 ? 0 : 1; //p1.6
00DB C3         689            clr     c
00DC E5C0       690            mov     a,_pwm_Left1
00DE 6480       691            xrl     a,#0x80
00E0 85C0F0     692            mov     b,_pwm_count
00E3 63F080     693            xrl     b,#0x80
00E6 95F0       694            subb    a,b
00E8 9210       695            mov  _Timer2_ISR_sloc0_1_0,c
00EA B3         696            cpl     c
00EB 9296       697            mov     _P1_6,c
00ED            698   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:138: MOTOR_RIGHT0 = pwm_count > pwm_Right0 ? 0 : 1; //p2.0
00ED C3         699            clr     c
00EE E580       700            mov     a,_pwm_Right0
00F0 6480       701            xrl     a,#0x80
00F2 85C0F0     702            mov     b,_pwm_count
00F5 63F080     703            xrl     b,#0x80
00F8 95F0       704            subb    a,b
00FA 9210       705            mov  _Timer2_ISR_sloc0_1_0,c
00FC B3         706            cpl     c
00FD 92A0       707            mov     _P2_0,c
00FF            708   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:139: MOTOR_RIGHT1 = pwm_count > pwm_Right1 ? 0 : 1; //p2.1
00FF C3         709            clr     c
0100 E540       710            mov     a,_pwm_Right1
0102 6480       711            xrl     a,#0x80
0104 85C0F0     712            mov     b,_pwm_count
0107 63F080     713            xrl     b,#0x80
010A 95F0       714            subb    a,b
010C 9210       715            mov  _Timer2_ISR_sloc0_1_0,c
010E B3         716            cpl     c
010F 92A1       717            mov     _P2_1,c
0111 D0D0       718            pop     psw
0113 D0F0       719            pop     b
0115 D0E0       720            pop     acc
0117 32         721            reti
0118            722   ;        eliminated unneeded push/pop dpl
0118            723   ;        eliminated unneeded push/pop dph
0118            724   ;------------------------------------------------------------
0118            725   ;Allocation info for local variables in function 'forward_backward'
0118            726   ;------------------------------------------------------------
0118            727   ;direction                 Allocated to registers r2 
0118            728   ;------------------------------------------------------------
0118            729   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:146: void forward_backward(unsigned char direction)
0118            730   ;        -----------------------------------------
0118            731   ;         function forward_backward
0118            732   ;        -----------------------------------------
0118            733   _forward_backward:
0118            734   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:149: if (direction == 0) { //p2.1,1.6 on
0118 E582       735            mov     a,dpl
011A FA         736            mov     r2,a
011B 7001       737            jnz     L006004?
011D            738   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:150: pwm_Left0 = pwm_Right0 = -1;
011D 7580FF     739            mov     _pwm_Right0,#0xFF
0120 7500FF     740            mov     _pwm_Left0,#0xFF
0123            741   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:151: pwm_Left1 = pwm_Right1 = pwm_both;  //MOTOR_LEFT1 = MOTOR_RIGHT1 = pwm_both;
0123 854040     742            mov     _pwm_Right1,_pwm_both
0126 8540C0     743            mov     _pwm_Left1,_pwm_both
0129 22         744            ret
012A            745   L006004?:
012A            746   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:154: else if (direction == 1) { //p2.0,1.5 on
012A BA01D0     747            cjne    r2,#0x01,L006006?
012D            748   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:155: pwm_Left1 = pwm_Right1 = -1;
012D 7540FF     749            mov     _pwm_Right1,#0xFF
0130 75C0FF     750            mov     _pwm_Left1,#0xFF
0133            751   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:156: pwm_Left0 = pwm_Right0 = pwm_both; 
0133 854080     752            mov     _pwm_Right0,_pwm_both
0136 854000     753            mov     _pwm_Left0,_pwm_both
0139            754   L006006?:
0139 22         755            ret
013A            756   ;------------------------------------------------------------
013A            757   ;Allocation info for local variables in function 'InitADC'
013A            758   ;------------------------------------------------------------
013A            759   ;------------------------------------------------------------
013A            760   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:162: void InitADC (void)
013A            761   ;        -----------------------------------------
013A            762   ;         function InitADC
013A            763   ;        -----------------------------------------
013A            764   _InitADC:
013A            765   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:165: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
013A 75BCF8     766            mov     _ADC0CF,#0xF8
013D            767   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:166: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
013D 75E880     768            mov     _ADC0CN,#0x80
0140            769   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:167: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
0140 75D108     770            mov     _REF0CN,#0x08
0143 22         771            ret
0144            772   ;------------------------------------------------------------
0144            773   ;Allocation info for local variables in function 'InitPinADC'
0144            774   ;------------------------------------------------------------
0144            775   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0144            776   ;portno                    Allocated to registers r2 
0144            777   ;mask                      Allocated to registers r3 
0144            778   ;------------------------------------------------------------
0144            779   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:170: void InitPinADC (unsigned char portno, unsigned char pinno)
0144            780   ;        -----------------------------------------
0144            781   ;         function InitPinADC
0144            782   ;        -----------------------------------------
0144            783   _InitPinADC:
0144 AA82       784            mov     r2,dpl
0146            785   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:174: mask=1<<pinno;
0146 8560F0     786            mov     b,_InitPinADC_PARM_2
0149 05F0       787            inc     b
014B 7401       788            mov     a,#0x01
014D 8001       789            sjmp    L008012?
014F            790   L008010?:
014F 25E0       791            add     a,acc
0151            792   L008012?:
0151 D5F050     793            djnz    b,L008010?
0154 FB         794            mov     r3,a
0155            795   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:176: switch (portno)
0155 EA         796            mov     a,r2
0156 24FC       797            add     a,#0xff - 0x03
0158 4001       798            jc      L008007?
015A EA         799            mov     a,r2
015B 2A         800            add     a,r2
015C 2A         801            add     a,r2
015D 909DD0     802            mov     dptr,#L008014?
0160 73         803            jmp     @a+dptr
0161            804   L008014?:
0161 020100     805            ljmp    L008001?
0164 020100     806            ljmp    L008002?
0167 020100     807            ljmp    L008003?
016A 020100     808            ljmp    L008004?
016D            809   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:178: case 0:
016D            810   L008001?:
016D            811   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:179: P0MDIN &= (~mask); // Set pin as analog input
016D EB         812            mov     a,r3
016E F4         813            cpl     a
016F 52F1       814            anl     _P0MDIN,a
0171            815   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:180: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0171 EB         816            mov     a,r3
0172 42D4       817            orl     _P0SKIP,a
0174            818   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:181: break;
0174            819   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:182: case 1:
0174 22         820            ret
0175            821   L008002?:
0175            822   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:183: P1MDIN &= (~mask); // Set pin as analog input
0175 EB         823            mov     a,r3
0176 F4         824            cpl     a
0177 52F2       825            anl     _P1MDIN,a
0179            826   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:184: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0179 EB         827            mov     a,r3
017A 42D5       828            orl     _P1SKIP,a
017C            829   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:185: break;
017C            830   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:186: case 2:
017C 22         831            ret
017D            832   L008003?:
017D            833   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:187: P2MDIN &= (~mask); // Set pin as analog input
017D EB         834            mov     a,r3
017E F4         835            cpl     a
017F 52F3       836            anl     _P2MDIN,a
0181            837   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:188: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0181 EB         838            mov     a,r3
0182 42D6       839            orl     _P2SKIP,a
0184            840   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:189: break;
0184            841   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:190: case 3:
0184 22         842            ret
0185            843   L008004?:
0185            844   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:191: P3MDIN &= (~mask); // Set pin as analog input
0185 EB         845            mov     a,r3
0186 F4         846            cpl     a
0187 FA         847            mov     r2,a
0188 52F4       848            anl     _P3MDIN,a
018A            849   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:192: P3SKIP |= mask; // Skip Crossbar decoding for this pin
018A EB         850            mov     a,r3
018B 42DF       851            orl     _P3SKIP,a
018D            852   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:196: }
018D            853   L008007?:
018D 22         854            ret
018E            855   ;------------------------------------------------------------
018E            856   ;Allocation info for local variables in function 'ADC_at_Pin'
018E            857   ;------------------------------------------------------------
018E            858   ;pin                       Allocated to registers 
018E            859   ;------------------------------------------------------------
018E            860   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:199: unsigned int ADC_at_Pin(unsigned char pin)
018E            861   ;        -----------------------------------------
018E            862   ;         function ADC_at_Pin
018E            863   ;        -----------------------------------------
018E            864   _ADC_at_Pin:
018E 8582BB     865            mov     _AMX0P,dpl
0191            866   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:202: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
0191 75BA1F     867            mov     _AMX0N,#0x1F
0194            868   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:204: AD0BUSY=1;
0194 D2EC       869            setb    _AD0BUSY
0196            870   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:205: while (AD0BUSY); // Wait for dummy conversion to finish
0196            871   L009001?:
0196 20EC10     872            jb      _AD0BUSY,L009001?
0199            873   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:207: AD0BUSY = 1;
0199 D2EC       874            setb    _AD0BUSY
019B            875   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:208: while (AD0BUSY); // Wait for conversion to complete
019B            876   L009004?:
019B 20EC50     877            jb      _AD0BUSY,L009004?
019E            878   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:209: return (ADC0L+(ADC0H*0x100));
019E AABD       879            mov     r2,_ADC0L
01A0 7B00       880            mov     r3,#0x00
01A2 ADBE       881            mov     r5,_ADC0H
01A4 7C00       882            mov     r4,#0x00
01A6 EC         883            mov     a,r4
01A7 2A         884            add     a,r2
01A8 F582       885            mov     dpl,a
01AA ED         886            mov     a,r5
01AB 3B         887            addc    a,r3
01AC F583       888            mov     dph,a
01AE 22         889            ret
01AF            890   ;------------------------------------------------------------
01AF            891   ;Allocation info for local variables in function 'Volts_at_Pin'
01AF            892   ;------------------------------------------------------------
01AF            893   ;pin                       Allocated to registers r2 
01AF            894   ;------------------------------------------------------------
01AF            895   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:212: float Volts_at_Pin(unsigned char pin)
01AF            896   ;        -----------------------------------------
01AF            897   ;         function Volts_at_Pin
01AF            898   ;        -----------------------------------------
01AF            899   _Volts_at_Pin:
01AF            900   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:214: return ((ADC_at_Pin(pin)*3.30)/1024.0);
01AF 120100     901            lcall   _ADC_at_Pin
01B2 120100     902            lcall   ___uint2fs
01B5 AA82       903            mov     r2,dpl
01B7 AB83       904            mov     r3,dph
01B9 ACF0       905            mov     r4,b
01BB FD         906            mov     r5,a
01BC C002       907            push    ar2
01BE C003       908            push    ar3
01C0 C004       909            push    ar4
01C2 C005       910            push    ar5
01C4 903333     911            mov     dptr,#0x3333
01C7 75F053     912            mov     b,#0x53
01CA 7440       913            mov     a,#0x40
01CC 120100     914            lcall   ___fsmul
01CF AA82       915            mov     r2,dpl
01D1 AB83       916            mov     r3,dph
01D3 ACF0       917            mov     r4,b
01D5 FD         918            mov     r5,a
01D6 E581       919            mov     a,sp
01D8 24FC       920            add     a,#0xfc
01DA F581       921            mov     sp,a
01DC E4         922            clr     a
01DD C0E0       923            push    acc
01DF C0E0       924            push    acc
01E1 7480       925            mov     a,#0x80
01E3 C0E0       926            push    acc
01E5 7444       927            mov     a,#0x44
01E7 C0E0       928            push    acc
01E9 8A82       929            mov     dpl,r2
01EB 8B83       930            mov     dph,r3
01ED 8CF0       931            mov     b,r4
01EF ED         932            mov     a,r5
01F0 120100     933            lcall   ___fsdiv
01F3 AA82       934            mov     r2,dpl
01F5 AB83       935            mov     r3,dph
01F7 ACF0       936            mov     r4,b
01F9 FD         937            mov     r5,a
01FA E581       938            mov     a,sp
01FC 24FC       939            add     a,#0xfc
01FE F581       940            mov     sp,a
0200 8A82       941            mov     dpl,r2
0202 8B83       942            mov     dph,r3
0204 8CF0       943            mov     b,r4
0206 ED         944            mov     a,r5
0207 22         945            ret
0208            946   ;------------------------------------------------------------
0208            947   ;Allocation info for local variables in function 'readData'
0208            948   ;------------------------------------------------------------
0208            949   ;------------------------------------------------------------
0208            950   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:218: void readData (void) {
0208            951   ;        -----------------------------------------
0208            952   ;         function readData
0208            953   ;        -----------------------------------------
0208            954   _readData:
0208            955   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:220: if (COMMAND_PIN == 0) {                                  //0---
0208 209090     956            jb      _P1_0,L011022?
020B            957   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:221: waitms(6);
020B 900006     958            mov     dptr,#0x0006
020E 120100     959            lcall   _waitms
0211            960   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:222: if (COMMAND_PIN == 1) {                          //01--
0211 3090D0     961            jnb     _P1_0,L011018?
0214            962   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:223: waitms(4);
0214 900004     963            mov     dptr,#0x0004
0217 120100     964            lcall   _waitms
021A            965   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:224: if (COMMAND_PIN == 0) {                  //010-
021A 209010     966            jb      _P1_0,L011007?
021D            967   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:225: waitms(4);
021D 900004     968            mov     dptr,#0x0004
0220 120100     969            lcall   _waitms
0223            970   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:226: if (COMMAND_PIN == 0) {          //0100  
0223 209050     971            jb      _P1_0,L011002?
0226            972   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:227: currentcmd = 4;
0226 75C004     973            mov     _currentcmd,#0x04
0229 8001       974            sjmp    L011022?
022B            975   L011002?:
022B            976   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:230: currentcmd = 5;
022B 75C005     977            mov     _currentcmd,#0x05
022E 8001       978            sjmp    L011022?
0230            979   L011007?:
0230            980   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:234: waitms(4);
0230 900004     981            mov     dptr,#0x0004
0233 120100     982            lcall   _waitms
0236            983   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:235: if (COMMAND_PIN == 0) {          //0110
0236 209090     984            jb      _P1_0,L011022?
0239            985   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:236: currentcmd = 6;
0239 75C006     986            mov     _currentcmd,#0x06
023C 8001       987            sjmp    L011022?
023E            988   L011018?:
023E            989   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:241: waitms(4);
023E 900004     990            mov     dptr,#0x0004
0241 120100     991            lcall   _waitms
0244            992   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:242: if (COMMAND_PIN == 1) {                  //001-
0244 309090     993            jnb     _P1_0,L011015?
0247            994   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:243: waitms(4);
0247 900004     995            mov     dptr,#0x0004
024A 120100     996            lcall   _waitms
024D            997   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:244: if (COMMAND_PIN == 1) {          //0011
024D 3090D0     998            jnb     _P1_0,L011010?
0250            999   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:245: currentcmd = 3;
0250 75C003    1000            mov     _currentcmd,#0x03
0253 8001      1001            sjmp    L011022?
0255           1002   L011010?:
0255           1003   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:248: currentcmd = 2;
0255 75C002    1004            mov     _currentcmd,#0x02
0258 8001      1005            sjmp    L011022?
025A           1006   L011015?:
025A           1007   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:252: waitms(4);
025A 900004    1008            mov     dptr,#0x0004
025D 120100    1009            lcall   _waitms
0260           1010   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:253: if (COMMAND_PIN == 1) {          //0001  
0260 309090    1011            jnb     _P1_0,L011022?
0263           1012   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:254: currentcmd == 1;
0263 E5C0      1013            mov     a,_currentcmd
0265           1014   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:260: while (COMMAND_PIN == 0) {}
0265           1015   L011022?:
0265 309090    1016            jnb     _P1_0,L011022?
0268 22        1017            ret
0269           1018   ;------------------------------------------------------------
0269           1019   ;Allocation info for local variables in function 'linetrack'
0269           1020   ;------------------------------------------------------------
0269           1021   ;forwardbackward           Allocated with name '_linetrack_forwardbackward_1_81'
0269           1022   ;vleft                     Allocated with name '_linetrack_vleft_1_82'
0269           1023   ;vright                    Allocated with name '_linetrack_vright_1_82'
0269           1024   ;sloc0                     Allocated with name '_linetrack_sloc0_1_0'
0269           1025   ;------------------------------------------------------------
0269           1026   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:264: void linetrack (int forwardbackward) {
0269           1027   ;        -----------------------------------------
0269           1028   ;         function linetrack
0269           1029   ;        -----------------------------------------
0269           1030   _linetrack:
0269 858290    1031            mov     _linetrack_forwardbackward_1_81,dpl
026C 858391    1032            mov     (_linetrack_forwardbackward_1_81 + 1),dph
026F           1033   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:268: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
026F 75820B    1034            mov     dpl,#0x0B
0272 120100    1035            lcall   _Volts_at_Pin
0275 8582E0    1036            mov     _linetrack_vleft_1_82,dpl
0278 8583E1    1037            mov     (_linetrack_vleft_1_82 + 1),dph
027B 85F0E2    1038            mov     (_linetrack_vleft_1_82 + 2),b
027E F5E3      1039            mov     (_linetrack_vleft_1_82 + 3),a
0280           1040   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:269: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0280 75820C    1041            mov     dpl,#0x0C
0283 120100    1042            lcall   _Volts_at_Pin
0286 858230    1043            mov     _linetrack_vright_1_82,dpl
0289 858331    1044            mov     (_linetrack_vright_1_82 + 1),dph
028C 85F032    1045            mov     (_linetrack_vright_1_82 + 2),b
028F F533      1046            mov     (_linetrack_vright_1_82 + 3),a
0291           1047   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:271: pwm_Left0 = -1;
0291 7500FF    1048            mov     _pwm_Left0,#0xFF
0294           1049   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:273: pwm_Left1 = vright*vright*75/(vright*vright+vleft*vleft);
0294 C030      1050            push    _linetrack_vright_1_82
0296 C031      1051            push    (_linetrack_vright_1_82 + 1)
0298 C032      1052            push    (_linetrack_vright_1_82 + 2)
029A C033      1053            push    (_linetrack_vright_1_82 + 3)
029C 853082    1054            mov     dpl,_linetrack_vright_1_82
029F 853183    1055            mov     dph,(_linetrack_vright_1_82 + 1)
02A2 8532F0    1056            mov     b,(_linetrack_vright_1_82 + 2)
02A5 E533      1057            mov     a,(_linetrack_vright_1_82 + 3)
02A7 120100    1058            lcall   ___fsmul
02AA AC82      1059            mov     r4,dpl
02AC AD83      1060            mov     r5,dph
02AE AEF0      1061            mov     r6,b
02B0 FF        1062            mov     r7,a
02B1 E581      1063            mov     a,sp
02B3 24FC      1064            add     a,#0xfc
02B5 F581      1065            mov     sp,a
02B7 C004      1066            push    ar4
02B9 C005      1067            push    ar5
02BB C006      1068            push    ar6
02BD C007      1069            push    ar7
02BF 900000    1070            mov     dptr,#0x0000
02C2 75F096    1071            mov     b,#0x96
02C5 7442      1072            mov     a,#0x42
02C7 120100    1073            lcall   ___fsmul
02CA AC82      1074            mov     r4,dpl
02CC AD83      1075            mov     r5,dph
02CE AEF0      1076            mov     r6,b
02D0 FF        1077            mov     r7,a
02D1 E581      1078            mov     a,sp
02D3 24FC      1079            add     a,#0xfc
02D5 F581      1080            mov     sp,a
02D7 C004      1081            push    ar4
02D9 C005      1082            push    ar5
02DB C006      1083            push    ar6
02DD C007      1084            push    ar7
02DF C030      1085            push    _linetrack_vright_1_82
02E1 C031      1086            push    (_linetrack_vright_1_82 + 1)
02E3 C032      1087            push    (_linetrack_vright_1_82 + 2)
02E5 C033      1088            push    (_linetrack_vright_1_82 + 3)
02E7 853082    1089            mov     dpl,_linetrack_vright_1_82
02EA 853183    1090            mov     dph,(_linetrack_vright_1_82 + 1)
02ED 8532F0    1091            mov     b,(_linetrack_vright_1_82 + 2)
02F0 E533      1092            mov     a,(_linetrack_vright_1_82 + 3)
02F2 120100    1093            lcall   ___fsmul
02F5 858280    1094            mov     _linetrack_sloc0_1_0,dpl
02F8 858381    1095            mov     (_linetrack_sloc0_1_0 + 1),dph
02FB 85F082    1096            mov     (_linetrack_sloc0_1_0 + 2),b
02FE F583      1097            mov     (_linetrack_sloc0_1_0 + 3),a
0300 E581      1098            mov     a,sp
0302 24FC      1099            add     a,#0xfc
0304 F581      1100            mov     sp,a
0306 C0E0      1101            push    _linetrack_vleft_1_82
0308 C0E1      1102            push    (_linetrack_vleft_1_82 + 1)
030A C0E2      1103            push    (_linetrack_vleft_1_82 + 2)
030C C0E3      1104            push    (_linetrack_vleft_1_82 + 3)
030E 85E082    1105            mov     dpl,_linetrack_vleft_1_82
0311 85E183    1106            mov     dph,(_linetrack_vleft_1_82 + 1)
0314 85E2F0    1107            mov     b,(_linetrack_vleft_1_82 + 2)
0317 E5E3      1108            mov     a,(_linetrack_vleft_1_82 + 3)
0319 120100    1109            lcall   ___fsmul
031C AA82      1110            mov     r2,dpl
031E AB83      1111            mov     r3,dph
0320 A8F0      1112            mov     r0,b
0322 F9        1113            mov     r1,a
0323 E581      1114            mov     a,sp
0325 24FC      1115            add     a,#0xfc
0327 F581      1116            mov     sp,a
0329 C002      1117            push    ar2
032B C003      1118            push    ar3
032D C000      1119            push    ar0
032F C001      1120            push    ar1
0331 858082    1121            mov     dpl,_linetrack_sloc0_1_0
0334 858183    1122            mov     dph,(_linetrack_sloc0_1_0 + 1)
0337 8582F0    1123            mov     b,(_linetrack_sloc0_1_0 + 2)
033A E583      1124            mov     a,(_linetrack_sloc0_1_0 + 3)
033C 120100    1125            lcall   ___fsadd
033F AA82      1126            mov     r2,dpl
0341 AB83      1127            mov     r3,dph
0343 A8F0      1128            mov     r0,b
0345 F9        1129            mov     r1,a
0346 E581      1130            mov     a,sp
0348 24FC      1131            add     a,#0xfc
034A F581      1132            mov     sp,a
034C D007      1133            pop     ar7
034E D006      1134            pop     ar6
0350 D005      1135            pop     ar5
0352 D004      1136            pop     ar4
0354 C002      1137            push    ar2
0356 C003      1138            push    ar3
0358 C000      1139            push    ar0
035A C001      1140            push    ar1
035C 8C82      1141            mov     dpl,r4
035E 8D83      1142            mov     dph,r5
0360 8EF0      1143            mov     b,r6
0362 EF        1144            mov     a,r7
0363 120100    1145            lcall   ___fsdiv
0366 AA82      1146            mov     r2,dpl
0368 AB83      1147            mov     r3,dph
036A ACF0      1148            mov     r4,b
036C FD        1149            mov     r5,a
036D E581      1150            mov     a,sp
036F 24FC      1151            add     a,#0xfc
0371 F581      1152            mov     sp,a
0373 8A82      1153            mov     dpl,r2
0375 8B83      1154            mov     dph,r3
0377 8CF0      1155            mov     b,r4
0379 ED        1156            mov     a,r5
037A 120100    1157            lcall   ___fs2schar
037D 8582C0    1158            mov     _pwm_Left1,dpl
0380           1159   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:274: pwm_Right1 = -1;
0380 7540FF    1160            mov     _pwm_Right1,#0xFF
0383           1161   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:276: pwm_Right0 = vleft*vleft*75/(vright*vright+vleft*vleft);
0383 C0E0      1162            push    _linetrack_vleft_1_82
0385 C0E1      1163            push    (_linetrack_vleft_1_82 + 1)
0387 C0E2      1164            push    (_linetrack_vleft_1_82 + 2)
0389 C0E3      1165            push    (_linetrack_vleft_1_82 + 3)
038B 85E082    1166            mov     dpl,_linetrack_vleft_1_82
038E 85E183    1167            mov     dph,(_linetrack_vleft_1_82 + 1)
0391 85E2F0    1168            mov     b,(_linetrack_vleft_1_82 + 2)
0394 E5E3      1169            mov     a,(_linetrack_vleft_1_82 + 3)
0396 120100    1170            lcall   ___fsmul
0399 AA82      1171            mov     r2,dpl
039B AB83      1172            mov     r3,dph
039D ACF0      1173            mov     r4,b
039F FD        1174            mov     r5,a
03A0 E581      1175            mov     a,sp
03A2 24FC      1176            add     a,#0xfc
03A4 F581      1177            mov     sp,a
03A6 C002      1178            push    ar2
03A8 C003      1179            push    ar3
03AA C004      1180            push    ar4
03AC C005      1181            push    ar5
03AE 900000    1182            mov     dptr,#0x0000
03B1 75F096    1183            mov     b,#0x96
03B4 7442      1184            mov     a,#0x42
03B6 120100    1185            lcall   ___fsmul
03B9 AA82      1186            mov     r2,dpl
03BB AB83      1187            mov     r3,dph
03BD ACF0      1188            mov     r4,b
03BF FD        1189            mov     r5,a
03C0 E581      1190            mov     a,sp
03C2 24FC      1191            add     a,#0xfc
03C4 F581      1192            mov     sp,a
03C6 C002      1193            push    ar2
03C8 C003      1194            push    ar3
03CA C004      1195            push    ar4
03CC C005      1196            push    ar5
03CE C030      1197            push    _linetrack_vright_1_82
03D0 C031      1198            push    (_linetrack_vright_1_82 + 1)
03D2 C032      1199            push    (_linetrack_vright_1_82 + 2)
03D4 C033      1200            push    (_linetrack_vright_1_82 + 3)
03D6 853082    1201            mov     dpl,_linetrack_vright_1_82
03D9 853183    1202            mov     dph,(_linetrack_vright_1_82 + 1)
03DC 8532F0    1203            mov     b,(_linetrack_vright_1_82 + 2)
03DF E533      1204            mov     a,(_linetrack_vright_1_82 + 3)
03E1 120100    1205            lcall   ___fsmul
03E4 858280    1206            mov     _linetrack_sloc0_1_0,dpl
03E7 858381    1207            mov     (_linetrack_sloc0_1_0 + 1),dph
03EA 85F082    1208            mov     (_linetrack_sloc0_1_0 + 2),b
03ED F583      1209            mov     (_linetrack_sloc0_1_0 + 3),a
03EF E581      1210            mov     a,sp
03F1 24FC      1211            add     a,#0xfc
03F3 F581      1212            mov     sp,a
03F5 C0E0      1213            push    _linetrack_vleft_1_82
03F7 C0E1      1214            push    (_linetrack_vleft_1_82 + 1)
03F9 C0E2      1215            push    (_linetrack_vleft_1_82 + 2)
03FB C0E3      1216            push    (_linetrack_vleft_1_82 + 3)
03FD 85E082    1217            mov     dpl,_linetrack_vleft_1_82
0400 85E183    1218            mov     dph,(_linetrack_vleft_1_82 + 1)
0403 85E2F0    1219            mov     b,(_linetrack_vleft_1_82 + 2)
0406 E5E3      1220            mov     a,(_linetrack_vleft_1_82 + 3)
0408 120100    1221            lcall   ___fsmul
040B AE82      1222            mov     r6,dpl
040D AF83      1223            mov     r7,dph
040F A8F0      1224            mov     r0,b
0411 F9        1225            mov     r1,a
0412 E581      1226            mov     a,sp
0414 24FC      1227            add     a,#0xfc
0416 F581      1228            mov     sp,a
0418 C006      1229            push    ar6
041A C007      1230            push    ar7
041C C000      1231            push    ar0
041E C001      1232            push    ar1
0420 858082    1233            mov     dpl,_linetrack_sloc0_1_0
0423 858183    1234            mov     dph,(_linetrack_sloc0_1_0 + 1)
0426 8582F0    1235            mov     b,(_linetrack_sloc0_1_0 + 2)
0429 E583      1236            mov     a,(_linetrack_sloc0_1_0 + 3)
042B 120100    1237            lcall   ___fsadd
042E AE82      1238            mov     r6,dpl
0430 AF83      1239            mov     r7,dph
0432 A8F0      1240            mov     r0,b
0434 F9        1241            mov     r1,a
0435 E581      1242            mov     a,sp
0437 24FC      1243            add     a,#0xfc
0439 F581      1244            mov     sp,a
043B D005      1245            pop     ar5
043D D004      1246            pop     ar4
043F D003      1247            pop     ar3
0441 D002      1248            pop     ar2
0443 C006      1249            push    ar6
0445 C007      1250            push    ar7
0447 C000      1251            push    ar0
0449 C001      1252            push    ar1
044B 8A82      1253            mov     dpl,r2
044D 8B83      1254            mov     dph,r3
044F 8CF0      1255            mov     b,r4
0451 ED        1256            mov     a,r5
0452 120100    1257            lcall   ___fsdiv
0455 AA82      1258            mov     r2,dpl
0457 AB83      1259            mov     r3,dph
0459 ACF0      1260            mov     r4,b
045B FD        1261            mov     r5,a
045C E581      1262            mov     a,sp
045E 24FC      1263            add     a,#0xfc
0460 F581      1264            mov     sp,a
0462 8A82      1265            mov     dpl,r2
0464 8B83      1266            mov     dph,r3
0466 8CF0      1267            mov     b,r4
0468 ED        1268            mov     a,r5
0469 120100    1269            lcall   ___fs2schar
046C 858280    1270            mov     _pwm_Right0,dpl
046F           1271   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:278: if (forwardbackward) {
046F E590      1272            mov     a,_linetrack_forwardbackward_1_81
0471 4591      1273            orl     a,(_linetrack_forwardbackward_1_81 + 1)
0473 6001      1274            jz      L012002?
0475           1275   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:279: pwm_Left0 = pwm_Left1;
0475 85C000    1276            mov     _pwm_Left0,_pwm_Left1
0478           1277   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:280: pwm_Left1 = -1;
0478 75C0FF    1278            mov     _pwm_Left1,#0xFF
047B           1279   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:281: pwm_Right1 = pwm_Right1;
047B 854040    1280            mov     _pwm_Right1,_pwm_Right1
047E           1281   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:282: pwm_Right0 = -1;
047E 7580FF    1282            mov     _pwm_Right0,#0xFF
0481           1283   L012002?:
0481           1284   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:285: printf("2.3 = %f, 2.4 = %f, LeftMotor = %4d, RightMotor = %4d, command: %d\r", vleft, vright, pwm_Left1, pwm_Right0, currentcmd);
0481 AAC0      1285            mov     r2,_currentcmd
0483 E5C0      1286            mov     a,_currentcmd
0485 33        1287            rlc     a
0486 95E0      1288            subb    a,acc
0488 FB        1289            mov     r3,a
0489 AC80      1290            mov     r4,_pwm_Right0
048B E580      1291            mov     a,_pwm_Right0
048D 33        1292            rlc     a
048E 95E0      1293            subb    a,acc
0490 FD        1294            mov     r5,a
0491 AEC0      1295            mov     r6,_pwm_Left1
0493 E5C0      1296            mov     a,_pwm_Left1
0495 33        1297            rlc     a
0496 95E0      1298            subb    a,acc
0498 FF        1299            mov     r7,a
0499 C002      1300            push    ar2
049B C003      1301            push    ar3
049D C004      1302            push    ar4
049F C005      1303            push    ar5
04A1 C006      1304            push    ar6
04A3 C007      1305            push    ar7
04A5 C030      1306            push    _linetrack_vright_1_82
04A7 C031      1307            push    (_linetrack_vright_1_82 + 1)
04A9 C032      1308            push    (_linetrack_vright_1_82 + 2)
04AB C033      1309            push    (_linetrack_vright_1_82 + 3)
04AD C0E0      1310            push    _linetrack_vleft_1_82
04AF C0E1      1311            push    (_linetrack_vleft_1_82 + 1)
04B1 C0E2      1312            push    (_linetrack_vleft_1_82 + 2)
04B3 C0E3      1313            push    (_linetrack_vleft_1_82 + 3)
04B5 74D0      1314            mov     a,#__str_0
04B7 C0E0      1315            push    acc
04B9 74A2      1316            mov     a,#(__str_0 >> 8)
04BB C0E0      1317            push    acc
04BD 7480      1318            mov     a,#0x80
04BF C0E0      1319            push    acc
04C1 120100    1320            lcall   _printf
04C4 E581      1321            mov     a,sp
04C6 24EF      1322            add     a,#0xef
04C8 F581      1323            mov     sp,a
04CA 22        1324            ret
04CB           1325   ;------------------------------------------------------------
04CB           1326   ;Allocation info for local variables in function 'stopcar'
04CB           1327   ;------------------------------------------------------------
04CB           1328   ;------------------------------------------------------------
04CB           1329   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:289: void stopcar () {
04CB           1330   ;        -----------------------------------------
04CB           1331   ;         function stopcar
04CB           1332   ;        -----------------------------------------
04CB           1333   _stopcar:
04CB           1334   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:290: pwm_Left1 = -1;
04CB 75C0FF    1335            mov     _pwm_Left1,#0xFF
04CE           1336   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:291: pwm_Right1 = -1;
04CE 7540FF    1337            mov     _pwm_Right1,#0xFF
04D1           1338   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:292: pwm_Left0 = -1;
04D1 7500FF    1339            mov     _pwm_Left0,#0xFF
04D4           1340   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:293: pwm_Right0 = -1;
04D4 7580FF    1341            mov     _pwm_Right0,#0xFF
04D7 22        1342            ret
04D8           1343   ;------------------------------------------------------------
04D8           1344   ;Allocation info for local variables in function 'turncar'
04D8           1345   ;------------------------------------------------------------
04D8           1346   ;leftright                 Allocated to registers r2 r3 
04D8           1347   ;vleft                     Allocated with name '_turncar_vleft_1_86'
04D8           1348   ;vright                    Allocated with name '_turncar_vright_1_86'
04D8           1349   ;------------------------------------------------------------
04D8           1350   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:296: void turncar (int leftright) {
04D8           1351   ;        -----------------------------------------
04D8           1352   ;         function turncar
04D8           1353   ;        -----------------------------------------
04D8           1354   _turncar:
04D8 AA82      1355            mov     r2,dpl
04DA AB83      1356            mov     r3,dph
04DC           1357   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:300: pwm_Left0 = -1;
04DC 7500FF    1358            mov     _pwm_Left0,#0xFF
04DF           1359   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:301: pwm_Left1 = -1;
04DF 75C0FF    1360            mov     _pwm_Left1,#0xFF
04E2           1361   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:302: pwm_Right0 = -1;
04E2 7580FF    1362            mov     _pwm_Right0,#0xFF
04E5           1363   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:303: pwm_Right1 = -1;
04E5 7540FF    1364            mov     _pwm_Right1,#0xFF
04E8           1365   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:306: if (leftright == 0) {
04E8 EA        1366            mov     a,r2
04E9 4B        1367            orl     a,r3
04EA 6001      1368            jz      L014022?
04EC 020100    1369            ljmp    L014012?
04EF           1370   L014022?:
04EF           1371   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:308: pwm_Right0 = 50;
04EF 758032    1372            mov     _pwm_Right0,#0x32
04F2           1373   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:310: waitms(1000);
04F2 9003E8    1374            mov     dptr,#0x03E8
04F5 120100    1375            lcall   _waitms
04F8           1376   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:312: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
04F8 75820B    1377            mov     dpl,#0x0B
04FB 120100    1378            lcall   _Volts_at_Pin
04FE 8582D0    1379            mov     _turncar_vleft_1_86,dpl
0501 8583D1    1380            mov     (_turncar_vleft_1_86 + 1),dph
0504 85F0D2    1381            mov     (_turncar_vleft_1_86 + 2),b
0507 F5D3      1382            mov     (_turncar_vleft_1_86 + 3),a
0509           1383   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:313: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0509 75820C    1384            mov     dpl,#0x0C
050C 120100    1385            lcall   _Volts_at_Pin
050F 858220    1386            mov     _turncar_vright_1_86,dpl
0512 858321    1387            mov     (_turncar_vright_1_86 + 1),dph
0515 85F022    1388            mov     (_turncar_vright_1_86 + 2),b
0518 F523      1389            mov     (_turncar_vright_1_86 + 3),a
051A           1390   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:315: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
051A           1391   L014002?:
051A C020      1392            push    _turncar_vright_1_86
051C C021      1393            push    (_turncar_vright_1_86 + 1)
051E C022      1394            push    (_turncar_vright_1_86 + 2)
0520 C023      1395            push    (_turncar_vright_1_86 + 3)
0522 85D082    1396            mov     dpl,_turncar_vleft_1_86
0525 85D183    1397            mov     dph,(_turncar_vleft_1_86 + 1)
0528 85D2F0    1398            mov     b,(_turncar_vleft_1_86 + 2)
052B E5D3      1399            mov     a,(_turncar_vleft_1_86 + 3)
052D 120100    1400            lcall   ___fssub
0530 AC82      1401            mov     r4,dpl
0532 AD83      1402            mov     r5,dph
0534 AEF0      1403            mov     r6,b
0536 FF        1404            mov     r7,a
0537 E581      1405            mov     a,sp
0539 24FC      1406            add     a,#0xfc
053B F581      1407            mov     sp,a
053D 74CD      1408            mov     a,#0xCD
053F C0E0      1409            push    acc
0541 74CC      1410            mov     a,#0xCC
0543 C0E0      1411            push    acc
0545 744C      1412            mov     a,#0x4C
0547 C0E0      1413            push    acc
0549 743E      1414            mov     a,#0x3E
054B C0E0      1415            push    acc
054D 8C82      1416            mov     dpl,r4
054F 8D83      1417            mov     dph,r5
0551 8EF0      1418            mov     b,r6
0553 EF        1419            mov     a,r7
0554 120100    1420            lcall   ___fsgt
0557 AC82      1421            mov     r4,dpl
0559 E581      1422            mov     a,sp
055B 24FC      1423            add     a,#0xfc
055D F581      1424            mov     sp,a
055F EC        1425            mov     a,r4
0560 7001      1426            jnz     L014003?
0562 C020      1427            push    _turncar_vright_1_86
0564 C021      1428            push    (_turncar_vright_1_86 + 1)
0566 C022      1429            push    (_turncar_vright_1_86 + 2)
0568 C023      1430            push    (_turncar_vright_1_86 + 3)
056A 85D082    1431            mov     dpl,_turncar_vleft_1_86
056D 85D183    1432            mov     dph,(_turncar_vleft_1_86 + 1)
0570 85D2F0    1433            mov     b,(_turncar_vleft_1_86 + 2)
0573 E5D3      1434            mov     a,(_turncar_vleft_1_86 + 3)
0575 120100    1435            lcall   ___fssub
0578 AC82      1436            mov     r4,dpl
057A AD83      1437            mov     r5,dph
057C AEF0      1438            mov     r6,b
057E FF        1439            mov     r7,a
057F E581      1440            mov     a,sp
0581 24FC      1441            add     a,#0xfc
0583 F581      1442            mov     sp,a
0585 74CD      1443            mov     a,#0xCD
0587 C0E0      1444            push    acc
0589 74CC      1445            mov     a,#0xCC
058B C0E0      1446            push    acc
058D 744C      1447            mov     a,#0x4C
058F C0E0      1448            push    acc
0591 74BE      1449            mov     a,#0xBE
0593 C0E0      1450            push    acc
0595 8C82      1451            mov     dpl,r4
0597 8D83      1452            mov     dph,r5
0599 8EF0      1453            mov     b,r6
059B EF        1454            mov     a,r7
059C 120100    1455            lcall   ___fslt
059F AC82      1456            mov     r4,dpl
05A1 E581      1457            mov     a,sp
05A3 24FC      1458            add     a,#0xfc
05A5 F581      1459            mov     sp,a
05A7 EC        1460            mov     a,r4
05A8 6001      1461            jz      L014004?
05AA           1462   L014003?:
05AA           1463   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:317: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
05AA 75820B    1464            mov     dpl,#0x0B
05AD 120100    1465            lcall   _Volts_at_Pin
05B0 8582D0    1466            mov     _turncar_vleft_1_86,dpl
05B3 8583D1    1467            mov     (_turncar_vleft_1_86 + 1),dph
05B6 85F0D2    1468            mov     (_turncar_vleft_1_86 + 2),b
05B9 F5D3      1469            mov     (_turncar_vleft_1_86 + 3),a
05BB           1470   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:318: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
05BB 75820C    1471            mov     dpl,#0x0C
05BE 120100    1472            lcall   _Volts_at_Pin
05C1 858220    1473            mov     _turncar_vright_1_86,dpl
05C4 858321    1474            mov     (_turncar_vright_1_86 + 1),dph
05C7 85F022    1475            mov     (_turncar_vright_1_86 + 2),b
05CA F523      1476            mov     (_turncar_vright_1_86 + 3),a
05CC 020100    1477            ljmp    L014002?
05CF           1478   L014004?:
05CF           1479   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:322: pwm_Right0 = -1;                 
05CF 7580FF    1480            mov     _pwm_Right0,#0xFF
05D2 22        1481            ret
05D3           1482   L014012?:
05D3           1483   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:325: else if (leftright == 1) {
05D3 BA0150    1484            cjne    r2,#0x01,L014025?
05D6 BB0050    1485            cjne    r3,#0x00,L014025?
05D9 8001      1486            sjmp    L014026?
05DB           1487   L014025?:
05DB 22        1488            ret
05DC           1489   L014026?:
05DC           1490   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:327: pwm_Left1 = 50;
05DC 75C032    1491            mov     _pwm_Left1,#0x32
05DF           1492   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:329: waitms(1000);
05DF 9003E8    1493            mov     dptr,#0x03E8
05E2 120100    1494            lcall   _waitms
05E5           1495   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:331: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
05E5 75820B    1496            mov     dpl,#0x0B
05E8 120100    1497            lcall   _Volts_at_Pin
05EB 8582D0    1498            mov     _turncar_vleft_1_86,dpl
05EE 8583D1    1499            mov     (_turncar_vleft_1_86 + 1),dph
05F1 85F0D2    1500            mov     (_turncar_vleft_1_86 + 2),b
05F4 F5D3      1501            mov     (_turncar_vleft_1_86 + 3),a
05F6           1502   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:332: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
05F6 75820C    1503            mov     dpl,#0x0C
05F9 120100    1504            lcall   _Volts_at_Pin
05FC 858220    1505            mov     _turncar_vright_1_86,dpl
05FF 858321    1506            mov     (_turncar_vright_1_86 + 1),dph
0602 85F022    1507            mov     (_turncar_vright_1_86 + 2),b
0605 F523      1508            mov     (_turncar_vright_1_86 + 3),a
0607           1509   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:334: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
0607           1510   L014006?:
0607 C020      1511            push    _turncar_vright_1_86
0609 C021      1512            push    (_turncar_vright_1_86 + 1)
060B C022      1513            push    (_turncar_vright_1_86 + 2)
060D C023      1514            push    (_turncar_vright_1_86 + 3)
060F 85D082    1515            mov     dpl,_turncar_vleft_1_86
0612 85D183    1516            mov     dph,(_turncar_vleft_1_86 + 1)
0615 85D2F0    1517            mov     b,(_turncar_vleft_1_86 + 2)
0618 E5D3      1518            mov     a,(_turncar_vleft_1_86 + 3)
061A 120100    1519            lcall   ___fssub
061D AA82      1520            mov     r2,dpl
061F AB83      1521            mov     r3,dph
0621 ACF0      1522            mov     r4,b
0623 FD        1523            mov     r5,a
0624 E581      1524            mov     a,sp
0626 24FC      1525            add     a,#0xfc
0628 F581      1526            mov     sp,a
062A 74CD      1527            mov     a,#0xCD
062C C0E0      1528            push    acc
062E 74CC      1529            mov     a,#0xCC
0630 C0E0      1530            push    acc
0632 744C      1531            mov     a,#0x4C
0634 C0E0      1532            push    acc
0636 743E      1533            mov     a,#0x3E
0638 C0E0      1534            push    acc
063A 8A82      1535            mov     dpl,r2
063C 8B83      1536            mov     dph,r3
063E 8CF0      1537            mov     b,r4
0640 ED        1538            mov     a,r5
0641 120100    1539            lcall   ___fsgt
0644 AA82      1540            mov     r2,dpl
0646 E581      1541            mov     a,sp
0648 24FC      1542            add     a,#0xfc
064A F581      1543            mov     sp,a
064C EA        1544            mov     a,r2
064D 7001      1545            jnz     L014007?
064F C020      1546            push    _turncar_vright_1_86
0651 C021      1547            push    (_turncar_vright_1_86 + 1)
0653 C022      1548            push    (_turncar_vright_1_86 + 2)
0655 C023      1549            push    (_turncar_vright_1_86 + 3)
0657 85D082    1550            mov     dpl,_turncar_vleft_1_86
065A 85D183    1551            mov     dph,(_turncar_vleft_1_86 + 1)
065D 85D2F0    1552            mov     b,(_turncar_vleft_1_86 + 2)
0660 E5D3      1553            mov     a,(_turncar_vleft_1_86 + 3)
0662 120100    1554            lcall   ___fssub
0665 AA82      1555            mov     r2,dpl
0667 AB83      1556            mov     r3,dph
0669 ACF0      1557            mov     r4,b
066B FD        1558            mov     r5,a
066C E581      1559            mov     a,sp
066E 24FC      1560            add     a,#0xfc
0670 F581      1561            mov     sp,a
0672 74CD      1562            mov     a,#0xCD
0674 C0E0      1563            push    acc
0676 74CC      1564            mov     a,#0xCC
0678 C0E0      1565            push    acc
067A 744C      1566            mov     a,#0x4C
067C C0E0      1567            push    acc
067E 74BE      1568            mov     a,#0xBE
0680 C0E0      1569            push    acc
0682 8A82      1570            mov     dpl,r2
0684 8B83      1571            mov     dph,r3
0686 8CF0      1572            mov     b,r4
0688 ED        1573            mov     a,r5
0689 120100    1574            lcall   ___fslt
068C AA82      1575            mov     r2,dpl
068E E581      1576            mov     a,sp
0690 24FC      1577            add     a,#0xfc
0692 F581      1578            mov     sp,a
0694 EA        1579            mov     a,r2
0695 6001      1580            jz      L014008?
0697           1581   L014007?:
0697           1582   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:336: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0697 75820B    1583            mov     dpl,#0x0B
069A 120100    1584            lcall   _Volts_at_Pin
069D 8582D0    1585            mov     _turncar_vleft_1_86,dpl
06A0 8583D1    1586            mov     (_turncar_vleft_1_86 + 1),dph
06A3 85F0D2    1587            mov     (_turncar_vleft_1_86 + 2),b
06A6 F5D3      1588            mov     (_turncar_vleft_1_86 + 3),a
06A8           1589   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:337: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
06A8 75820C    1590            mov     dpl,#0x0C
06AB 120100    1591            lcall   _Volts_at_Pin
06AE 858220    1592            mov     _turncar_vright_1_86,dpl
06B1 858321    1593            mov     (_turncar_vright_1_86 + 1),dph
06B4 85F022    1594            mov     (_turncar_vright_1_86 + 2),b
06B7 F523      1595            mov     (_turncar_vright_1_86 + 3),a
06B9 020100    1596            ljmp    L014006?
06BC           1597   L014008?:
06BC           1598   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:341: pwm_Left1 = -1; 
06BC 75C0FF    1599            mov     _pwm_Left1,#0xFF
06BF 22        1600            ret
06C0           1601   ;------------------------------------------------------------
06C0           1602   ;Allocation info for local variables in function 'uturn'
06C0           1603   ;------------------------------------------------------------
06C0           1604   ;vleft                     Allocated with name '_uturn_vleft_1_91'
06C0           1605   ;vright                    Allocated with name '_uturn_vright_1_91'
06C0           1606   ;------------------------------------------------------------
06C0           1607   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:345: void uturn () {
06C0           1608   ;        -----------------------------------------
06C0           1609   ;         function uturn
06C0           1610   ;        -----------------------------------------
06C0           1611   _uturn:
06C0           1612   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:349: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
06C0 75820B    1613            mov     dpl,#0x0B
06C3 120100    1614            lcall   _Volts_at_Pin
06C6 858270    1615            mov     _uturn_vleft_1_91,dpl
06C9 858371    1616            mov     (_uturn_vleft_1_91 + 1),dph
06CC 85F072    1617            mov     (_uturn_vleft_1_91 + 2),b
06CF F573      1618            mov     (_uturn_vleft_1_91 + 3),a
06D1           1619   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:350: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
06D1 75820C    1620            mov     dpl,#0x0C
06D4 120100    1621            lcall   _Volts_at_Pin
06D7 8582C0    1622            mov     _uturn_vright_1_91,dpl
06DA 8583C1    1623            mov     (_uturn_vright_1_91 + 1),dph
06DD 85F0C2    1624            mov     (_uturn_vright_1_91 + 2),b
06E0 F5C3      1625            mov     (_uturn_vright_1_91 + 3),a
06E2           1626   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:352: pwm_Left0 = -1;
06E2 7500FF    1627            mov     _pwm_Left0,#0xFF
06E5           1628   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:353: pwm_Left1 = 50;
06E5 75C032    1629            mov     _pwm_Left1,#0x32
06E8           1630   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:354: pwm_Right0 = -1;
06E8 7580FF    1631            mov     _pwm_Right0,#0xFF
06EB           1632   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:355: pwm_Right1 = 50;
06EB 754032    1633            mov     _pwm_Right1,#0x32
06EE           1634   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:357: waitms(4000);
06EE 900FA0    1635            mov     dptr,#0x0FA0
06F1 120100    1636            lcall   _waitms
06F4           1637   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:359: while (((vleft - vright) > 0.2) || ((vleft - vright) < (-0.2))) {
06F4           1638   L015002?:
06F4 C0C0      1639            push    _uturn_vright_1_91
06F6 C0C1      1640            push    (_uturn_vright_1_91 + 1)
06F8 C0C2      1641            push    (_uturn_vright_1_91 + 2)
06FA C0C3      1642            push    (_uturn_vright_1_91 + 3)
06FC 857082    1643            mov     dpl,_uturn_vleft_1_91
06FF 857183    1644            mov     dph,(_uturn_vleft_1_91 + 1)
0702 8572F0    1645            mov     b,(_uturn_vleft_1_91 + 2)
0705 E573      1646            mov     a,(_uturn_vleft_1_91 + 3)
0707 120100    1647            lcall   ___fssub
070A AA82      1648            mov     r2,dpl
070C AB83      1649            mov     r3,dph
070E ACF0      1650            mov     r4,b
0710 FD        1651            mov     r5,a
0711 E581      1652            mov     a,sp
0713 24FC      1653            add     a,#0xfc
0715 F581      1654            mov     sp,a
0717 74CD      1655            mov     a,#0xCD
0719 C0E0      1656            push    acc
071B 74CC      1657            mov     a,#0xCC
071D C0E0      1658            push    acc
071F 744C      1659            mov     a,#0x4C
0721 C0E0      1660            push    acc
0723 743E      1661            mov     a,#0x3E
0725 C0E0      1662            push    acc
0727 8A82      1663            mov     dpl,r2
0729 8B83      1664            mov     dph,r3
072B 8CF0      1665            mov     b,r4
072D ED        1666            mov     a,r5
072E 120100    1667            lcall   ___fsgt
0731 AA82      1668            mov     r2,dpl
0733 E581      1669            mov     a,sp
0735 24FC      1670            add     a,#0xfc
0737 F581      1671            mov     sp,a
0739 EA        1672            mov     a,r2
073A 7001      1673            jnz     L015003?
073C C0C0      1674            push    _uturn_vright_1_91
073E C0C1      1675            push    (_uturn_vright_1_91 + 1)
0740 C0C2      1676            push    (_uturn_vright_1_91 + 2)
0742 C0C3      1677            push    (_uturn_vright_1_91 + 3)
0744 857082    1678            mov     dpl,_uturn_vleft_1_91
0747 857183    1679            mov     dph,(_uturn_vleft_1_91 + 1)
074A 8572F0    1680            mov     b,(_uturn_vleft_1_91 + 2)
074D E573      1681            mov     a,(_uturn_vleft_1_91 + 3)
074F 120100    1682            lcall   ___fssub
0752 AA82      1683            mov     r2,dpl
0754 AB83      1684            mov     r3,dph
0756 ACF0      1685            mov     r4,b
0758 FD        1686            mov     r5,a
0759 E581      1687            mov     a,sp
075B 24FC      1688            add     a,#0xfc
075D F581      1689            mov     sp,a
075F 74CD      1690            mov     a,#0xCD
0761 C0E0      1691            push    acc
0763 74CC      1692            mov     a,#0xCC
0765 C0E0      1693            push    acc
0767 744C      1694            mov     a,#0x4C
0769 C0E0      1695            push    acc
076B 74BE      1696            mov     a,#0xBE
076D C0E0      1697            push    acc
076F 8A82      1698            mov     dpl,r2
0771 8B83      1699            mov     dph,r3
0773 8CF0      1700            mov     b,r4
0775 ED        1701            mov     a,r5
0776 120100    1702            lcall   ___fslt
0779 AA82      1703            mov     r2,dpl
077B E581      1704            mov     a,sp
077D 24FC      1705            add     a,#0xfc
077F F581      1706            mov     sp,a
0781 EA        1707            mov     a,r2
0782 6001      1708            jz      L015005?
0784           1709   L015003?:
0784           1710   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:361: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0784 75820B    1711            mov     dpl,#0x0B
0787 120100    1712            lcall   _Volts_at_Pin
078A 858270    1713            mov     _uturn_vleft_1_91,dpl
078D 858371    1714            mov     (_uturn_vleft_1_91 + 1),dph
0790 85F072    1715            mov     (_uturn_vleft_1_91 + 2),b
0793 F573      1716            mov     (_uturn_vleft_1_91 + 3),a
0795           1717   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:362: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
0795 75820C    1718            mov     dpl,#0x0C
0798 120100    1719            lcall   _Volts_at_Pin
079B 8582C0    1720            mov     _uturn_vright_1_91,dpl
079E 8583C1    1721            mov     (_uturn_vright_1_91 + 1),dph
07A1 85F0C2    1722            mov     (_uturn_vright_1_91 + 2),b
07A4 F5C3      1723            mov     (_uturn_vright_1_91 + 3),a
07A6 020100    1724            ljmp    L015002?
07A9           1725   L015005?:
07A9 22        1726            ret
07AA           1727   ;------------------------------------------------------------
07AA           1728   ;Allocation info for local variables in function 'main'
07AA           1729   ;------------------------------------------------------------
07AA           1730   ;------------------------------------------------------------
07AA           1731   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:366: void main (void)
07AA           1732   ;        -----------------------------------------
07AA           1733   ;         function main
07AA           1734   ;        -----------------------------------------
07AA           1735   _main:
07AA           1736   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:369: MOTOR_LEFT0 =0;
07AA C295      1737            clr     _P1_5
07AC           1738   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:370: MOTOR_LEFT1 =0;
07AC C296      1739            clr     _P1_6
07AE           1740   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:371: MOTOR_RIGHT0 =0;
07AE C2A0      1741            clr     _P2_0
07B0           1742   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:372: MOTOR_RIGHT1 =0;
07B0 C2A1      1743            clr     _P2_1
07B2           1744   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:374: currentstate = 1;        //initialize the car to be stopped
07B2 758001    1745            mov     _currentstate,#0x01
07B5           1746   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:375: currentcmd = 1;          //initialize the command to be null
07B5 75C001    1747            mov     _currentcmd,#0x01
07B8           1748   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:378: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
07B8 7450      1749            mov     a,#__str_1
07BA C0E0      1750            push    acc
07BC 74A7      1751            mov     a,#(__str_1 >> 8)
07BE C0E0      1752            push    acc
07C0 7480      1753            mov     a,#0x80
07C2 C0E0      1754            push    acc
07C4 120100    1755            lcall   _printf
07C7 1581      1756            dec     sp
07C9 1581      1757            dec     sp
07CB 1581      1758            dec     sp
07CD           1759   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:380: "Check pins P2.1 and P2.2 with the oscilloscope.\r\n");
07CD 7490      1760            mov     a,#__str_2
07CF C0E0      1761            push    acc
07D1 74A7      1762            mov     a,#(__str_2 >> 8)
07D3 C0E0      1763            push    acc
07D5 7480      1764            mov     a,#0x80
07D7 C0E0      1765            push    acc
07D9 120100    1766            lcall   _printf
07DC 1581      1767            dec     sp
07DE 1581      1768            dec     sp
07E0 1581      1769            dec     sp
07E2           1770   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:387: InitPinADC(2, 3); // Configure P2.3 as analog input
07E2 756003    1771            mov     _InitPinADC_PARM_2,#0x03
07E5 758202    1772            mov     dpl,#0x02
07E8 120100    1773            lcall   _InitPinADC
07EB           1774   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:388: InitPinADC(2, 4); // Configure P2.4 as analog input
07EB 756004    1775            mov     _InitPinADC_PARM_2,#0x04
07EE 758202    1776            mov     dpl,#0x02
07F1 120100    1777            lcall   _InitPinADC
07F4           1778   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:389: InitADC();
07F4 120100    1779            lcall   _InitADC
07F7           1780   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:391: while(1)
07F7           1781   L016021?:
07F7           1782   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:395: switch (currentstate) {
07F7 AA80      1783            mov     r2,_currentstate
07F9 BA0110    1784            cjne    r2,#0x01,L016033?
07FC 8001      1785            sjmp    L016001?
07FE           1786   L016033?:
07FE BA0290    1787            cjne    r2,#0x02,L016034?
0801 8001      1788            sjmp    L016002?
0803           1789   L016034?:
0803           1790   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:396: case 1:
0803 BA0310    1791            cjne    r2,#0x03,L016004?
0806 8001      1792            sjmp    L016003?
0808           1793   L016001?:
0808           1794   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:397: linetrack(0);    //forwards
0808 900000    1795            mov     dptr,#0x0000
080B 120100    1796            lcall   _linetrack
080E           1797   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:398: break;
080E           1798   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:399: case 2:
080E 8001      1799            sjmp    L016004?
0810           1800   L016002?:
0810           1801   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:400: linetrack(1);    //backwards
0810 900001    1802            mov     dptr,#0x0001
0813 120100    1803            lcall   _linetrack
0816           1804   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:401: break;
0816           1805   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:402: case 3:
0816 8001      1806            sjmp    L016004?
0818           1807   L016003?:
0818           1808   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:403: stopcar();               //stop car
0818 120100    1809            lcall   _stopcar
081B           1810   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:405: }
081B           1811   L016004?:
081B           1812   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:407: switch (currentcmd) {
081B E5C0      1813            mov     a,_currentcmd
081D FA        1814            mov     r2,a
081E 30E790    1815            jnb     acc.7,L016036?
0821 020100    1816            ljmp    L016018?
0824           1817   L016036?:
0824 C3        1818            clr     c
0825 7486      1819            mov     a,#(0x06 ^ 0x80)
0827 8AF0      1820            mov     b,r2
0829 63F080    1821            xrl     b,#0x80
082C 95F0      1822            subb    a,b
082E 5001      1823            jnc     L016037?
0830 020100    1824            ljmp    L016018?
0833           1825   L016037?:
0833 EA        1826            mov     a,r2
0834 2A        1827            add     a,r2
0835 2A        1828            add     a,r2
0836 90AA50    1829            mov     dptr,#L016038?
0839 73        1830            jmp     @a+dptr
083A           1831   L016038?:
083A 020100    1832            ljmp    L016005?
083D 020100    1833            ljmp    L016006?
0840 020100    1834            ljmp    L016010?
0843 020100    1835            ljmp    L016014?
0846 020100    1836            ljmp    L016015?
0849 020100    1837            ljmp    L016016?
084C 020100    1838            ljmp    L016017?
084F           1839   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:409: case 0 :
084F           1840   L016005?:
084F           1841   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:410: break;
084F           1842   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:411: case 1 :
084F 8001      1843            sjmp    L016021?
0851           1844   L016006?:
0851           1845   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:413: if (Volts_at_Pin(LQFP32_MUX_P2_3) > 1 || Volts_at_Pin(LQFP32_MUX_P2_4) > 1) {
0851 75820B    1846            mov     dpl,#0x0B
0854 120100    1847            lcall   _Volts_at_Pin
0857 AA82      1848            mov     r2,dpl
0859 AB83      1849            mov     r3,dph
085B ACF0      1850            mov     r4,b
085D FD        1851            mov     r5,a
085E E4        1852            clr     a
085F C0E0      1853            push    acc
0861 C0E0      1854            push    acc
0863 7480      1855            mov     a,#0x80
0865 C0E0      1856            push    acc
0867 743F      1857            mov     a,#0x3F
0869 C0E0      1858            push    acc
086B 8A82      1859            mov     dpl,r2
086D 8B83      1860            mov     dph,r3
086F 8CF0      1861            mov     b,r4
0871 ED        1862            mov     a,r5
0872 120100    1863            lcall   ___fsgt
0875 AA82      1864            mov     r2,dpl
0877 E581      1865            mov     a,sp
0879 24FC      1866            add     a,#0xfc
087B F581      1867            mov     sp,a
087D EA        1868            mov     a,r2
087E 7001      1869            jnz     L016007?
0880 75820C    1870            mov     dpl,#0x0C
0883 120100    1871            lcall   _Volts_at_Pin
0886 AA82      1872            mov     r2,dpl
0888 AB83      1873            mov     r3,dph
088A ACF0      1874            mov     r4,b
088C FD        1875            mov     r5,a
088D E4        1876            clr     a
088E C0E0      1877            push    acc
0890 C0E0      1878            push    acc
0892 7480      1879            mov     a,#0x80
0894 C0E0      1880            push    acc
0896 743F      1881            mov     a,#0x3F
0898 C0E0      1882            push    acc
089A 8A82      1883            mov     dpl,r2
089C 8B83      1884            mov     dph,r3
089E 8CF0      1885            mov     b,r4
08A0 ED        1886            mov     a,r5
08A1 120100    1887            lcall   ___fsgt
08A4 AA82      1888            mov     r2,dpl
08A6 E581      1889            mov     a,sp
08A8 24FC      1890            add     a,#0xfc
08AA F581      1891            mov     sp,a
08AC EA        1892            mov     a,r2
08AD 7001      1893            jnz     L016040?
08AF 020100    1894            ljmp    L016021?
08B2           1895   L016040?:
08B2           1896   L016007?:
08B2           1897   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:414: printf("\n\r reached intersection :D");
08B2 74D0      1898            mov     a,#__str_3
08B4 C0E0      1899            push    acc
08B6 74AC      1900            mov     a,#(__str_3 >> 8)
08B8 C0E0      1901            push    acc
08BA 7480      1902            mov     a,#0x80
08BC C0E0      1903            push    acc
08BE 120100    1904            lcall   _printf
08C1 1581      1905            dec     sp
08C3 1581      1906            dec     sp
08C5 1581      1907            dec     sp
08C7           1908   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:415: pwm_Left1 = 35;
08C7 75C023    1909            mov     _pwm_Left1,#0x23
08CA           1910   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:416: pwm_Left0 = -1;
08CA 7500FF    1911            mov     _pwm_Left0,#0xFF
08CD           1912   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:417: pwm_Right0 = 35;
08CD 758023    1913            mov     _pwm_Right0,#0x23
08D0           1914   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:418: pwm_Right1 = -1;                                                 
08D0 7540FF    1915            mov     _pwm_Right1,#0xFF
08D3           1916   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:419: waitms(1500);
08D3 9005DC    1917            mov     dptr,#0x05DC
08D6 120100    1918            lcall   _waitms
08D9           1919   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:421: turncar(0); //0 = left
08D9 900000    1920            mov     dptr,#0x0000
08DC 120100    1921            lcall   _turncar
08DF           1922   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:422: currentcmd = 0;
08DF 75C000    1923            mov     _currentcmd,#0x00
08E2           1924   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:425: break;
08E2 020100    1925            ljmp    L016021?
08E5           1926   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:428: case 2 :
08E5           1927   L016010?:
08E5           1928   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:430: if (Volts_at_Pin(LQFP32_MUX_P2_4) > 1 || Volts_at_Pin(LQFP32_MUX_P2_3) > 1) {
08E5 75820C    1929            mov     dpl,#0x0C
08E8 120100    1930            lcall   _Volts_at_Pin
08EB AA82      1931            mov     r2,dpl
08ED AB83      1932            mov     r3,dph
08EF ACF0      1933            mov     r4,b
08F1 FD        1934            mov     r5,a
08F2 E4        1935            clr     a
08F3 C0E0      1936            push    acc
08F5 C0E0      1937            push    acc
08F7 7480      1938            mov     a,#0x80
08F9 C0E0      1939            push    acc
08FB 743F      1940            mov     a,#0x3F
08FD C0E0      1941            push    acc
08FF 8A82      1942            mov     dpl,r2
0901 8B83      1943            mov     dph,r3
0903 8CF0      1944            mov     b,r4
0905 ED        1945            mov     a,r5
0906 120100    1946            lcall   ___fsgt
0909 AA82      1947            mov     r2,dpl
090B E581      1948            mov     a,sp
090D 24FC      1949            add     a,#0xfc
090F F581      1950            mov     sp,a
0911 EA        1951            mov     a,r2
0912 7001      1952            jnz     L016011?
0914 75820B    1953            mov     dpl,#0x0B
0917 120100    1954            lcall   _Volts_at_Pin
091A AA82      1955            mov     r2,dpl
091C AB83      1956            mov     r3,dph
091E ACF0      1957            mov     r4,b
0920 FD        1958            mov     r5,a
0921 E4        1959            clr     a
0922 C0E0      1960            push    acc
0924 C0E0      1961            push    acc
0926 7480      1962            mov     a,#0x80
0928 C0E0      1963            push    acc
092A 743F      1964            mov     a,#0x3F
092C C0E0      1965            push    acc
092E 8A82      1966            mov     dpl,r2
0930 8B83      1967            mov     dph,r3
0932 8CF0      1968            mov     b,r4
0934 ED        1969            mov     a,r5
0935 120100    1970            lcall   ___fsgt
0938 AA82      1971            mov     r2,dpl
093A E581      1972            mov     a,sp
093C 24FC      1973            add     a,#0xfc
093E F581      1974            mov     sp,a
0940 EA        1975            mov     a,r2
0941 7001      1976            jnz     L016042?
0943 020100    1977            ljmp    L016021?
0946           1978   L016042?:
0946           1979   L016011?:
0946           1980   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:431: printf("\n\r reached intersection :D");
0946 74D0      1981            mov     a,#__str_3
0948 C0E0      1982            push    acc
094A 74AC      1983            mov     a,#(__str_3 >> 8)
094C C0E0      1984            push    acc
094E 7480      1985            mov     a,#0x80
0950 C0E0      1986            push    acc
0952 120100    1987            lcall   _printf
0955 1581      1988            dec     sp
0957 1581      1989            dec     sp
0959 1581      1990            dec     sp
095B           1991   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:432: pwm_Left1 = 35;
095B 75C023    1992            mov     _pwm_Left1,#0x23
095E           1993   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:433: pwm_Left0 = -1;
095E 7500FF    1994            mov     _pwm_Left0,#0xFF
0961           1995   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:434: pwm_Right0 = 35;
0961 758023    1996            mov     _pwm_Right0,#0x23
0964           1997   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:435: pwm_Right1 = -1;
0964 7540FF    1998            mov     _pwm_Right1,#0xFF
0967           1999   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:436: waitms(1500);
0967 9005DC    2000            mov     dptr,#0x05DC
096A 120100    2001            lcall   _waitms
096D           2002   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:438: turncar(1); //1 = right
096D 900001    2003            mov     dptr,#0x0001
0970 120100    2004            lcall   _turncar
0973           2005   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:439: currentcmd = 0;
0973 75C000    2006            mov     _currentcmd,#0x00
0976           2007   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:441: break;
0976 020100    2008            ljmp    L016021?
0979           2009   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:444: case 3 :
0979           2010   L016014?:
0979           2011   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:445: currentstate = 1;
0979 758001    2012            mov     _currentstate,#0x01
097C           2013   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:446: currentcmd = 0;
097C 75C000    2014            mov     _currentcmd,#0x00
097F           2015   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:447: break;
097F 020100    2016            ljmp    L016021?
0982           2017   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:450: case 4 :
0982           2018   L016015?:
0982           2019   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:451: currentstate = 2;
0982 758002    2020            mov     _currentstate,#0x02
0985           2021   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:452: currentcmd = 0;
0985 75C000    2022            mov     _currentcmd,#0x00
0988           2023   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:453: break;
0988 020100    2024            ljmp    L016021?
098B           2025   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:456: case 5 :
098B           2026   L016016?:
098B           2027   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:457: currentstate = 3;
098B 758003    2028            mov     _currentstate,#0x03
098E           2029   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:458: currentcmd = 0;
098E 75C000    2030            mov     _currentcmd,#0x00
0991           2031   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:459: break;
0991 020100    2032            ljmp    L016021?
0994           2033   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:462: case 6 :
0994           2034   L016017?:
0994           2035   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:463: uturn();  //uturn
0994 120100    2036            lcall   _uturn
0997           2037   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:464: currentcmd = 0;
0997 75C000    2038            mov     _currentcmd,#0x00
099A           2039   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:465: break;
099A 020100    2040            ljmp    L016021?
099D           2041   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:466: default: 
099D           2042   L016018?:
099D           2043   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:467: currentstate = 1;
099D 758001    2044            mov     _currentstate,#0x01
09A0           2045   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:468: }
09A0 020100    2046            ljmp    L016021?
09A3           2047            rseg R_CSEG
09A3           2048   
0000           2049            rseg R_XINIT
0000           2050   
0000           2051            rseg R_CONST
0000           2052   __str_0:
0000 322E3320  2053            db '2.3 = %f, 2.4 = %f, LeftMotor = %4d, RightMotor = %4d, comma'
     3D202566
     2C20322E
     34203D20
     25662C20
     4C656674
     4D6F746F
     72203D20
     2534642C
     20526967
     68744D6F
     746F7220
     3D202534
     642C2063
     6F6D6D61
003C 6E643A20  2054            db 'nd: %d'
     2564
0042 0D        2055            db 0x0D
0043 00        2056            db 0x00
0044           2057   __str_1:
0044 1B        2058            db 0x1B
0045 5B324A    2059            db '[2J'
0048 00        2060            db 0x00
0049           2061   __str_2:
0049 53717561  2062            db 'Square wave generator for the F38x.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204633
     38782E
006C 0D        2063            db 0x0D
006D 0A        2064            db 0x0A
006E 43686563  2065            db 'Check pins P2.1 and P2.'
     6B207069
     6E732050
     322E3120
     616E6420
     50322E
0085 32207769  2066            db '2 with the oscilloscope.'
     74682074
     6865206F
     7363696C
     6C6F7363
     6F70652E
009D 0D        2067            db 0x0D
009E 0A        2068            db 0x0A
009F 00        2069            db 0x00
00A0           2070   __str_3:
00A0 0A        2071            db 0x0A
00A1 0D        2072            db 0x0D
00A2 20726561  2073            db ' reached intersection :D'
     63686564
     20696E74
     65727365
     6374696F
     6E203A44
00BA 00        2074            db 0x00
00BB           2075   
002E           2076            CSEG
002E           2077   
002E           2078   end
