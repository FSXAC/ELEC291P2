0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Thu Mar 30 12:40:34 2017
0000              5   ;--------------------------------------------------------
                  5   $name motors
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _linetrack
0000             30            public _readData
0000             31            public _Volts_at_Pin
0000             32            public _ADC_at_Pin
0000             33            public _InitPinADC
0000             34            public _InitADC
0000             35            public _forward_backward
0000             36            public _Timer2_ISR
0000             37            public _waitms
0000             38            public _Timer3us
0000             39            public __c51_external_startup
0000             40            public _currentcmd
0000             41            public _direction
0000             42            public _pwm_Right1
0000             43            public _pwm_Right0
0000             44            public _pwm_Left1
0000             45            public _pwm_Left0
0000             46            public _pwm_both
0000             47            public _mode
0000             48            public _pwm_count
0000             49   ;--------------------------------------------------------
0000             50   ; Special Function Registers
0000             51   ;--------------------------------------------------------
0000             52   _P0             DATA 0x80
0000             53   _SP             DATA 0x81
0000             54   _DPL            DATA 0x82
0000             55   _DPH            DATA 0x83
0000             56   _EMI0TC         DATA 0x84
0000             57   _EMI0CF         DATA 0x85
0000             58   _OSCLCN         DATA 0x86
0000             59   _PCON           DATA 0x87
0000             60   _TCON           DATA 0x88
0000             61   _TMOD           DATA 0x89
0000             62   _TL0            DATA 0x8a
0000             63   _TL1            DATA 0x8b
0000             64   _TH0            DATA 0x8c
0000             65   _TH1            DATA 0x8d
0000             66   _CKCON          DATA 0x8e
0000             67   _PSCTL          DATA 0x8f
0000             68   _P1             DATA 0x90
0000             69   _TMR3CN         DATA 0x91
0000             70   _TMR4CN         DATA 0x91
0000             71   _TMR3RLL        DATA 0x92
0000             72   _TMR4RLL        DATA 0x92
0000             73   _TMR3RLH        DATA 0x93
0000             74   _TMR4RLH        DATA 0x93
0000             75   _TMR3L          DATA 0x94
0000             76   _TMR4L          DATA 0x94
0000             77   _TMR3H          DATA 0x95
0000             78   _TMR4H          DATA 0x95
0000             79   _USB0ADR        DATA 0x96
0000             80   _USB0DAT        DATA 0x97
0000             81   _SCON           DATA 0x98
0000             82   _SCON0          DATA 0x98
0000             83   _SBUF           DATA 0x99
0000             84   _SBUF0          DATA 0x99
0000             85   _CPT1CN         DATA 0x9a
0000             86   _CPT0CN         DATA 0x9b
0000             87   _CPT1MD         DATA 0x9c
0000             88   _CPT0MD         DATA 0x9d
0000             89   _CPT1MX         DATA 0x9e
0000             90   _CPT0MX         DATA 0x9f
0000             91   _P2             DATA 0xa0
0000             92   _SPI0CFG        DATA 0xa1
0000             93   _SPI0CKR        DATA 0xa2
0000             94   _SPI0DAT        DATA 0xa3
0000             95   _P0MDOUT        DATA 0xa4
0000             96   _P1MDOUT        DATA 0xa5
0000             97   _P2MDOUT        DATA 0xa6
0000             98   _P3MDOUT        DATA 0xa7
0000             99   _IE             DATA 0xa8
0000            100   _CLKSEL         DATA 0xa9
0000            101   _EMI0CN         DATA 0xaa
0000            102   __XPAGE         DATA 0xaa
0000            103   _SBCON1         DATA 0xac
0000            104   _P4MDOUT        DATA 0xae
0000            105   _PFE0CN         DATA 0xaf
0000            106   _P3             DATA 0xb0
0000            107   _OSCXCN         DATA 0xb1
0000            108   _OSCICN         DATA 0xb2
0000            109   _OSCICL         DATA 0xb3
0000            110   _SBRLL1         DATA 0xb4
0000            111   _SBRLH1         DATA 0xb5
0000            112   _FLSCL          DATA 0xb6
0000            113   _FLKEY          DATA 0xb7
0000            114   _IP             DATA 0xb8
0000            115   _CLKMUL         DATA 0xb9
0000            116   _SMBTC          DATA 0xb9
0000            117   _AMX0N          DATA 0xba
0000            118   _AMX0P          DATA 0xbb
0000            119   _ADC0CF         DATA 0xbc
0000            120   _ADC0L          DATA 0xbd
0000            121   _ADC0H          DATA 0xbe
0000            122   _SFRPAGE        DATA 0xbf
0000            123   _SMB0CN         DATA 0xc0
0000            124   _SMB1CN         DATA 0xc0
0000            125   _SMB0CF         DATA 0xc1
0000            126   _SMB1CF         DATA 0xc1
0000            127   _SMB0DAT        DATA 0xc2
0000            128   _SMB1DAT        DATA 0xc2
0000            129   _ADC0GTL        DATA 0xc3
0000            130   _ADC0GTH        DATA 0xc4
0000            131   _ADC0LTL        DATA 0xc5
0000            132   _ADC0LTH        DATA 0xc6
0000            133   _P4             DATA 0xc7
0000            134   _TMR2CN         DATA 0xc8
0000            135   _TMR5CN         DATA 0xc8
0000            136   _REG01CN        DATA 0xc9
0000            137   _TMR2RLL        DATA 0xca
0000            138   _TMR5RLL        DATA 0xca
0000            139   _TMR2RLH        DATA 0xcb
0000            140   _TMR5RLH        DATA 0xcb
0000            141   _TMR2L          DATA 0xcc
0000            142   _TMR5L          DATA 0xcc
0000            143   _TMR2H          DATA 0xcd
0000            144   _TMR5H          DATA 0xcd
0000            145   _SMB0ADM        DATA 0xce
0000            146   _SMB1ADM        DATA 0xce
0000            147   _SMB0ADR        DATA 0xcf
0000            148   _SMB1ADR        DATA 0xcf
0000            149   _PSW            DATA 0xd0
0000            150   _REF0CN         DATA 0xd1
0000            151   _SCON1          DATA 0xd2
0000            152   _SBUF1          DATA 0xd3
0000            153   _P0SKIP         DATA 0xd4
0000            154   _P1SKIP         DATA 0xd5
0000            155   _P2SKIP         DATA 0xd6
0000            156   _USB0XCN        DATA 0xd7
0000            157   _PCA0CN         DATA 0xd8
0000            158   _PCA0MD         DATA 0xd9
0000            159   _PCA0CPM0       DATA 0xda
0000            160   _PCA0CPM1       DATA 0xdb
0000            161   _PCA0CPM2       DATA 0xdc
0000            162   _PCA0CPM3       DATA 0xdd
0000            163   _PCA0CPM4       DATA 0xde
0000            164   _P3SKIP         DATA 0xdf
0000            165   _ACC            DATA 0xe0
0000            166   _XBR0           DATA 0xe1
0000            167   _XBR1           DATA 0xe2
0000            168   _XBR2           DATA 0xe3
0000            169   _IT01CF         DATA 0xe4
0000            170   _CKCON1         DATA 0xe4
0000            171   _SMOD1          DATA 0xe5
0000            172   _EIE1           DATA 0xe6
0000            173   _EIE2           DATA 0xe7
0000            174   _ADC0CN         DATA 0xe8
0000            175   _PCA0CPL1       DATA 0xe9
0000            176   _PCA0CPH1       DATA 0xea
0000            177   _PCA0CPL2       DATA 0xeb
0000            178   _PCA0CPH2       DATA 0xec
0000            179   _PCA0CPL3       DATA 0xed
0000            180   _PCA0CPH3       DATA 0xee
0000            181   _RSTSRC         DATA 0xef
0000            182   _B              DATA 0xf0
0000            183   _P0MDIN         DATA 0xf1
0000            184   _P1MDIN         DATA 0xf2
0000            185   _P2MDIN         DATA 0xf3
0000            186   _P3MDIN         DATA 0xf4
0000            187   _P4MDIN         DATA 0xf5
0000            188   _EIP1           DATA 0xf6
0000            189   _EIP2           DATA 0xf7
0000            190   _SPI0CN         DATA 0xf8
0000            191   _PCA0L          DATA 0xf9
0000            192   _PCA0H          DATA 0xfa
0000            193   _PCA0CPL0       DATA 0xfb
0000            194   _PCA0CPH0       DATA 0xfc
0000            195   _PCA0CPL4       DATA 0xfd
0000            196   _PCA0CPH4       DATA 0xfe
0000            197   _VDM0CN         DATA 0xff
0000            198   _DPTR           DATA 0x8382
0000            199   _TMR2RL         DATA 0xcbca
0000            200   _TMR3RL         DATA 0x9392
0000            201   _TMR4RL         DATA 0x9392
0000            202   _TMR5RL         DATA 0xcbca
0000            203   _TMR2           DATA 0xcdcc
0000            204   _TMR3           DATA 0x9594
0000            205   _TMR4           DATA 0x9594
0000            206   _TMR5           DATA 0xcdcc
0000            207   _SBRL1          DATA 0xb5b4
0000            208   _ADC0           DATA 0xbebd
0000            209   _ADC0GT         DATA 0xc4c3
0000            210   _ADC0LT         DATA 0xc6c5
0000            211   _PCA0           DATA 0xfaf9
0000            212   _PCA0CP1        DATA 0xeae9
0000            213   _PCA0CP2        DATA 0xeceb
0000            214   _PCA0CP3        DATA 0xeeed
0000            215   _PCA0CP0        DATA 0xfcfb
0000            216   _PCA0CP4        DATA 0xfefd
0000            217   ;--------------------------------------------------------
0000            218   ; special function bits
0000            219   ;--------------------------------------------------------
0000            220   _P0_0           BIT 0x80
0000            221   _P0_1           BIT 0x81
0000            222   _P0_2           BIT 0x82
0000            223   _P0_3           BIT 0x83
0000            224   _P0_4           BIT 0x84
0000            225   _P0_5           BIT 0x85
0000            226   _P0_6           BIT 0x86
0000            227   _P0_7           BIT 0x87
0000            228   _TF1            BIT 0x8f
0000            229   _TR1            BIT 0x8e
0000            230   _TF0            BIT 0x8d
0000            231   _TR0            BIT 0x8c
0000            232   _IE1            BIT 0x8b
0000            233   _IT1            BIT 0x8a
0000            234   _IE0            BIT 0x89
0000            235   _IT0            BIT 0x88
0000            236   _P1_0           BIT 0x90
0000            237   _P1_1           BIT 0x91
0000            238   _P1_2           BIT 0x92
0000            239   _P1_3           BIT 0x93
0000            240   _P1_4           BIT 0x94
0000            241   _P1_5           BIT 0x95
0000            242   _P1_6           BIT 0x96
0000            243   _P1_7           BIT 0x97
0000            244   _S0MODE         BIT 0x9f
0000            245   _SCON0_6        BIT 0x9e
0000            246   _MCE0           BIT 0x9d
0000            247   _REN0           BIT 0x9c
0000            248   _TB80           BIT 0x9b
0000            249   _RB80           BIT 0x9a
0000            250   _TI0            BIT 0x99
0000            251   _RI0            BIT 0x98
0000            252   _SCON_6         BIT 0x9e
0000            253   _MCE            BIT 0x9d
0000            254   _REN            BIT 0x9c
0000            255   _TB8            BIT 0x9b
0000            256   _RB8            BIT 0x9a
0000            257   _TI             BIT 0x99
0000            258   _RI             BIT 0x98
0000            259   _P2_0           BIT 0xa0
0000            260   _P2_1           BIT 0xa1
0000            261   _P2_2           BIT 0xa2
0000            262   _P2_3           BIT 0xa3
0000            263   _P2_4           BIT 0xa4
0000            264   _P2_5           BIT 0xa5
0000            265   _P2_6           BIT 0xa6
0000            266   _P2_7           BIT 0xa7
0000            267   _EA             BIT 0xaf
0000            268   _ESPI0          BIT 0xae
0000            269   _ET2            BIT 0xad
0000            270   _ES0            BIT 0xac
0000            271   _ET1            BIT 0xab
0000            272   _EX1            BIT 0xaa
0000            273   _ET0            BIT 0xa9
0000            274   _EX0            BIT 0xa8
0000            275   _P3_0           BIT 0xb0
0000            276   _P3_1           BIT 0xb1
0000            277   _P3_2           BIT 0xb2
0000            278   _P3_3           BIT 0xb3
0000            279   _P3_4           BIT 0xb4
0000            280   _P3_5           BIT 0xb5
0000            281   _P3_6           BIT 0xb6
0000            282   _P3_7           BIT 0xb7
0000            283   _IP_7           BIT 0xbf
0000            284   _PSPI0          BIT 0xbe
0000            285   _PT2            BIT 0xbd
0000            286   _PS0            BIT 0xbc
0000            287   _PT1            BIT 0xbb
0000            288   _PX1            BIT 0xba
0000            289   _PT0            BIT 0xb9
0000            290   _PX0            BIT 0xb8
0000            291   _MASTER0        BIT 0xc7
0000            292   _TXMODE0        BIT 0xc6
0000            293   _STA0           BIT 0xc5
0000            294   _STO0           BIT 0xc4
0000            295   _ACKRQ0         BIT 0xc3
0000            296   _ARBLOST0       BIT 0xc2
0000            297   _ACK0           BIT 0xc1
0000            298   _SI0            BIT 0xc0
0000            299   _MASTER1        BIT 0xc7
0000            300   _TXMODE1        BIT 0xc6
0000            301   _STA1           BIT 0xc5
0000            302   _STO1           BIT 0xc4
0000            303   _ACKRQ1         BIT 0xc3
0000            304   _ARBLOST1       BIT 0xc2
0000            305   _ACK1           BIT 0xc1
0000            306   _SI1            BIT 0xc0
0000            307   _TF2            BIT 0xcf
0000            308   _TF2H           BIT 0xcf
0000            309   _TF2L           BIT 0xce
0000            310   _TF2LEN         BIT 0xcd
0000            311   _TF2CEN         BIT 0xcc
0000            312   _T2SPLIT        BIT 0xcb
0000            313   _TR2            BIT 0xca
0000            314   _T2CSS          BIT 0xc9
0000            315   _T2XCLK         BIT 0xc8
0000            316   _TF5H           BIT 0xcf
0000            317   _TF5L           BIT 0xce
0000            318   _TF5LEN         BIT 0xcd
0000            319   _TMR5CN_4       BIT 0xcc
0000            320   _T5SPLIT        BIT 0xcb
0000            321   _TR5            BIT 0xca
0000            322   _TMR5CN_1       BIT 0xc9
0000            323   _T5XCLK         BIT 0xc8
0000            324   _CY             BIT 0xd7
0000            325   _AC             BIT 0xd6
0000            326   _F0             BIT 0xd5
0000            327   _RS1            BIT 0xd4
0000            328   _RS0            BIT 0xd3
0000            329   _OV             BIT 0xd2
0000            330   _F1             BIT 0xd1
0000            331   _PARITY         BIT 0xd0
0000            332   _CF             BIT 0xdf
0000            333   _CR             BIT 0xde
0000            334   _PCA0CN_5       BIT 0xde
0000            335   _CCF4           BIT 0xdc
0000            336   _CCF3           BIT 0xdb
0000            337   _CCF2           BIT 0xda
0000            338   _CCF1           BIT 0xd9
0000            339   _CCF0           BIT 0xd8
0000            340   _ACC_7          BIT 0xe7
0000            341   _ACC_6          BIT 0xe6
0000            342   _ACC_5          BIT 0xe5
0000            343   _ACC_4          BIT 0xe4
0000            344   _ACC_3          BIT 0xe3
0000            345   _ACC_2          BIT 0xe2
0000            346   _ACC_1          BIT 0xe1
0000            347   _ACC_0          BIT 0xe0
0000            348   _AD0EN          BIT 0xef
0000            349   _AD0TM          BIT 0xee
0000            350   _AD0INT         BIT 0xed
0000            351   _AD0BUSY        BIT 0xec
0000            352   _AD0WINT        BIT 0xeb
0000            353   _AD0CM2         BIT 0xea
0000            354   _AD0CM1         BIT 0xe9
0000            355   _AD0CM0         BIT 0xe8
0000            356   _B_7            BIT 0xf7
0000            357   _B_6            BIT 0xf6
0000            358   _B_5            BIT 0xf5
0000            359   _B_4            BIT 0xf4
0000            360   _B_3            BIT 0xf3
0000            361   _B_2            BIT 0xf2
0000            362   _B_1            BIT 0xf1
0000            363   _B_0            BIT 0xf0
0000            364   _SPIF           BIT 0xff
0000            365   _WCOL           BIT 0xfe
0000            366   _MODF           BIT 0xfd
0000            367   _RXOVRN         BIT 0xfc
0000            368   _NSSMD1         BIT 0xfb
0000            369   _NSSMD0         BIT 0xfa
0000            370   _TXBMT          BIT 0xf9
0000            371   _SPIEN          BIT 0xf8
0000            372   ;--------------------------------------------------------
0000            373   ; overlayable register banks
0000            374   ;--------------------------------------------------------
0000            375            rbank0 segment data overlay
0000            376   ;--------------------------------------------------------
0000            377   ; internal ram data
0000            378   ;--------------------------------------------------------
0000            379            rseg R_DSEG
0000            380   _pwm_count:
0000            381            ds 1
0001            382   _mode:
0001            383            ds 1
0002            384   _pwm_both:
0002            385            ds 1
0003            386   _pwm_Left0:
0003            387            ds 1
0004            388   _pwm_Left1:
0004            389            ds 1
0005            390   _pwm_Right0:
0005            391            ds 1
0006            392   _pwm_Right1:
0006            393            ds 1
0007            394   _direction:
0007            395            ds 1
0008            396   _currentcmd:
0008            397            ds 1
0009            398   _linetrack_vleft_1_82:
0009            399            ds 4
000D            400   _linetrack_vright_1_82:
000D            401            ds 4
0011            402   ;--------------------------------------------------------
0011            403   ; overlayable items in internal ram 
0011            404   ;--------------------------------------------------------
0000            405            rseg    R_OSEG
0000            406            rseg    R_OSEG
0000            407            rseg    R_OSEG
0000            408   _InitPinADC_PARM_2:
0000            409            ds 1
0001            410            rseg    R_OSEG
0001            411   ;--------------------------------------------------------
0001            412   ; indirectly addressable internal ram data
0001            413   ;--------------------------------------------------------
0000            414            rseg R_ISEG
0000            415   ;--------------------------------------------------------
0000            416   ; absolute internal ram data
0000            417   ;--------------------------------------------------------
0000            418            DSEG
0000            419   ;--------------------------------------------------------
0000            420   ; bit data
0000            421   ;--------------------------------------------------------
0000            422            rseg R_BSEG
0000            423   _Timer2_ISR_sloc0_1_0:
0000            424            DBIT    1
0001            425   ;--------------------------------------------------------
0001            426   ; paged external ram data
0001            427   ;--------------------------------------------------------
0000            428            rseg R_PSEG
0000            429   ;--------------------------------------------------------
0000            430   ; external ram data
0000            431   ;--------------------------------------------------------
0000            432            rseg R_XSEG
0000            433   ;--------------------------------------------------------
0000            434   ; absolute external ram data
0000            435   ;--------------------------------------------------------
0000            436            XSEG
0000            437   ;--------------------------------------------------------
0000            438   ; external initialized ram data
0000            439   ;--------------------------------------------------------
0000            440            rseg R_IXSEG
0000            441            rseg R_HOME
0000            442            rseg R_GSINIT
0000            443            rseg R_CSEG
0000            444   ;--------------------------------------------------------
0000            445   ; Reset entry point and interrupt vectors
0000            446   ;--------------------------------------------------------
0000            447            CSEG at 0x0000
0000 020100     448            ljmp    _crt0
002B            449            CSEG at 0x002b
002B 020100     450            ljmp    _Timer2_ISR
002E            451   ;--------------------------------------------------------
002E            452   ; global & static initialisations
002E            453   ;--------------------------------------------------------
0000            454            rseg R_HOME
0000            455            rseg R_GSINIT
0000            456            rseg R_GSINIT
0000            457   ;--------------------------------------------------------
0000            458   ; data variables initialization
0000            459   ;--------------------------------------------------------
0000            460            rseg R_DINIT
0000            461   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:20: volatile  char pwm_count=0;
0000 755800     462            mov     _pwm_count,#0x00
0003            463   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:21: volatile  char mode = 0;
0003 751800     464            mov     _mode,#0x00
0006            465   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:22: volatile  char pwm_both =0;
0006 75D800     466            mov     _pwm_both,#0x00
0009            467   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:23: volatile  char pwm_Left0 = 0; //p1.5
0009 759800     468            mov     _pwm_Left0,#0x00
000C            469   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:24: volatile  char pwm_Left1 = 0; //p1.6
000C 755800     470            mov     _pwm_Left1,#0x00
000F            471   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:25: volatile  char pwm_Right0 = 0; //p2.0
000F 751800     472            mov     _pwm_Right0,#0x00
0012            473   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:26: volatile  char pwm_Right1 = 0; //p2.1
0012 75D800     474            mov     _pwm_Right1,#0x00
0015            475   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:27: volatile  char direction = 0; // 1 for back 0 for forward
0015 759800     476            mov     _direction,#0x00
0018            477   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:29: volatile  char currentcmd = 0;
0018 755800     478            mov     _currentcmd,#0x00
001B            479            ; The linker places a 'ret' at the end of segment R_DINIT.
001B            480   ;--------------------------------------------------------
001B            481   ; code
001B            482   ;--------------------------------------------------------
0000            483            rseg R_CSEG
0000            484   ;------------------------------------------------------------
0000            485   ;Allocation info for local variables in function '_c51_external_startup'
0000            486   ;------------------------------------------------------------
0000            487   ;------------------------------------------------------------
0000            488   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:33: char _c51_external_startup (void)
0000            489   ;        -----------------------------------------
0000            490   ;         function _c51_external_startup
0000            491   ;        -----------------------------------------
0000            492   __c51_external_startup:
0000            493            using   0
0000            494   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:35: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     495            anl     _PCA0MD,#0xBF
0003            496   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:36: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     497            mov     _VDM0CN,#0x80
0006            498   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:37: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     499            mov     _RSTSRC,#0x06
0009            500   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:45: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     501            orl     _CLKSEL,#0x03
000C            502   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:49: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     503            orl     _OSCICN,#0x03
000F            504   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:52: SCON0 = 0x10;
000F 759810     505            mov     _SCON0,#0x10
0012            506   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:54: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     507            mov     _TH1,#0x30
0015            508   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:55: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     509            anl     _CKCON,#0xF4
0018            510   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:56: CKCON |=  0x08;
0018 438E08     511            orl     _CKCON,#0x08
001B            512   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:69: TL1 = TH1;      // Init Timer1
001B 858D8B     513            mov     _TL1,_TH1
001E            514   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:70: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     515            anl     _TMOD,#0x0F
0021            516   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:71: TMOD |=  0x20;
0021 438920     517            orl     _TMOD,#0x20
0024            518   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:72: TR1 = 1; // START Timer1
0024 D28E       519            setb    _TR1
0026            520   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:73: TI = 1;  // Indicate TX0 ready
0026 D299       521            setb    _TI
0028            522   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:76: P2MDOUT|=0b_0000_0011;
0028 43A603     523            orl     _P2MDOUT,#0x03
002B            524   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:77: P0MDOUT |= 0x10; // Enable UTX as push-pull output
002B 43A410     525            orl     _P0MDOUT,#0x10
002E            526   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:78: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     527            mov     _XBR0,#0x01
0031            528   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:79: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     529            mov     _XBR1,#0x40
0034            530   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:82: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
0034 75C800     531            mov     _TMR2CN,#0x00
0037            532   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:83: CKCON|=0b_0001_0000;
0037 438E10     533            orl     _CKCON,#0x10
003A            534   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:84: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
003A 75CA78     535            mov     _TMR2RL,#0x78
003D 75CBEC     536            mov     (_TMR2RL >> 8),#0xEC
0040            537   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:85: TMR2=0xffff;   // Set to reload immediately
0040 75CCFF     538            mov     _TMR2,#0xFF
0043 75CDFF     539            mov     (_TMR2 >> 8),#0xFF
0046            540   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:86: ET2=1;         // Enable Timer2 interrupts
0046 D2AD       541            setb    _ET2
0048            542   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:87: TR2=1;         // Start Timer2
0048 D2CA       543            setb    _TR2
004A            544   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:89: EA=1; // Enable interrupts
004A D2AF       545            setb    _EA
004C            546   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:91: return 0;
004C 758200     547            mov     dpl,#0x00
004F 22         548            ret
0050            549   ;------------------------------------------------------------
0050            550   ;Allocation info for local variables in function 'Timer3us'
0050            551   ;------------------------------------------------------------
0050            552   ;us                        Allocated to registers r2 
0050            553   ;i                         Allocated to registers r3 
0050            554   ;------------------------------------------------------------
0050            555   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:95: void Timer3us(unsigned char us)
0050            556   ;        -----------------------------------------
0050            557   ;         function Timer3us
0050            558   ;        -----------------------------------------
0050            559   _Timer3us:
0050 AA82       560            mov     r2,dpl
0052            561   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:100: CKCON|=0b_0100_0000;
0052 438E40     562            orl     _CKCON,#0x40
0055            563   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:102: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0055 7592D0     564            mov     _TMR3RL,#0xD0
0058 7593FF     565            mov     (_TMR3RL >> 8),#0xFF
005B            566   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:103: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005B 859294     567            mov     _TMR3,_TMR3RL
005E 859395     568            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0061            569   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:105: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0061 759104     570            mov     _TMR3CN,#0x04
0064            571   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:106: for (i = 0; i < us; i++)       // Count <us> overflows
0064 7B00       572            mov     r3,#0x00
0066            573   L003004?:
0066 C3         574            clr     c
0067 EB         575            mov     a,r3
0068 9A         576            subb    a,r2
0069 5001       577            jnc     L003007?
006B            578   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:108: while (!(TMR3CN & 0x80));  // Wait for overflow
006B            579   L003001?:
006B E591       580            mov     a,_TMR3CN
006D 30E708     581            jnb     acc.7,L003001?
0070            582   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:109: TMR3CN &= ~(0x80);         // Clear overflow indicator
0070 53917F     583            anl     _TMR3CN,#0x7F
0073            584   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:106: for (i = 0; i < us; i++)       // Count <us> overflows
0073 0B         585            inc     r3
0074 8001       586            sjmp    L003004?
0076            587   L003007?:
0076            588   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:111: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
0076 759100     589            mov     _TMR3CN,#0x00
0079 22         590            ret
007A            591   ;------------------------------------------------------------
007A            592   ;Allocation info for local variables in function 'waitms'
007A            593   ;------------------------------------------------------------
007A            594   ;ms                        Allocated to registers r2 r3 
007A            595   ;j                         Allocated to registers r2 r3 
007A            596   ;------------------------------------------------------------
007A            597   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:114: void waitms (unsigned int ms)
007A            598   ;        -----------------------------------------
007A            599   ;         function waitms
007A            600   ;        -----------------------------------------
007A            601   _waitms:
007A AA82       602            mov     r2,dpl
007C AB83       603            mov     r3,dph
007E            604   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:117: for(j=ms; j!=0; j--)
007E            605   L004001?:
007E BA0008     606            cjne    r2,#0x00,L004010?
0081 BB0008     607            cjne    r3,#0x00,L004010?
0084 22         608            ret
0085            609   L004010?:
0085            610   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:119: Timer3us(249);
0085 7582F9     611            mov     dpl,#0xF9
0088 C002       612            push    ar2
008A C003       613            push    ar3
008C 120100     614            lcall   _Timer3us
008F            615   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:120: Timer3us(249);
008F 7582F9     616            mov     dpl,#0xF9
0092 120100     617            lcall   _Timer3us
0095            618   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:121: Timer3us(249);
0095 7582F9     619            mov     dpl,#0xF9
0098 120100     620            lcall   _Timer3us
009B            621   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:122: Timer3us(250);
009B 7582FA     622            mov     dpl,#0xFA
009E 120100     623            lcall   _Timer3us
00A1 D003       624            pop     ar3
00A3 D002       625            pop     ar2
00A5            626   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:117: for(j=ms; j!=0; j--)
00A5 1A         627            dec     r2
00A6 BAFF48     628            cjne    r2,#0xff,L004011?
00A9 1B         629            dec     r3
00AA            630   L004011?:
00AA 8001       631            sjmp    L004001?
00AC            632   ;------------------------------------------------------------
00AC            633   ;Allocation info for local variables in function 'Timer2_ISR'
00AC            634   ;------------------------------------------------------------
00AC            635   ;------------------------------------------------------------
00AC            636   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:127: void Timer2_ISR (void) interrupt 5
00AC            637   ;        -----------------------------------------
00AC            638   ;         function Timer2_ISR
00AC            639   ;        -----------------------------------------
00AC            640   _Timer2_ISR:
00AC C0E0       641            push    acc
00AE C0F0       642            push    b
00B0 C0D0       643            push    psw
00B2 75D000     644            mov     psw,#0x00
00B5            645   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:129: TF2H = 0; // Clear Timer2 interrupt flag
00B5 C2CF       646            clr     _TF2H
00B7            647   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:131: pwm_count++;
00B7 0558       648            inc     _pwm_count
00B9            649   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:132: if(pwm_count>100) pwm_count=0;
00B9 C3         650            clr     c
00BA 74E4       651            mov     a,#(0x64 ^ 0x80)
00BC 8558F0     652            mov     b,_pwm_count
00BF 63F080     653            xrl     b,#0x80
00C2 95F0       654            subb    a,b
00C4 5001       655            jnc     L005002?
00C6 755800     656            mov     _pwm_count,#0x00
00C9            657   L005002?:
00C9            658   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:135: MOTOR_LEFT0 = pwm_count > pwm_Left0 ? 0 : 1; //p1.5
00C9 C3         659            clr     c
00CA E598       660            mov     a,_pwm_Left0
00CC 6480       661            xrl     a,#0x80
00CE 8558F0     662            mov     b,_pwm_count
00D1 63F080     663            xrl     b,#0x80
00D4 95F0       664            subb    a,b
00D6 92C8       665            mov  _Timer2_ISR_sloc0_1_0,c
00D8 B3         666            cpl     c
00D9 9295       667            mov     _P1_5,c
00DB            668   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:136: MOTOR_LEFT1 = pwm_count > pwm_Left1 ? 0 : 1; //p1.6
00DB C3         669            clr     c
00DC E558       670            mov     a,_pwm_Left1
00DE 6480       671            xrl     a,#0x80
00E0 8558F0     672            mov     b,_pwm_count
00E3 63F080     673            xrl     b,#0x80
00E6 95F0       674            subb    a,b
00E8 92C8       675            mov  _Timer2_ISR_sloc0_1_0,c
00EA B3         676            cpl     c
00EB 9296       677            mov     _P1_6,c
00ED            678   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:137: MOTOR_RIGHT0 = pwm_count > pwm_Right0 ? 0 : 1; //p2.0
00ED C3         679            clr     c
00EE E518       680            mov     a,_pwm_Right0
00F0 6480       681            xrl     a,#0x80
00F2 8558F0     682            mov     b,_pwm_count
00F5 63F080     683            xrl     b,#0x80
00F8 95F0       684            subb    a,b
00FA 92C8       685            mov  _Timer2_ISR_sloc0_1_0,c
00FC B3         686            cpl     c
00FD 92A0       687            mov     _P2_0,c
00FF            688   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:138: MOTOR_RIGHT1 = pwm_count > pwm_Right1 ? 0 : 1; //p2.1
00FF C3         689            clr     c
0100 E5D8       690            mov     a,_pwm_Right1
0102 6480       691            xrl     a,#0x80
0104 8558F0     692            mov     b,_pwm_count
0107 63F080     693            xrl     b,#0x80
010A 95F0       694            subb    a,b
010C 92C8       695            mov  _Timer2_ISR_sloc0_1_0,c
010E B3         696            cpl     c
010F 92A1       697            mov     _P2_1,c
0111 D0D0       698            pop     psw
0113 D0F0       699            pop     b
0115 D0E0       700            pop     acc
0117 32         701            reti
0118            702   ;        eliminated unneeded push/pop dpl
0118            703   ;        eliminated unneeded push/pop dph
0118            704   ;------------------------------------------------------------
0118            705   ;Allocation info for local variables in function 'forward_backward'
0118            706   ;------------------------------------------------------------
0118            707   ;direction                 Allocated to registers r2 
0118            708   ;------------------------------------------------------------
0118            709   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:145: void forward_backward(unsigned char direction)
0118            710   ;        -----------------------------------------
0118            711   ;         function forward_backward
0118            712   ;        -----------------------------------------
0118            713   _forward_backward:
0118            714   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:148: if (direction == 0) { //p2.1,1.6 on
0118 E582       715            mov     a,dpl
011A FA         716            mov     r2,a
011B 7001       717            jnz     L006004?
011D            718   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:149: pwm_Left0 = pwm_Right0 = -1;
011D 7518FF     719            mov     _pwm_Right0,#0xFF
0120 7598FF     720            mov     _pwm_Left0,#0xFF
0123            721   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:150: pwm_Left1 = pwm_Right1 = pwm_both;  //MOTOR_LEFT1 = MOTOR_RIGHT1 = pwm_both;
0123 85D8D8     722            mov     _pwm_Right1,_pwm_both
0126 85D858     723            mov     _pwm_Left1,_pwm_both
0129 22         724            ret
012A            725   L006004?:
012A            726   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:153: else if (direction == 1) { //p2.0,1.5 on
012A BA0188     727            cjne    r2,#0x01,L006006?
012D            728   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:154: pwm_Left1 = pwm_Right1 = -1;
012D 75D8FF     729            mov     _pwm_Right1,#0xFF
0130 7558FF     730            mov     _pwm_Left1,#0xFF
0133            731   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:155: pwm_Left0 = pwm_Right0 = pwm_both; 
0133 85D818     732            mov     _pwm_Right0,_pwm_both
0136 85D898     733            mov     _pwm_Left0,_pwm_both
0139            734   L006006?:
0139 22         735            ret
013A            736   ;------------------------------------------------------------
013A            737   ;Allocation info for local variables in function 'InitADC'
013A            738   ;------------------------------------------------------------
013A            739   ;------------------------------------------------------------
013A            740   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:161: void InitADC (void)
013A            741   ;        -----------------------------------------
013A            742   ;         function InitADC
013A            743   ;        -----------------------------------------
013A            744   _InitADC:
013A            745   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:164: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
013A 75BCF8     746            mov     _ADC0CF,#0xF8
013D            747   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:165: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
013D 75E880     748            mov     _ADC0CN,#0x80
0140            749   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:166: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
0140 75D108     750            mov     _REF0CN,#0x08
0143 22         751            ret
0144            752   ;------------------------------------------------------------
0144            753   ;Allocation info for local variables in function 'InitPinADC'
0144            754   ;------------------------------------------------------------
0144            755   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0144            756   ;portno                    Allocated to registers r2 
0144            757   ;mask                      Allocated to registers r3 
0144            758   ;------------------------------------------------------------
0144            759   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:169: void InitPinADC (unsigned char portno, unsigned char pinno)
0144            760   ;        -----------------------------------------
0144            761   ;         function InitPinADC
0144            762   ;        -----------------------------------------
0144            763   _InitPinADC:
0144 AA82       764            mov     r2,dpl
0146            765   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:173: mask=1<<pinno;
0146 85F8F0     766            mov     b,_InitPinADC_PARM_2
0149 05F0       767            inc     b
014B 7401       768            mov     a,#0x01
014D 8001       769            sjmp    L008012?
014F            770   L008010?:
014F 25E0       771            add     a,acc
0151            772   L008012?:
0151 D5F008     773            djnz    b,L008010?
0154 FB         774            mov     r3,a
0155            775   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:175: switch (portno)
0155 EA         776            mov     a,r2
0156 24FC       777            add     a,#0xff - 0x03
0158 4001       778            jc      L008007?
015A EA         779            mov     a,r2
015B 2A         780            add     a,r2
015C 2A         781            add     a,r2
015D 909B88     782            mov     dptr,#L008014?
0160 73         783            jmp     @a+dptr
0161            784   L008014?:
0161 020100     785            ljmp    L008001?
0164 020100     786            ljmp    L008002?
0167 020100     787            ljmp    L008003?
016A 020100     788            ljmp    L008004?
016D            789   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:177: case 0:
016D            790   L008001?:
016D            791   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:178: P0MDIN &= (~mask); // Set pin as analog input
016D EB         792            mov     a,r3
016E F4         793            cpl     a
016F 52F1       794            anl     _P0MDIN,a
0171            795   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:179: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0171 EB         796            mov     a,r3
0172 42D4       797            orl     _P0SKIP,a
0174            798   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:180: break;
0174            799   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:181: case 1:
0174 22         800            ret
0175            801   L008002?:
0175            802   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:182: P1MDIN &= (~mask); // Set pin as analog input
0175 EB         803            mov     a,r3
0176 F4         804            cpl     a
0177 52F2       805            anl     _P1MDIN,a
0179            806   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:183: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0179 EB         807            mov     a,r3
017A 42D5       808            orl     _P1SKIP,a
017C            809   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:184: break;
017C            810   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:185: case 2:
017C 22         811            ret
017D            812   L008003?:
017D            813   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:186: P2MDIN &= (~mask); // Set pin as analog input
017D EB         814            mov     a,r3
017E F4         815            cpl     a
017F 52F3       816            anl     _P2MDIN,a
0181            817   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:187: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0181 EB         818            mov     a,r3
0182 42D6       819            orl     _P2SKIP,a
0184            820   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:188: break;
0184            821   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:189: case 3:
0184 22         822            ret
0185            823   L008004?:
0185            824   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:190: P3MDIN &= (~mask); // Set pin as analog input
0185 EB         825            mov     a,r3
0186 F4         826            cpl     a
0187 FA         827            mov     r2,a
0188 52F4       828            anl     _P3MDIN,a
018A            829   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:191: P3SKIP |= mask; // Skip Crossbar decoding for this pin
018A EB         830            mov     a,r3
018B 42DF       831            orl     _P3SKIP,a
018D            832   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:195: }
018D            833   L008007?:
018D 22         834            ret
018E            835   ;------------------------------------------------------------
018E            836   ;Allocation info for local variables in function 'ADC_at_Pin'
018E            837   ;------------------------------------------------------------
018E            838   ;pin                       Allocated to registers 
018E            839   ;------------------------------------------------------------
018E            840   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:198: unsigned int ADC_at_Pin(unsigned char pin)
018E            841   ;        -----------------------------------------
018E            842   ;         function ADC_at_Pin
018E            843   ;        -----------------------------------------
018E            844   _ADC_at_Pin:
018E 8582BB     845            mov     _AMX0P,dpl
0191            846   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:201: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
0191 75BA1F     847            mov     _AMX0N,#0x1F
0194            848   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:203: AD0BUSY=1;
0194 D2EC       849            setb    _AD0BUSY
0196            850   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:204: while (AD0BUSY); // Wait for dummy conversion to finish
0196            851   L009001?:
0196 20ECC8     852            jb      _AD0BUSY,L009001?
0199            853   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:206: AD0BUSY = 1;
0199 D2EC       854            setb    _AD0BUSY
019B            855   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:207: while (AD0BUSY); // Wait for conversion to complete
019B            856   L009004?:
019B 20EC08     857            jb      _AD0BUSY,L009004?
019E            858   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:208: return (ADC0L+(ADC0H*0x100));
019E AABD       859            mov     r2,_ADC0L
01A0 7B00       860            mov     r3,#0x00
01A2 ADBE       861            mov     r5,_ADC0H
01A4 7C00       862            mov     r4,#0x00
01A6 EC         863            mov     a,r4
01A7 2A         864            add     a,r2
01A8 F582       865            mov     dpl,a
01AA ED         866            mov     a,r5
01AB 3B         867            addc    a,r3
01AC F583       868            mov     dph,a
01AE 22         869            ret
01AF            870   ;------------------------------------------------------------
01AF            871   ;Allocation info for local variables in function 'Volts_at_Pin'
01AF            872   ;------------------------------------------------------------
01AF            873   ;pin                       Allocated to registers r2 
01AF            874   ;------------------------------------------------------------
01AF            875   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:211: float Volts_at_Pin(unsigned char pin)
01AF            876   ;        -----------------------------------------
01AF            877   ;         function Volts_at_Pin
01AF            878   ;        -----------------------------------------
01AF            879   _Volts_at_Pin:
01AF            880   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:213: return ((ADC_at_Pin(pin)*3.30)/1024.0);
01AF 120100     881            lcall   _ADC_at_Pin
01B2 120100     882            lcall   ___uint2fs
01B5 AA82       883            mov     r2,dpl
01B7 AB83       884            mov     r3,dph
01B9 ACF0       885            mov     r4,b
01BB FD         886            mov     r5,a
01BC C002       887            push    ar2
01BE C003       888            push    ar3
01C0 C004       889            push    ar4
01C2 C005       890            push    ar5
01C4 903333     891            mov     dptr,#0x3333
01C7 75F053     892            mov     b,#0x53
01CA 7440       893            mov     a,#0x40
01CC 120100     894            lcall   ___fsmul
01CF AA82       895            mov     r2,dpl
01D1 AB83       896            mov     r3,dph
01D3 ACF0       897            mov     r4,b
01D5 FD         898            mov     r5,a
01D6 E581       899            mov     a,sp
01D8 24FC       900            add     a,#0xfc
01DA F581       901            mov     sp,a
01DC E4         902            clr     a
01DD C0E0       903            push    acc
01DF C0E0       904            push    acc
01E1 7480       905            mov     a,#0x80
01E3 C0E0       906            push    acc
01E5 7444       907            mov     a,#0x44
01E7 C0E0       908            push    acc
01E9 8A82       909            mov     dpl,r2
01EB 8B83       910            mov     dph,r3
01ED 8CF0       911            mov     b,r4
01EF ED         912            mov     a,r5
01F0 120100     913            lcall   ___fsdiv
01F3 AA82       914            mov     r2,dpl
01F5 AB83       915            mov     r3,dph
01F7 ACF0       916            mov     r4,b
01F9 FD         917            mov     r5,a
01FA E581       918            mov     a,sp
01FC 24FC       919            add     a,#0xfc
01FE F581       920            mov     sp,a
0200 8A82       921            mov     dpl,r2
0202 8B83       922            mov     dph,r3
0204 8CF0       923            mov     b,r4
0206 ED         924            mov     a,r5
0207 22         925            ret
0208            926   ;------------------------------------------------------------
0208            927   ;Allocation info for local variables in function 'readData'
0208            928   ;------------------------------------------------------------
0208            929   ;------------------------------------------------------------
0208            930   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:217: void readData (void) {
0208            931   ;        -----------------------------------------
0208            932   ;         function readData
0208            933   ;        -----------------------------------------
0208            934   _readData:
0208            935   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:219: if (COMMAND_PIN == 0) {                                  //0---
0208 209048     936            jb      _P1_0,L011022?
020B            937   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:220: waitms(6);
020B 900006     938            mov     dptr,#0x0006
020E 120100     939            lcall   _waitms
0211            940   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:221: if (COMMAND_PIN == 1) {                          //01--
0211 309088     941            jnb     _P1_0,L011018?
0214            942   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:222: waitms(4);
0214 900004     943            mov     dptr,#0x0004
0217 120100     944            lcall   _waitms
021A            945   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:223: if (COMMAND_PIN == 0) {                  //010-
021A 2090C8     946            jb      _P1_0,L011007?
021D            947   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:224: waitms(4);
021D 900004     948            mov     dptr,#0x0004
0220 120100     949            lcall   _waitms
0223            950   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:225: if (COMMAND_PIN == 0) {          //0100  
0223 209008     951            jb      _P1_0,L011002?
0226            952   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:226: currentcmd = 4;
0226 755804     953            mov     _currentcmd,#0x04
0229 8001       954            sjmp    L011022?
022B            955   L011002?:
022B            956   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:229: currentcmd = 5;
022B 755805     957            mov     _currentcmd,#0x05
022E 8001       958            sjmp    L011022?
0230            959   L011007?:
0230            960   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:233: waitms(4);
0230 900004     961            mov     dptr,#0x0004
0233 120100     962            lcall   _waitms
0236            963   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:234: if (COMMAND_PIN == 0) {          //0110
0236 209048     964            jb      _P1_0,L011022?
0239            965   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:235: currentcmd = 6;
0239 755806     966            mov     _currentcmd,#0x06
023C 8001       967            sjmp    L011022?
023E            968   L011018?:
023E            969   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:240: waitms(4);
023E 900004     970            mov     dptr,#0x0004
0241 120100     971            lcall   _waitms
0244            972   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:241: if (COMMAND_PIN == 1) {                  //001-
0244 309048     973            jnb     _P1_0,L011015?
0247            974   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:242: waitms(4);
0247 900004     975            mov     dptr,#0x0004
024A 120100     976            lcall   _waitms
024D            977   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:243: if (COMMAND_PIN == 1) {          //0011
024D 309088     978            jnb     _P1_0,L011010?
0250            979   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:244: currentcmd = 3;
0250 755803     980            mov     _currentcmd,#0x03
0253 8001       981            sjmp    L011022?
0255            982   L011010?:
0255            983   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:247: currentcmd = 2;
0255 755802     984            mov     _currentcmd,#0x02
0258 8001       985            sjmp    L011022?
025A            986   L011015?:
025A            987   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:251: waitms(4);
025A 900004     988            mov     dptr,#0x0004
025D 120100     989            lcall   _waitms
0260            990   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:252: if (COMMAND_PIN == 1) {          //0001  
0260 309048     991            jnb     _P1_0,L011022?
0263            992   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:253: currentcmd == 1;
0263 E558       993            mov     a,_currentcmd
0265            994   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:259: while (COMMAND_PIN == 0) {}
0265            995   L011022?:
0265 309048     996            jnb     _P1_0,L011022?
0268 22         997            ret
0269            998   ;------------------------------------------------------------
0269            999   ;Allocation info for local variables in function 'linetrack'
0269           1000   ;------------------------------------------------------------
0269           1001   ;vleft                     Allocated with name '_linetrack_vleft_1_82'
0269           1002   ;vright                    Allocated with name '_linetrack_vright_1_82'
0269           1003   ;------------------------------------------------------------
0269           1004   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:263: void linetrack (void) {
0269           1005   ;        -----------------------------------------
0269           1006   ;         function linetrack
0269           1007   ;        -----------------------------------------
0269           1008   _linetrack:
0269           1009   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:267: vleft=Volts_at_Pin(LQFP32_MUX_P2_3);
0269 75820B    1010            mov     dpl,#0x0B
026C 120100    1011            lcall   _Volts_at_Pin
026F 858228    1012            mov     _linetrack_vleft_1_82,dpl
0272 858329    1013            mov     (_linetrack_vleft_1_82 + 1),dph
0275 85F02A    1014            mov     (_linetrack_vleft_1_82 + 2),b
0278 F52B      1015            mov     (_linetrack_vleft_1_82 + 3),a
027A           1016   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:268: vright=Volts_at_Pin(LQFP32_MUX_P2_4);
027A 75820C    1017            mov     dpl,#0x0C
027D 120100    1018            lcall   _Volts_at_Pin
0280 858278    1019            mov     _linetrack_vright_1_82,dpl
0283 858379    1020            mov     (_linetrack_vright_1_82 + 1),dph
0286 85F07A    1021            mov     (_linetrack_vright_1_82 + 2),b
0289 F57B      1022            mov     (_linetrack_vright_1_82 + 3),a
028B           1023   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:270: pwm_Left0 = -1;
028B 7598FF    1024            mov     _pwm_Left0,#0xFF
028E           1025   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:271: pwm_Left1 = ((float)vright*100.0/((float)(vleft+vright)));
028E C078      1026            push    _linetrack_vright_1_82
0290 C079      1027            push    (_linetrack_vright_1_82 + 1)
0292 C07A      1028            push    (_linetrack_vright_1_82 + 2)
0294 C07B      1029            push    (_linetrack_vright_1_82 + 3)
0296 900000    1030            mov     dptr,#0x0000
0299 75F0C8    1031            mov     b,#0xC8
029C 7442      1032            mov     a,#0x42
029E 120100    1033            lcall   ___fsmul
02A1 AA82      1034            mov     r2,dpl
02A3 AB83      1035            mov     r3,dph
02A5 ACF0      1036            mov     r4,b
02A7 FD        1037            mov     r5,a
02A8 E581      1038            mov     a,sp
02AA 24FC      1039            add     a,#0xfc
02AC F581      1040            mov     sp,a
02AE C002      1041            push    ar2
02B0 C003      1042            push    ar3
02B2 C004      1043            push    ar4
02B4 C005      1044            push    ar5
02B6 C078      1045            push    _linetrack_vright_1_82
02B8 C079      1046            push    (_linetrack_vright_1_82 + 1)
02BA C07A      1047            push    (_linetrack_vright_1_82 + 2)
02BC C07B      1048            push    (_linetrack_vright_1_82 + 3)
02BE 852882    1049            mov     dpl,_linetrack_vleft_1_82
02C1 852983    1050            mov     dph,(_linetrack_vleft_1_82 + 1)
02C4 852AF0    1051            mov     b,(_linetrack_vleft_1_82 + 2)
02C7 E52B      1052            mov     a,(_linetrack_vleft_1_82 + 3)
02C9 120100    1053            lcall   ___fsadd
02CC AE82      1054            mov     r6,dpl
02CE AF83      1055            mov     r7,dph
02D0 A8F0      1056            mov     r0,b
02D2 F9        1057            mov     r1,a
02D3 E581      1058            mov     a,sp
02D5 24FC      1059            add     a,#0xfc
02D7 F581      1060            mov     sp,a
02D9 D005      1061            pop     ar5
02DB D004      1062            pop     ar4
02DD D003      1063            pop     ar3
02DF D002      1064            pop     ar2
02E1 C006      1065            push    ar6
02E3 C007      1066            push    ar7
02E5 C000      1067            push    ar0
02E7 C001      1068            push    ar1
02E9 8A82      1069            mov     dpl,r2
02EB 8B83      1070            mov     dph,r3
02ED 8CF0      1071            mov     b,r4
02EF ED        1072            mov     a,r5
02F0 120100    1073            lcall   ___fsdiv
02F3 AA82      1074            mov     r2,dpl
02F5 AB83      1075            mov     r3,dph
02F7 ACF0      1076            mov     r4,b
02F9 FD        1077            mov     r5,a
02FA E581      1078            mov     a,sp
02FC 24FC      1079            add     a,#0xfc
02FE F581      1080            mov     sp,a
0300 8A82      1081            mov     dpl,r2
0302 8B83      1082            mov     dph,r3
0304 8CF0      1083            mov     b,r4
0306 ED        1084            mov     a,r5
0307 120100    1085            lcall   ___fs2schar
030A 858258    1086            mov     _pwm_Left1,dpl
030D           1087   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:272: pwm_Right0 = -1;
030D 7518FF    1088            mov     _pwm_Right0,#0xFF
0310           1089   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:273: pwm_Right1 = (vleft*100.0/(vleft+vright));
0310 C028      1090            push    _linetrack_vleft_1_82
0312 C029      1091            push    (_linetrack_vleft_1_82 + 1)
0314 C02A      1092            push    (_linetrack_vleft_1_82 + 2)
0316 C02B      1093            push    (_linetrack_vleft_1_82 + 3)
0318 900000    1094            mov     dptr,#0x0000
031B 75F0C8    1095            mov     b,#0xC8
031E 7442      1096            mov     a,#0x42
0320 120100    1097            lcall   ___fsmul
0323 AA82      1098            mov     r2,dpl
0325 AB83      1099            mov     r3,dph
0327 ACF0      1100            mov     r4,b
0329 FD        1101            mov     r5,a
032A E581      1102            mov     a,sp
032C 24FC      1103            add     a,#0xfc
032E F581      1104            mov     sp,a
0330 C002      1105            push    ar2
0332 C003      1106            push    ar3
0334 C004      1107            push    ar4
0336 C005      1108            push    ar5
0338 C078      1109            push    _linetrack_vright_1_82
033A C079      1110            push    (_linetrack_vright_1_82 + 1)
033C C07A      1111            push    (_linetrack_vright_1_82 + 2)
033E C07B      1112            push    (_linetrack_vright_1_82 + 3)
0340 852882    1113            mov     dpl,_linetrack_vleft_1_82
0343 852983    1114            mov     dph,(_linetrack_vleft_1_82 + 1)
0346 852AF0    1115            mov     b,(_linetrack_vleft_1_82 + 2)
0349 E52B      1116            mov     a,(_linetrack_vleft_1_82 + 3)
034B 120100    1117            lcall   ___fsadd
034E AE82      1118            mov     r6,dpl
0350 AF83      1119            mov     r7,dph
0352 A8F0      1120            mov     r0,b
0354 F9        1121            mov     r1,a
0355 E581      1122            mov     a,sp
0357 24FC      1123            add     a,#0xfc
0359 F581      1124            mov     sp,a
035B D005      1125            pop     ar5
035D D004      1126            pop     ar4
035F D003      1127            pop     ar3
0361 D002      1128            pop     ar2
0363 C006      1129            push    ar6
0365 C007      1130            push    ar7
0367 C000      1131            push    ar0
0369 C001      1132            push    ar1
036B 8A82      1133            mov     dpl,r2
036D 8B83      1134            mov     dph,r3
036F 8CF0      1135            mov     b,r4
0371 ED        1136            mov     a,r5
0372 120100    1137            lcall   ___fsdiv
0375 AA82      1138            mov     r2,dpl
0377 AB83      1139            mov     r3,dph
0379 ACF0      1140            mov     r4,b
037B FD        1141            mov     r5,a
037C E581      1142            mov     a,sp
037E 24FC      1143            add     a,#0xfc
0380 F581      1144            mov     sp,a
0382 8A82      1145            mov     dpl,r2
0384 8B83      1146            mov     dph,r3
0386 8CF0      1147            mov     b,r4
0388 ED        1148            mov     a,r5
0389 120100    1149            lcall   ___fs2schar
038C 8582D8    1150            mov     _pwm_Right1,dpl
038F           1151   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:275: printf("2.3 = %f, 2.4 = %f, LeftMotor = %d, RightMotor = %d\r", vleft, vright, pwm_Left1, pwm_Right1);
038F AAD8      1152            mov     r2,_pwm_Right1
0391 E5D8      1153            mov     a,_pwm_Right1
0393 33        1154            rlc     a
0394 95E0      1155            subb    a,acc
0396 FB        1156            mov     r3,a
0397 AC58      1157            mov     r4,_pwm_Left1
0399 E558      1158            mov     a,_pwm_Left1
039B 33        1159            rlc     a
039C 95E0      1160            subb    a,acc
039E FD        1161            mov     r5,a
039F C002      1162            push    ar2
03A1 C003      1163            push    ar3
03A3 C004      1164            push    ar4
03A5 C005      1165            push    ar5
03A7 C078      1166            push    _linetrack_vright_1_82
03A9 C079      1167            push    (_linetrack_vright_1_82 + 1)
03AB C07A      1168            push    (_linetrack_vright_1_82 + 2)
03AD C07B      1169            push    (_linetrack_vright_1_82 + 3)
03AF C028      1170            push    _linetrack_vleft_1_82
03B1 C029      1171            push    (_linetrack_vleft_1_82 + 1)
03B3 C02A      1172            push    (_linetrack_vleft_1_82 + 2)
03B5 C02B      1173            push    (_linetrack_vleft_1_82 + 3)
03B7 7448      1174            mov     a,#__str_0
03B9 C0E0      1175            push    acc
03BB 74A0      1176            mov     a,#(__str_0 >> 8)
03BD C0E0      1177            push    acc
03BF 7480      1178            mov     a,#0x80
03C1 C0E0      1179            push    acc
03C3 120100    1180            lcall   _printf
03C6 E581      1181            mov     a,sp
03C8 24F1      1182            add     a,#0xf1
03CA F581      1183            mov     sp,a
03CC 22        1184            ret
03CD           1185   ;------------------------------------------------------------
03CD           1186   ;Allocation info for local variables in function 'main'
03CD           1187   ;------------------------------------------------------------
03CD           1188   ;------------------------------------------------------------
03CD           1189   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:281: void main (void)
03CD           1190   ;        -----------------------------------------
03CD           1191   ;         function main
03CD           1192   ;        -----------------------------------------
03CD           1193   _main:
03CD           1194   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:284: MOTOR_LEFT0 =0;
03CD C295      1195            clr     _P1_5
03CF           1196   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:285: MOTOR_LEFT1 =0;
03CF C296      1197            clr     _P1_6
03D1           1198   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:286: MOTOR_RIGHT0 =0;
03D1 C2A0      1199            clr     _P2_0
03D3           1200   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:287: MOTOR_RIGHT1 =0;
03D3 C2A1      1201            clr     _P2_1
03D5           1202   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:290: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
03D5 74C8      1203            mov     a,#__str_1
03D7 C0E0      1204            push    acc
03D9 74A0      1205            mov     a,#(__str_1 >> 8)
03DB C0E0      1206            push    acc
03DD 7480      1207            mov     a,#0x80
03DF C0E0      1208            push    acc
03E1 120100    1209            lcall   _printf
03E4 1581      1210            dec     sp
03E6 1581      1211            dec     sp
03E8 1581      1212            dec     sp
03EA           1213   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:299: InitPinADC(2, 3); // Configure P2.3 as analog input
03EA 75F803    1214            mov     _InitPinADC_PARM_2,#0x03
03ED 758202    1215            mov     dpl,#0x02
03F0 120100    1216            lcall   _InitPinADC
03F3           1217   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:300: InitPinADC(2, 4); // Configure P2.4 as analog input
03F3 75F804    1218            mov     _InitPinADC_PARM_2,#0x04
03F6 758202    1219            mov     dpl,#0x02
03F9 120100    1220            lcall   _InitPinADC
03FC           1221   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:301: InitADC();
03FC 120100    1222            lcall   _InitADC
03FF           1223   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:303: while(1)
03FF           1224   L013002?:
03FF           1225   ;        C:\Users\Lucy\Documents\2016-2017\ELEC 291\ELEC291P2\src\motors.c:306: linetrack();
03FF 120100    1226            lcall   _linetrack
0402 8001      1227            sjmp    L013002?
0404           1228            rseg R_CSEG
0404           1229   
0000           1230            rseg R_XINIT
0000           1231   
0000           1232            rseg R_CONST
0000           1233   __str_0:
0000 322E3320  1234            db '2.3 = %f, 2.4 = %f, LeftMotor = %d, RightMotor = %d'
     3D202566
     2C20322E
     34203D20
     25662C20
     4C656674
     4D6F746F
     72203D20
     25642C20
     52696768
     744D6F74
     6F72203D
     202564
0033 0D        1235            db 0x0D
0034 00        1236            db 0x00
0035           1237   __str_1:
0035 1B        1238            db 0x1B
0036 5B324A    1239            db '[2J'
0039 00        1240            db 0x00
003A           1241   
002E           1242            CSEG
002E           1243   
002E           1244   end
